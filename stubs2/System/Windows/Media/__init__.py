# encoding: utf-8
# module System.Windows.Media calls itself Media
# from PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
# by generator 1.145
""" NamespaceTracker represent a CLS namespace. """
# no imports

# no functions
# classes

class HitTestResult(object):
    """ Provides the base class for several derived classes that represents the return value from a hit test. """
    VisualHit = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual object that was hit.

Get: VisualHit(self: HitTestResult) -> DependencyObject

"""



class PointHitTestResult(HitTestResult):
    """
    Represents the results of a hit test that uses a System.Windows.Point as a hit test parameter.
    
    PointHitTestResult(visualHit: Visual, pointHit: Point)
    """
    @staticmethod # known case of __new__
    def __new__(self, visualHit, pointHit):
        """ __new__(cls: type, visualHit: Visual, pointHit: Point) """
        pass

    PointHit = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the point value that is returned from a hit test result.

Get: PointHit(self: PointHitTestResult) -> Point

"""

    VisualHit = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual object that is returned from a hit test result.

Get: VisualHit(self: PointHitTestResult) -> Visual

"""



class AdornerHitTestResult(PointHitTestResult):
    """ Represents data returned from calling the System.Windows.Documents.AdornerLayer.AdornerHitTest(System.Windows.Point) method. """
    Adorner = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual that was hit.

Get: Adorner(self: AdornerHitTestResult) -> Adorner

"""



class AlignmentX(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes how content is positioned horizontally in a container.
    
    enum AlignmentX, values: Center (1), Left (0), Right (2)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Center = None
    Left = None
    Right = None
    value__ = None


class AlignmentY(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes how content is positioned vertically in a container.
    
    enum AlignmentY, values: Bottom (2), Center (1), Top (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bottom = None
    Center = None
    Top = None
    value__ = None


class PathSegment(Animatable, ISealable, IAnimatable, IResource):
    """ Represents a segment of a System.Windows.Media.PathFigure object. """
    def Clone(self):
        """
        Clone(self: PathSegment) -> PathSegment
        
            Creates a modifiable copy of this System.Windows.Media.PathSegment by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PathSegment) -> PathSegment
        
            Creates a modifiable copy of this System.Windows.Media.PathSegment object by making deep copies of its values. This method does not copy resource references, data bindings, and animations, although it does 
             copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    IsSmoothJoin = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether the join between this System.Windows.Media.PathSegment and the previous System.Windows.Media.PathSegment is treated as a corner when it is stroked with a System.Windows.Media.Pen.

Get: IsSmoothJoin(self: PathSegment) -> bool

Set: IsSmoothJoin(self: PathSegment) = value
"""

    IsStroked = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether the segment is stroked.

Get: IsStroked(self: PathSegment) -> bool

Set: IsStroked(self: PathSegment) = value
"""


    IsSmoothJoinProperty = None
    IsStrokedProperty = None


class ArcSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Represents an elliptical arc between two points.
    
    ArcSegment()
    ArcSegment(point: Point, size: Size, rotationAngle: float, isLargeArc: bool, sweepDirection: SweepDirection, isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: ArcSegment) -> ArcSegment
        
            Creates a modifiable clone of this System.Windows.Media.ArcSegment, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings 
             (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: ArcSegment) -> ArcSegment
        
            Creates a modifiable clone of this System.Windows.Media.ArcSegment object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: ArcSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, point=None, size=None, rotationAngle=None, isLargeArc=None, sweepDirection=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, point: Point, size: Size, rotationAngle: float, isLargeArc: bool, sweepDirection: SweepDirection, isStroked: bool)
        """
        pass

    IsLargeArc = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether the arc should be greater than 180 degrees.

Get: IsLargeArc(self: ArcSegment) -> bool

Set: IsLargeArc(self: ArcSegment) = value
"""

    Point = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the endpoint of the elliptical arc.

Get: Point(self: ArcSegment) -> Point

Set: Point(self: ArcSegment) = value
"""

    RotationAngle = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the amount (in degrees) by which the ellipse is rotated about the x-axis.

Get: RotationAngle(self: ArcSegment) -> float

Set: RotationAngle(self: ArcSegment) = value
"""

    Size = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x- and y-radius of the arc as a System.Windows.Size structure.

Get: Size(self: ArcSegment) -> Size

Set: Size(self: ArcSegment) = value
"""

    SweepDirection = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies whether the arc is drawn in the System.Windows.Media.SweepDirection.Clockwise or System.Windows.Media.SweepDirection.Counterclockwise direction.

Get: SweepDirection(self: ArcSegment) -> SweepDirection

Set: SweepDirection(self: ArcSegment) = value
"""


    IsLargeArcProperty = None
    PointProperty = None
    RotationAngleProperty = None
    SizeProperty = None
    SweepDirectionProperty = None


class BezierSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Represents a cubic Bezier curve drawn between two points.
    
    BezierSegment()
    BezierSegment(point1: Point, point2: Point, point3: Point, isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: BezierSegment) -> BezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.BezierSegment, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: BezierSegment) -> BezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.BezierSegment object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: BezierSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, point1=None, point2=None, point3=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, point1: Point, point2: Point, point3: Point, isStroked: bool)
        """
        pass

    Point1 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the first control point of the curve.

Get: Point1(self: BezierSegment) -> Point

Set: Point1(self: BezierSegment) = value
"""

    Point2 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the second control point of the curve.

Get: Point2(self: BezierSegment) -> Point

Set: Point2(self: BezierSegment) = value
"""

    Point3 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the end point of the curve.

Get: Point3(self: BezierSegment) -> Point

Set: Point3(self: BezierSegment) = value
"""


    Point1Property = None
    Point2Property = None
    Point3Property = None


class CacheMode(Animatable, ISealable, IAnimatable, IResource):
    """ Provides a base implementation for caching a System.Windows.UIElement. """
    def Clone(self):
        """
        Clone(self: CacheMode) -> CacheMode
        
            Creates a modifiable clone of the System.Windows.Media.CacheMode, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might no 
             longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: CacheMode) -> CacheMode
        
            Creates a modifiable clone (deep copy) of the System.Windows.Media.CacheMode using its current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass


class BitmapCache(CacheMode, ISealable, IAnimatable, IResource):
    """
    Creates and caches a bitmap representation of a System.Windows.UIElement.
    
    BitmapCache()
    BitmapCache(renderAtScale: float)
    """
    def Clone(self):
        """
        Clone(self: BitmapCache) -> BitmapCache
        
            Creates a modifiable clone of the System.Windows.Media.BitmapCache, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which might 
             no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: BitmapCache) -> BitmapCache
        
            Creates a modifiable clone (deep copy) of the System.Windows.Media.BitmapCache using its current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: BitmapCache) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, renderAtScale=None):
        """
        __new__(cls: type)
        __new__(cls: type, renderAtScale: float)
        """
        pass

    EnableClearType = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.

Get: EnableClearType(self: BitmapCache) -> bool

Set: EnableClearType(self: BitmapCache) = value
"""

    RenderAtScale = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates the scale that is applied to the bitmap.

Get: RenderAtScale(self: BitmapCache) -> float

Set: RenderAtScale(self: BitmapCache) = value
"""

    SnapsToDevicePixels = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.

Get: SnapsToDevicePixels(self: BitmapCache) -> bool

Set: SnapsToDevicePixels(self: BitmapCache) = value
"""


    EnableClearTypeProperty = None
    RenderAtScaleProperty = None
    SnapsToDevicePixelsProperty = None


class Brush(Animatable, ISealable, IAnimatable, IResource, IFormattable):
    """ Defines objects used to paint graphical objects. Classes that derive from System.Windows.Media.Brush describe how the area is painted. """
    def Clone(self):
        """
        Clone(self: Brush) -> Brush
        
            Creates a modifiable clone of this System.Windows.Media.Brush, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but 
             they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: Brush) -> Brush
        
            Creates a modifiable clone of this System.Windows.Media.Brush object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: Brush, provider: IFormatProvider) -> str
        
            Creates a string representation of this object based on the specified culture-specific formatting information.
        
            provider: Culture-specific formatting information, or null to use the default formatting of the current culture.
            Returns: A string representation of this object.
        ToString(self: Brush) -> str
        
            Return string representation of this System.Windows.Media.Brush.
            Returns: A string representation of this object.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Opacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the degree of opacity of a System.Windows.Media.Brush.

Get: Opacity(self: Brush) -> float

Set: Opacity(self: Brush) = value
"""

    RelativeTransform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the transformation that is applied to the brush using relative coordinates.

Get: RelativeTransform(self: Brush) -> Transform

Set: RelativeTransform(self: Brush) = value
"""

    Transform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the transformation that is applied to the brush. This transformation is applied after the brush's output has been mapped and positioned.

Get: Transform(self: Brush) -> Transform

Set: Transform(self: Brush) = value
"""


    OpacityProperty = None
    RelativeTransformProperty = None
    TransformProperty = None


class BitmapCacheBrush(Brush, ISealable, IAnimatable, IResource, IFormattable, ICyclicBrush):
    """
    Paints an area with cached content.
    
    BitmapCacheBrush()
    BitmapCacheBrush(visual: Visual)
    """
    def Clone(self):
        """
        Clone(self: BitmapCacheBrush) -> BitmapCacheBrush
        
            Creates a modifiable clone of the System.Windows.Media.BitmapCacheBrush, making deep copies of the object's values. When copying the object's dependency properties, this method copies expressions (which 
             might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: BitmapCacheBrush) -> BitmapCacheBrush
        
            Creates a modifiable clone (deep copy) of the System.Windows.Media.BitmapCacheBrush using its current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: BitmapCacheBrush) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """ OnPropertyChanged(self: BitmapCacheBrush, e: DependencyPropertyChangedEventArgs) """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, visual=None):
        """
        __new__(cls: type)
        __new__(cls: type, visual: Visual)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    AutoLayoutContent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether layout is applied to the contents of this brush.

Get: AutoLayoutContent(self: BitmapCacheBrush) -> bool

Set: AutoLayoutContent(self: BitmapCacheBrush) = value
"""

    BitmapCache = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a System.Windows.Media.CacheMode that represents cached content.

Get: BitmapCache(self: BitmapCacheBrush) -> BitmapCache

Set: BitmapCache(self: BitmapCacheBrush) = value
"""

    Target = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the target visual to cache.

Get: Target(self: BitmapCacheBrush) -> Visual

Set: Target(self: BitmapCacheBrush) = value
"""


    AutoLayoutContentProperty = None
    BitmapCacheProperty = None
    TargetProperty = None


class BitmapScalingMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies which algorithm is used to scale bitmap images.
    
    enum BitmapScalingMode, values: Fant (2), HighQuality (2), Linear (1), LowQuality (1), NearestNeighbor (3), Unspecified (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Fant = None
    HighQuality = None
    Linear = None
    LowQuality = None
    NearestNeighbor = None
    Unspecified = None
    value__ = None


class BrushConverter(TypeConverter):
    """
    Used to convert a System.Windows.Media.Brush object to or from another object type.
    
    BrushConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: BrushConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether this class can convert an object of a given type to a System.Windows.Media.Brush object.
        
            context: The conversion context.
            sourceType: The type from which to convert.
            Returns: Returns true if conversion is possible (object is string type); otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: BrushConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether this class can convert an object of a given type to the specified destination type.
        
            context: The conversion context.
            destinationType: The destination type.
            Returns: Returns true if conversion is possible; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: BrushConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Converts from an object of a given type to a System.Windows.Media.Brush object.
        
            context: The conversion context.
            culture: The culture information that applies to the conversion.
            value: The object to convert.
            Returns: Returns a new System.Windows.Media.Brush object if successful; otherwise, NULL.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: BrushConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Converts a System.Windows.Media.Brush object to a specified type, using the specified context and culture information.
        
            context: The conversion context.
            culture: The current culture information.
            value: The System.Windows.Media.Brush to convert.
            destinationType: The destination type that the value object is converted to.
            Returns: An object that represents the converted value.
        """
        pass


class Brushes(object):
    """ Implements a set of predefined System.Windows.Media.SolidColorBrush objects. """
    AliceBlue = None
    AntiqueWhite = None
    Aqua = None
    Aquamarine = None
    Azure = None
    Beige = None
    Bisque = None
    Black = None
    BlanchedAlmond = None
    Blue = None
    BlueViolet = None
    Brown = None
    BurlyWood = None
    CadetBlue = None
    Chartreuse = None
    Chocolate = None
    Coral = None
    CornflowerBlue = None
    Cornsilk = None
    Crimson = None
    Cyan = None
    DarkBlue = None
    DarkCyan = None
    DarkGoldenrod = None
    DarkGray = None
    DarkGreen = None
    DarkKhaki = None
    DarkMagenta = None
    DarkOliveGreen = None
    DarkOrange = None
    DarkOrchid = None
    DarkRed = None
    DarkSalmon = None
    DarkSeaGreen = None
    DarkSlateBlue = None
    DarkSlateGray = None
    DarkTurquoise = None
    DarkViolet = None
    DeepPink = None
    DeepSkyBlue = None
    DimGray = None
    DodgerBlue = None
    Firebrick = None
    FloralWhite = None
    ForestGreen = None
    Fuchsia = None
    Gainsboro = None
    GhostWhite = None
    Gold = None
    Goldenrod = None
    Gray = None
    Green = None
    GreenYellow = None
    Honeydew = None
    HotPink = None
    IndianRed = None
    Indigo = None
    Ivory = None
    Khaki = None
    Lavender = None
    LavenderBlush = None
    LawnGreen = None
    LemonChiffon = None
    LightBlue = None
    LightCoral = None
    LightCyan = None
    LightGoldenrodYellow = None
    LightGray = None
    LightGreen = None
    LightPink = None
    LightSalmon = None
    LightSeaGreen = None
    LightSkyBlue = None
    LightSlateGray = None
    LightSteelBlue = None
    LightYellow = None
    Lime = None
    LimeGreen = None
    Linen = None
    Magenta = None
    Maroon = None
    MediumAquamarine = None
    MediumBlue = None
    MediumOrchid = None
    MediumPurple = None
    MediumSeaGreen = None
    MediumSlateBlue = None
    MediumSpringGreen = None
    MediumTurquoise = None
    MediumVioletRed = None
    MidnightBlue = None
    MintCream = None
    MistyRose = None
    Moccasin = None
    NavajoWhite = None
    Navy = None
    OldLace = None
    Olive = None
    OliveDrab = None
    Orange = None
    OrangeRed = None
    Orchid = None
    PaleGoldenrod = None
    PaleGreen = None
    PaleTurquoise = None
    PaleVioletRed = None
    PapayaWhip = None
    PeachPuff = None
    Peru = None
    Pink = None
    Plum = None
    PowderBlue = None
    Purple = None
    Red = None
    RosyBrown = None
    RoyalBlue = None
    SaddleBrown = None
    Salmon = None
    SandyBrown = None
    SeaGreen = None
    SeaShell = None
    Sienna = None
    Silver = None
    SkyBlue = None
    SlateBlue = None
    SlateGray = None
    Snow = None
    SpringGreen = None
    SteelBlue = None
    Tan = None
    Teal = None
    Thistle = None
    Tomato = None
    Transparent = None
    Turquoise = None
    Violet = None
    Wheat = None
    White = None
    WhiteSmoke = None
    Yellow = None
    YellowGreen = None


class BrushMappingMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies the coordinate system used by a System.Windows.Media.Brush.
    
    enum BrushMappingMode, values: Absolute (0), RelativeToBoundingBox (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Absolute = None
    RelativeToBoundingBox = None
    value__ = None


class CacheModeConverter(TypeConverter):
    """
    Converts a System.Windows.Media.CacheMode from one data type to another.
    
    CacheModeConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: CacheModeConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether this System.Windows.Media.CacheModeConverter can convert an instance of the specified type to a System.Windows.Media.CacheMode, using the specified context.
        
            context: An System.ComponentModel.ITypeDescriptorContext that provides a format context.
            sourceType: A System.Type that specifies the type you want to convert from.
            Returns: true if this System.Windows.Media.CacheModeConverter can perform the conversion; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: CacheModeConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether this System.Windows.Media.CacheModeConverter can convert a System.Windows.Media.CacheMode to an instance of a specified type, using the specified context.
        
            context: A System.ComponentModel.ITypeDescriptorContext that provides a format context.
            destinationType: A type representing the type to convert to.
            Returns: true if this System.Windows.Media.CacheModeConverter can perform the conversion; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: CacheModeConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Converts a specified object to a System.Windows.Media.CacheMode.
        
            context: An System.ComponentModel.ITypeDescriptorContext that provides a format context.
            culture: A System.Globalization.CultureInfo that holds information about a specific culture.
            value: The System.Object to be converted.
            Returns: The System.Windows.Media.CacheMode that is created by converting value; otherwise, an exception is raised.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: CacheModeConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Converts a System.Windows.Media.CacheMode to the specified type.
        
            context: An System.ComponentModel.ITypeDescriptorContext that provides a format context.
            culture: A System.Globalization.CultureInfo that represents information about a culture, such as language and calendar system. Can be null.
            value: The System.Object to convert.
            destinationType: The System.Type to convert to.
            Returns: The converted object.
        """
        pass


class CachingHint(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies whether to cache tiled brush objects.
    
    enum CachingHint, values: Cache (1), Unspecified (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Cache = None
    Unspecified = None
    value__ = None


class CharacterMetrics(object):
    """
    Represents the metrics used to lay out a character in a device font.
    
    CharacterMetrics()
    CharacterMetrics(metrics: str)
    """
    def Equals(self, obj):
        """
        Equals(self: CharacterMetrics, obj: object) -> bool
        
            Determines whether the specified System.Windows.Media.CharacterMetrics object is equal to the current System.Windows.Media.CharacterMetrics object.
        
            obj: The System.Windows.Media.CharacterMetrics object to compare to the current System.Windows.Media.CharacterMetrics object.
            Returns: true if the objects are equal; otherwise, false.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: CharacterMetrics) -> int
        
            Creates a hash code from the metric values of the System.Windows.Media.CharacterMetrics object.
            Returns: A value of type System.Int32.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    @staticmethod # known case of __new__
    def __new__(self, metrics=None):
        """
        __new__(cls: type)
        __new__(cls: type, metrics: str)
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    Baseline = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the baseline value for the character.

Get: Baseline(self: CharacterMetrics) -> float

"""

    BlackBoxHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the height of the black box for the character.

Get: BlackBoxHeight(self: CharacterMetrics) -> float

"""

    BlackBoxWidth = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the width of the black box for the character.

Get: BlackBoxWidth(self: CharacterMetrics) -> float

"""

    BottomSideBearing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the recommended white space below the black box.

Get: BottomSideBearing(self: CharacterMetrics) -> float

"""

    LeftSideBearing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the recommended white space to the left of the black box.

Get: LeftSideBearing(self: CharacterMetrics) -> float

"""

    Metrics = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a comma-delimited string representing metric values.

Get: Metrics(self: CharacterMetrics) -> str

Set: Metrics(self: CharacterMetrics) = value
"""

    RightSideBearing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the recommended white space to the right of the black box.

Get: RightSideBearing(self: CharacterMetrics) -> float

"""

    TopSideBearing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the recommended white space above the black box.

Get: TopSideBearing(self: CharacterMetrics) -> float

"""



class CharacterMetricsDictionary(object, IDictionary[int, CharacterMetrics], ICollection[KeyValuePair[int, CharacterMetrics]], IEnumerable[KeyValuePair[int, CharacterMetrics]], IEnumerable, IDictionary, ICollection):
    """ Represents a dictionary of System.Windows.Media.CharacterMetrics objects for a device font that is indexed by Unicode scalar values. """
    def Add(self, *__args):
        """
        Add(self: CharacterMetricsDictionary, key: int, value: CharacterMetrics)
            Adds a character code and associated System.Windows.Media.CharacterMetrics value to the collection.
        
            key: A value of type System.Int32 representing the character code.
            value: A value of type System.Windows.Media.CharacterMetrics.
        Add(self: CharacterMetricsDictionary, item: KeyValuePair[int, CharacterMetrics])
        """
        pass

    def Clear(self):
        """
        Clear(self: CharacterMetricsDictionary)
            Removes all elements from the collection.
        """
        pass

    def Contains(self, item):
        """ Contains(self: CharacterMetricsDictionary, item: KeyValuePair[int, CharacterMetrics]) -> bool """
        pass

    def ContainsKey(self, key):
        """
        ContainsKey(self: CharacterMetricsDictionary, key: int) -> bool
        
            Determines whether the collection contains the specified character code.
        
            key: A value of type System.Int32 representing the character code.
            Returns: true if the dictionary contains key; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """ CopyTo(self: CharacterMetricsDictionary, array: Array[KeyValuePair[int, CharacterMetrics]], index: int) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: CharacterMetricsDictionary) -> IEnumerator[KeyValuePair[int, CharacterMetrics]]
        
            Returns an enumerator that iterates through the collection.
            Returns: An enumerator that iterates through the collection.
        """
        pass

    def Remove(self, *__args):
        """
        Remove(self: CharacterMetricsDictionary, key: int) -> bool
        
            Removes the element from System.Windows.Media.CharacterMetricsDictionary based on the specified character code.
        
            key: A value of type System.Int32 representing the character code.
            Returns: true if the System.Windows.Media.CharacterMetrics item was successfully deleted; otherwise false.
        Remove(self: CharacterMetricsDictionary, item: KeyValuePair[int, CharacterMetrics]) -> bool
        """
        pass

    def TryGetValue(self, key, value):
        """
        TryGetValue(self: CharacterMetricsDictionary, key: int) -> (bool, CharacterMetrics)
        
            Retrieves the System.Windows.Media.CharacterMetrics value in the dictionary for a specified character code value.
        
            key: A value of type System.Int32.
            Returns: true if the dictionary contains an entry for key; otherwise false.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+yx.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: IDictionary[int, CharacterMetrics], key: int) -> bool
        __contains__(self: IDictionary, key: object) -> bool
        
            Determines whether the System.Collections.IDictionary object contains an element with the specified key.
        
            key: The key to locate in the System.Collections.IDictionary object.
            Returns: true if the System.Collections.IDictionary contains an element with the key; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of elements in the collection.

Get: Count(self: CharacterMetricsDictionary) -> int

"""

    IsReadOnly = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value indicating whether the System.Windows.Media.CharacterMetricsDictionary is read-only.

Get: IsReadOnly(self: CharacterMetricsDictionary) -> bool

"""

    Keys = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection of character codes from System.Windows.Media.CharacterMetricsDictionary.

Get: Keys(self: CharacterMetricsDictionary) -> ICollection[int]

"""

    Values = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the collection of System.Windows.Media.CharacterMetrics values in the System.Windows.Media.CharacterMetricsDictionary.

Get: Values(self: CharacterMetricsDictionary) -> ICollection[CharacterMetrics]

"""



class ClearTypeHint(Enum, IComparable, IFormattable, IConvertible):
    """
    An enumeration that specifies a hint to the rendering engine that text can be rendered with ClearType.
    
    enum ClearTypeHint, values: Auto (0), Enabled (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Auto = None
    Enabled = None
    value__ = None


class Color(object, IFormattable, IEquatable[Color]):
    """ Describes a color in terms of alpha, red, green, and blue channels. """
    @staticmethod
    def Add(color1, color2):
        """
        Add(color1: Color, color2: Color) -> Color
        
            Adds two System.Windows.Media.Color structures.
        
            color1: The first System.Windows.Media.Color structure to add.
            color2: The second System.Windows.Media.Color structure to add.
            Returns: A new System.Windows.Media.Color structure whose color values are the results of the addition operation.
        """
        pass

    @staticmethod
    def AreClose(color1, color2):
        """
        AreClose(color1: Color, color2: Color) -> bool
        
            Compares two System.Windows.Media.Color structures for fuzzy equality.
        
            color1: The first color to compare.
            color2: The second color to compare.
            Returns: true if color1 and color2 are nearly identical; otherwise, false.
        """
        pass

    def Clamp(self):
        """
        Clamp(self: Color)
            Sets the ScRGB channels of the color to within the gamut of 0 to 1, if they are outside that range.
        """
        pass

    @staticmethod
    def Equals(*__args):
        """
        Equals(self: Color, o: object) -> bool
        
            Tests whether the specified object is a System.Windows.Media.Color structure and is equivalent to the current color.
        
            o: The object to compare to the current System.Windows.Media.Color structure.
            Returns: true if the specified object is a System.Windows.Media.Color structure and is identical to the current System.Windows.Media.Color structure; otherwise, false.
        Equals(self: Color, color: Color) -> bool
        
            Tests whether the specified System.Windows.Media.Color structure is identical to the current color.
        
            color: The System.Windows.Media.Color structure to compare to the current System.Windows.Media.Color structure.
            Returns: true if the specified System.Windows.Media.Color structure is identical to the current System.Windows.Media.Color structure; otherwise, false.
        Equals(color1: Color, color2: Color) -> bool
        
            Tests whether two System.Windows.Media.Color structures are identical.
        
            color1: The first System.Windows.Media.Color structure to compare.
            color2: The second System.Windows.Media.Color structure to compare.
            Returns: true if color1 and color2 are exactly identical; otherwise, false.
        """
        pass

    @staticmethod
    def FromArgb(a, r, g, b):
        """
        FromArgb(a: Byte, r: Byte, g: Byte, b: Byte) -> Color
        
            Creates a new System.Windows.Media.Color structure by using the specified sRGB alpha channel and color channel values.
        
            a: The alpha channel, System.Windows.Media.Color.A, of the new color.
            r: The red channel, System.Windows.Media.Color.R, of the new color.
            g: The green channel, System.Windows.Media.Color.G, of the new color.
            b: The blue channel, System.Windows.Media.Color.B, of the new color.
            Returns: A System.Windows.Media.Color structure with the specified values.
        """
        pass

    @staticmethod
    def FromAValues(a, values, profileUri):
        """
        FromAValues(a: Single, values: Array[Single], profileUri: Uri) -> Color
        
            Creates a new System.Windows.Media.Color structure by using the specified alpha channel, color channel values, and color profile.
        
            a: The alpha channel for the new color.
            values: A collection of values that specify the color channels for the new color. These values map to the profileUri.
            profileUri: The International Color Consortium (ICC) or Image Color Management (ICM) color profile for the new color.
            Returns: A System.Windows.Media.Color structure with the specified values.
        """
        pass

    @staticmethod
    def FromRgb(r, g, b):
        """
        FromRgb(r: Byte, g: Byte, b: Byte) -> Color
        
            Creates a new System.Windows.Media.Color structure by using the specified sRGB color channel values.
        
            r: The sRGB red channel, System.Windows.Media.Color.R, of the new color.
            g: The sRGB green channel, System.Windows.Media.Color.G, of the new color.
            b: The sRGB blue channel, System.Windows.Media.Color.B, of the new color.
            Returns: A System.Windows.Media.Color structure with the specified values and an alpha channel value of 1.
        """
        pass

    @staticmethod
    def FromScRgb(a, r, g, b):
        """
        FromScRgb(a: Single, r: Single, g: Single, b: Single) -> Color
        
            Creates a new System.Windows.Media.Color structure by using the specified ScRGB alpha channel and color channel values.
        
            a: The ScRGB alpha channel, System.Windows.Media.Color.ScA, of the new color.
            r: The ScRGB red channel, System.Windows.Media.Color.ScR, of the new color.
            g: The ScRGB green channel, System.Windows.Media.Color.ScG, of the new color.
            b: The ScRGB blue channel, System.Windows.Media.Color.ScB, of the new color.
            Returns: A System.Windows.Media.Color structure with the specified values.
        """
        pass

    @staticmethod
    def FromValues(values, profileUri):
        """
        FromValues(values: Array[Single], profileUri: Uri) -> Color
        
            Creates a new System.Windows.Media.Color structure by using the specified color channel values and color profile.
        
            values: A collection of values that specify the color channels for the new color. These values map to the profileUri.
            profileUri: The International Color Consortium (ICC) or Image Color Management (ICM) color profile for the new color.
            Returns: A System.Windows.Media.Color structure with the specified values and an alpha channel value of 1.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: Color) -> int
        
            Gets a hash code for the current System.Windows.Media.Color structure.
            Returns: A hash code for the current System.Windows.Media.Color structure.
        """
        pass

    def GetNativeColorValues(self):
        """
        GetNativeColorValues(self: Color) -> Array[Single]
        
            Gets the color channel values of the color.
            Returns: An array of color channel values.
        """
        pass

    @staticmethod
    def Multiply(color, coefficient):
        """
        Multiply(color: Color, coefficient: Single) -> Color
        
            Multiplies the alpha, red, blue, and green channels of the specified System.Windows.Media.Color structure by the specified value.
        
            color: The System.Windows.Media.Color to be multiplied.
            coefficient: The value to multiply by.
            Returns: A new System.Windows.Media.Color structure whose color values are the results of the multiplication operation.
        """
        pass

    @staticmethod
    def Subtract(color1, color2):
        """
        Subtract(color1: Color, color2: Color) -> Color
        
            Subtracts a System.Windows.Media.Color structure from a System.Windows.Media.Color structure.
        
            color1: The System.Windows.Media.Color structure to be subtracted from.
            color2: The System.Windows.Media.Color structure to subtract from color1.
            Returns: A new System.Windows.Media.Color structure whose color values are the results of the subtraction operation.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: Color, provider: IFormatProvider) -> str
        
            Creates a string representation of the color by using the ScRGB channels and the specified format provider.
        
            provider: Culture-specific formatting information.
            Returns: The string representation of the color.
        ToString(self: Color) -> str
        
            Creates a string representation of the color using the ScRGB channels.
            Returns: The string representation of the color.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __mul__(self, *args): #cannot find CLR method
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __radd__(self, *args): #cannot find CLR method
        """
        __radd__(color1: Color, color2: Color) -> Color
        
            Adds two System.Windows.Media.Color structures.
        
            color1: The first System.Windows.Media.Color structure to add.
            color2: The second System.Windows.Media.Color structure to add.
            Returns: A new System.Windows.Media.Color structure whose color values are the results of the addition operation.
        """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __rsub__(self, *args): #cannot find CLR method
        """
        __rsub__(color1: Color, color2: Color) -> Color
        
            Subtracts a System.Windows.Media.Color structure from a System.Windows.Media.Color structure.
        
            color1: The System.Windows.Media.Color structure to be subtracted from.
            color2: The System.Windows.Media.Color structure to subtract from color1.
            Returns: A new System.Windows.Media.Color structure whose color values are the results of the subtraction operation.
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    def __sub__(self, *args): #cannot find CLR method
        """ x.__sub__(y) <==> x-y """
        pass

    A = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the sRGB alpha channel value of the color.

Get: A(self: Color) -> Byte

Set: A(self: Color) = value
"""

    B = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the sRGB blue channel value of the color.

Get: B(self: Color) -> Byte

Set: B(self: Color) = value
"""

    ColorContext = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the International Color Consortium (ICC) or Image Color Management (ICM) color profile of the color.

Get: ColorContext(self: Color) -> ColorContext

"""

    G = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the sRGB green channel value of the color.

Get: G(self: Color) -> Byte

Set: G(self: Color) = value
"""

    R = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the sRGB red channel value of the color.

Get: R(self: Color) -> Byte

Set: R(self: Color) = value
"""

    ScA = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the ScRGB alpha channel value of the color.

Get: ScA(self: Color) -> Single

Set: ScA(self: Color) = value
"""

    ScB = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the ScRGB blue channel value of the color.

Get: ScB(self: Color) -> Single

Set: ScB(self: Color) = value
"""

    ScG = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the ScRGB green channel value of the color.

Get: ScG(self: Color) -> Single

Set: ScG(self: Color) = value
"""

    ScR = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the ScRGB red channel value of the color.

Get: ScR(self: Color) -> Single

Set: ScR(self: Color) = value
"""



class ColorContext(object):
    """
    Represents the International Color Consortium (ICC) or Image Color Management (ICM) color profile that is associated with a bitmap image.
    
    ColorContext(profileUri: Uri)
    ColorContext(pixelFormat: PixelFormat)
    """
    def Equals(self, obj):
        """
        Equals(self: ColorContext, obj: object) -> bool
        
            Determines whether an System.Object is equal to an instance of System.Windows.Media.ColorContext.
        
            obj: Identifies the System.Object to compare for equality.
            Returns: true if the supplied System.Object is equal to this instance of System.Windows.Media.ColorContext; otherwise, false.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: ColorContext) -> int
        
            Gets the hash code for this instance of System.Windows.Media.ColorContext.
            Returns: An System.Int32 that represents the hash code for the object.
        """
        pass

    def OpenProfileStream(self):
        """
        OpenProfileStream(self: ColorContext) -> Stream
        
            Returns a readable System.IO.Stream of raw color profile data.
            Returns: A readable System.IO.Stream of raw color profile data.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type, profileUri: Uri)
        __new__(cls: type, pixelFormat: PixelFormat)
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    ProfileUri = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Uri that represents the location of a International Color Consortium (ICC) or Image Color Management (ICM) color profile.

Get: ProfileUri(self: ColorContext) -> Uri

"""



class ColorConverter(TypeConverter):
    """
    Converts instances of other types to and from an instance of System.Windows.Media.Color.
    
    ColorConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: ColorConverter, td: ITypeDescriptorContext, t: Type) -> bool
        
            Determines whether an object can be converted from a given type to an instance of a System.Windows.Media.Color.
        
            td: Describes the context information of a type.
            t: The type of the source that is being evaluated for conversion.
            Returns: true if the type can be converted to a System.Windows.Media.Color; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: ColorConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of a System.Windows.Media.Color can be converted to a different type.
        
            context: Describes the context information of a type.
            destinationType: The desired type this System.Windows.Media.Color is being evaluated for conversion.
            Returns: true if this System.Windows.Media.Color can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: ColorConverter, td: ITypeDescriptorContext, ci: CultureInfo, value: object) -> object
        
            Attempts to convert the specified object to a System.Windows.Media.Color.
        
            td: Describes the context information of a type.
            ci: Cultural information to respect during conversion.
            value: The object being converted.
            Returns: The System.Windows.Media.Color created from converting value.
        """
        pass

    @staticmethod
    def ConvertFromString(*__args):
        """
        ConvertFromString(value: str) -> object
        
            Attempts to convert a string to a System.Windows.Media.Color.
        
            value: The string to convert to a System.Windows.Media.Color.
            Returns: A System.Windows.Media.Color that represents the converted text.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: ColorConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert a System.Windows.Media.Color to a specified type.
        
            context: Describes the context information of a type.
            culture: Describes the System.Globalization.CultureInfo of the type being converted.
            value: The System.Windows.Media.Color to convert.
            destinationType: The type to convert this System.Windows.Media.Color to.
            Returns: The object created from converting this System.Windows.Media.Color.
        """
        pass


class ColorInterpolationMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Determines how the colors in a gradient are interpolated.
    
    enum ColorInterpolationMode, values: ScRgbLinearInterpolation (0), SRgbLinearInterpolation (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    ScRgbLinearInterpolation = None
    SRgbLinearInterpolation = None
    value__ = None


class Colors(object):
    """ Implements a set of predefined colors. """
    AliceBlue = None
    AntiqueWhite = None
    Aqua = None
    Aquamarine = None
    Azure = None
    Beige = None
    Bisque = None
    Black = None
    BlanchedAlmond = None
    Blue = None
    BlueViolet = None
    Brown = None
    BurlyWood = None
    CadetBlue = None
    Chartreuse = None
    Chocolate = None
    Coral = None
    CornflowerBlue = None
    Cornsilk = None
    Crimson = None
    Cyan = None
    DarkBlue = None
    DarkCyan = None
    DarkGoldenrod = None
    DarkGray = None
    DarkGreen = None
    DarkKhaki = None
    DarkMagenta = None
    DarkOliveGreen = None
    DarkOrange = None
    DarkOrchid = None
    DarkRed = None
    DarkSalmon = None
    DarkSeaGreen = None
    DarkSlateBlue = None
    DarkSlateGray = None
    DarkTurquoise = None
    DarkViolet = None
    DeepPink = None
    DeepSkyBlue = None
    DimGray = None
    DodgerBlue = None
    Firebrick = None
    FloralWhite = None
    ForestGreen = None
    Fuchsia = None
    Gainsboro = None
    GhostWhite = None
    Gold = None
    Goldenrod = None
    Gray = None
    Green = None
    GreenYellow = None
    Honeydew = None
    HotPink = None
    IndianRed = None
    Indigo = None
    Ivory = None
    Khaki = None
    Lavender = None
    LavenderBlush = None
    LawnGreen = None
    LemonChiffon = None
    LightBlue = None
    LightCoral = None
    LightCyan = None
    LightGoldenrodYellow = None
    LightGray = None
    LightGreen = None
    LightPink = None
    LightSalmon = None
    LightSeaGreen = None
    LightSkyBlue = None
    LightSlateGray = None
    LightSteelBlue = None
    LightYellow = None
    Lime = None
    LimeGreen = None
    Linen = None
    Magenta = None
    Maroon = None
    MediumAquamarine = None
    MediumBlue = None
    MediumOrchid = None
    MediumPurple = None
    MediumSeaGreen = None
    MediumSlateBlue = None
    MediumSpringGreen = None
    MediumTurquoise = None
    MediumVioletRed = None
    MidnightBlue = None
    MintCream = None
    MistyRose = None
    Moccasin = None
    NavajoWhite = None
    Navy = None
    OldLace = None
    Olive = None
    OliveDrab = None
    Orange = None
    OrangeRed = None
    Orchid = None
    PaleGoldenrod = None
    PaleGreen = None
    PaleTurquoise = None
    PaleVioletRed = None
    PapayaWhip = None
    PeachPuff = None
    Peru = None
    Pink = None
    Plum = None
    PowderBlue = None
    Purple = None
    Red = None
    RosyBrown = None
    RoyalBlue = None
    SaddleBrown = None
    Salmon = None
    SandyBrown = None
    SeaGreen = None
    SeaShell = None
    Sienna = None
    Silver = None
    SkyBlue = None
    SlateBlue = None
    SlateGray = None
    Snow = None
    SpringGreen = None
    SteelBlue = None
    Tan = None
    Teal = None
    Thistle = None
    Tomato = None
    Transparent = None
    Turquoise = None
    Violet = None
    Wheat = None
    White = None
    WhiteSmoke = None
    Yellow = None
    YellowGreen = None


class Geometry(Animatable, ISealable, IAnimatable, IResource, IFormattable):
    """ Classes that derive from this abstract base class define geometric shapes. System.Windows.Media.Geometry objects can be used for clipping, hit-testing, and rendering 2-D graphic data. """
    def Clone(self):
        """
        Clone(self: Geometry) -> Geometry
        
            Creates a modifiable clone of the System.Windows.Media.Geometry, making deep copies of the object's values. When copying dependency properties, this method copies resource references and data bindings (but 
             they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: Geometry) -> Geometry
        
            Creates a modifiable clone of the System.Windows.Media.Geometry object, making deep copies of the object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    @staticmethod
    def Combine(geometry1, geometry2, mode, transform, tolerance=None, type=None):
        """
        Combine(geometry1: Geometry, geometry2: Geometry, mode: GeometryCombineMode, transform: Transform) -> PathGeometry
        
            Combines the two geometries using the specified System.Windows.Media.GeometryCombineMode and applies the specified transform to the resulting geometry.
        
            geometry1: The first geometry to combine.
            geometry2: The second geometry to combine.
            mode: One of the enumeration values that specifies how the geometries are combined.
            transform: A transformation to apply to the combined geometry, or null.
            Returns: The combined geometry.
        Combine(geometry1: Geometry, geometry2: Geometry, mode: GeometryCombineMode, transform: Transform, tolerance: float, type: ToleranceType) -> PathGeometry
        
            Combines the two geometries using the specified System.Windows.Media.GeometryCombineMode and tolerance factor, and applies the specified transform to the resulting geometry.
        
            geometry1: The first geometry to combine.
            geometry2: The second geometry to combine.
            mode: One of the enumeration values that specifies how the geometries are combined.
            transform: A transformation to apply to the combined geometry, or null.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If tolerance is less than 
             .000001, .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: The combined geometry.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FillContains(self, *__args):
        """
        FillContains(self: Geometry, geometry: Geometry, tolerance: float, type: ToleranceType) -> bool
        
            Indicates whether the current geometry contains the specified System.Windows.Media.Geometry, given the specified margin of error.
        
            geometry: The geometry to test for containment.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If tolerance is less than 
             .000001, .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: true if the current geometry contains geometry, given the specified margin of error; otherwise, false.
        FillContains(self: Geometry, geometry: Geometry) -> bool
        
            Indicates whether the current geometry completely contains the specified System.Windows.Media.Geometry.
        
            geometry: The geometry to test for containment.
            Returns: true if the current geometry completely contains geometry; otherwise, false.
        FillContains(self: Geometry, hitPoint: Point, tolerance: float, type: ToleranceType) -> bool
        
            Indicates whether the geometry contains the specified System.Windows.Point, given the specified margin of error.
        
            hitPoint: The point to test for containment.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: true if the geometry contains hitPoint, given the specified margin of error; otherwise, false.
        FillContains(self: Geometry, hitPoint: Point) -> bool
        
            Indicates whether the geometry contains the specified System.Windows.Point.
        
            hitPoint: The point to test for containment.
            Returns: true if the geometry contains hitPoint; otherwise, false.
        """
        pass

    def FillContainsWithDetail(self, geometry, tolerance=None, type=None):
        """
        FillContainsWithDetail(self: Geometry, geometry: Geometry) -> IntersectionDetail
        
            Returns a value that describes the intersection between the current geometry and the specified geometry.
        
            geometry: The geometry to test for containment.
            Returns: One of the enumeration values.
        FillContainsWithDetail(self: Geometry, geometry: Geometry, tolerance: float, type: ToleranceType) -> IntersectionDetail
        
            Returns a value that describes the intersection between the current geometry and the specified geometry, given the specified margin of error.
        
            geometry: The geometry to test for containment.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If tolerance is less than 
             .000001, .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: One of the enumeration values.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetArea(self, tolerance=None, type=None):
        """
        GetArea(self: Geometry) -> float
        
            Gets the area of the filled region of the System.Windows.Media.Geometry object.
            Returns: The area of the filled region of the geometry.
        GetArea(self: Geometry, tolerance: float, type: ToleranceType) -> float
        
            Gets the area, within the specified tolerance, of the filled region of the System.Windows.Media.Geometry object.
        
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: The area of the filled region of the geometry.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def GetFlattenedPathGeometry(self, tolerance=None, type=None):
        """
        GetFlattenedPathGeometry(self: Geometry) -> PathGeometry
        
            Gets a System.Windows.Media.PathGeometry that is a polygonal approximation of the System.Windows.Media.Geometry object.
            Returns: The polygonal approximation of the System.Windows.Media.Geometry.
        GetFlattenedPathGeometry(self: Geometry, tolerance: float, type: ToleranceType) -> PathGeometry
        
            Gets a System.Windows.Media.PathGeometry, within the specified tolerance, that is a polygonal approximation of the System.Windows.Media.Geometry object.
        
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: The polygonal approximation of the System.Windows.Media.Geometry.
        """
        pass

    def GetOutlinedPathGeometry(self, tolerance=None, type=None):
        """
        GetOutlinedPathGeometry(self: Geometry) -> PathGeometry
        
            Gets a System.Windows.Media.PathGeometry that is a simplified outline of the filled region of the System.Windows.Media.Geometry.
            Returns: A simplified outline of the filled region of the System.Windows.Media.Geometry.
        GetOutlinedPathGeometry(self: Geometry, tolerance: float, type: ToleranceType) -> PathGeometry
        
            Gets a System.Windows.Media.PathGeometry, within the specified tolerance, that is a simplified outline of the filled region of the System.Windows.Media.Geometry.
        
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: A simplified outline of the filled region of the System.Windows.Media.Geometry.
        """
        pass

    def GetRenderBounds(self, pen, tolerance=None, type=None):
        """
        GetRenderBounds(self: Geometry, pen: Pen) -> Rect
        
            Returns an axis-aligned rectangle that is exactly large enough to contain the geometry after it has been outlined with the specified System.Windows.Media.Pen.
        
            pen: An object that describes the area of the geometry's stroke.
            Returns: An axis aligned rectangle that is exactly large enough to contain the outlined geometry.
        GetRenderBounds(self: Geometry, pen: Pen, tolerance: float, type: ToleranceType) -> Rect
        
            Returns an axis-aligned rectangle that is exactly large enough to contain the geometry after it has been outlined with the specified System.Windows.Media.Pen, given the specified tolerance factor.
        
            pen: An object that describes the area of the geometry's stroke.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: An axis aligned rectangle that is exactly large enough to contain the outlined geometry.
        """
        pass

    def GetWidenedPathGeometry(self, pen, tolerance=None, type=None):
        """
        GetWidenedPathGeometry(self: Geometry, pen: Pen) -> PathGeometry
        
            Gets a System.Windows.Media.PathGeometry that is the shape defined by the stroke on the System.Windows.Media.Geometry produced by the specified System.Windows.Media.Pen.
        
            pen: An object that describes the area of the geometry's stroke.
            Returns: The outlined geometry.
        GetWidenedPathGeometry(self: Geometry, pen: Pen, tolerance: float, type: ToleranceType) -> PathGeometry
        
            Gets a System.Windows.Media.PathGeometry that is the shape defined by the stroke on the System.Windows.Media.Geometry produced by the specified System.Windows.Media.Pen, given the specified tolerance 
             factor.
        
        
            pen: The object used to define the area of the geometry's stroke.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: The geometry, widened by pen.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: Geometry) -> bool
        
            Determines whether the object is empty.
            Returns: true if the geometry is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: Geometry) -> bool
        
            Determines whether the object might have curved segments.
            Returns: true if the geometry object might have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> Geometry
        
            Creates a new System.Windows.Media.Geometry instance from the specified string using the current culture.
        
            source: A string that describes the geometry to be created.
            Returns: A new System.Windows.Media.Geometry instance created from the specified string.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ShouldSerializeTransform(self):
        """
        ShouldSerializeTransform(self: Geometry) -> bool
        
            Gets a value that indicates whether the value of the System.Windows.Media.Geometry.Transform property should be serialized.
            Returns: true if the value of the geometry's System.Windows.Media.Geometry.Transform property should be serialized; otherwise, false.
        """
        pass

    def StrokeContains(self, pen, hitPoint, tolerance=None, type=None):
        """
        StrokeContains(self: Geometry, pen: Pen, hitPoint: Point) -> bool
        
            Determines whether the specified System.Windows.Point is contained in the stroke produced by applying the specified System.Windows.Media.Pen to the geometry.
        
            pen: An object that determines the area of the geometry's stroke.
            hitPoint: The point to test for containment.
            Returns: true if hitPoint is contained in the stroke produced by applying the specified System.Windows.Media.Pen to the geometry; otherwise, false.
        StrokeContains(self: Geometry, pen: Pen, hitPoint: Point, tolerance: float, type: ToleranceType) -> bool
        
            Determines whether the specified System.Windows.Point is contained in the stroke produced by applying the specified System.Windows.Media.Pen to the geometry, given the specified margin of error.
        
            pen: An object that defines the stroke of a geometry.
            hitPoint: The point to test for containment.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: true if the stroke created by applying the specified System.Windows.Media.Pen to the geometry contains the specified point, given the specified tolerance factor; otherwise, false.
        """
        pass

    def StrokeContainsWithDetail(self, pen, geometry, tolerance=None, type=None):
        """
        StrokeContainsWithDetail(self: Geometry, pen: Pen, geometry: Geometry) -> IntersectionDetail
        
            Returns a value that describes the intersection between the specified System.Windows.Media.Geometry and the stroke created by applying the specified System.Windows.Media.Pen to the current geometry.
        
            pen: An object that determines the area of the current geometry's stroke.
            geometry: The geometry to test for containment.
            Returns: One of the enumeration values.
        StrokeContainsWithDetail(self: Geometry, pen: Pen, geometry: Geometry, tolerance: float, type: ToleranceType) -> IntersectionDetail
        
            Gets a value that describes the intersection between the specified System.Windows.Media.Geometry and the stroke created by applying the specified System.Windows.Media.Pen to the current geometry, given the 
             specified margin of error.
        
        
            pen: An object that determines the area of the current geometry's stroke.
            geometry: The geometry to test for containment.
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometries. Smaller values produce more accurate results but cause slower execution. If tolerance is less than 
             .000001, .000001 is used instead.
        
            type: One of the System.Windows.Media.ToleranceType values that specifies whether the tolerance factor is an absolute value or relative to the area of the geometry.
            Returns: One of the enumeration values.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: Geometry, provider: IFormatProvider) -> str
        
            Creates a string representation of the object using the specified culture-specific formatting information.
        
            provider: Culture-specific formatting information, or null to use the current culture.
            Returns: A string representation of the object.
        ToString(self: Geometry) -> str
        
            Creates a string representation of the object based on the current culture.
            Returns: A string representation of the object.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Rect that specifies the axis-aligned bounding box of the System.Windows.Media.Geometry.

Get: Bounds(self: Geometry) -> Rect

"""

    Transform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform object applied to a System.Windows.Media.Geometry.

Get: Transform(self: Geometry) -> Transform

Set: Transform(self: Geometry) = value
"""


    Empty = None
    StandardFlatteningTolerance = 0.25
    TransformProperty = None


class CombinedGeometry(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a 2-D geometric shape defined by the combination of two System.Windows.Media.Geometry objects.
    
    CombinedGeometry()
    CombinedGeometry(geometry1: Geometry, geometry2: Geometry)
    CombinedGeometry(geometryCombineMode: GeometryCombineMode, geometry1: Geometry, geometry2: Geometry)
    CombinedGeometry(geometryCombineMode: GeometryCombineMode, geometry1: Geometry, geometry2: Geometry, transform: Transform)
    """
    def Clone(self):
        """
        Clone(self: CombinedGeometry) -> CombinedGeometry
        
            Creates a modifiable clone of this System.Windows.Media.CombinedGeometry, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: CombinedGeometry) -> CombinedGeometry
        
            Creates a modifiable clone of this System.Windows.Media.CombinedGeometry object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: CombinedGeometry) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetArea(self, tolerance=None, type=None):
        """
        GetArea(self: CombinedGeometry, tolerance: float, type: ToleranceType) -> float
        
            Gets the area of the filled region.
        
            tolerance: The computational tolerance of error.
            type: Specifies how the error tolerance will be interpreted.
            Returns: The area of the filled region of this combined geometry.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: CombinedGeometry) -> bool
        
            Determines whether this System.Windows.Media.CombinedGeometry object is empty.
            Returns: true if this System.Windows.Media.CombinedGeometry is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: CombinedGeometry) -> bool
        
            Determines whether this System.Windows.Media.CombinedGeometry object may have curved segments.
            Returns: true if this System.Windows.Media.CombinedGeometry object may have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, geometry1: Geometry, geometry2: Geometry)
        __new__(cls: type, geometryCombineMode: GeometryCombineMode, geometry1: Geometry, geometry2: Geometry)
        __new__(cls: type, geometryCombineMode: GeometryCombineMode, geometry1: Geometry, geometry2: Geometry, transform: Transform)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Rect that specifies the bounding box of this System.Windows.Media.CombinedGeometry object.   Note: This method does not take any pens into account.

Get: Bounds(self: CombinedGeometry) -> Rect

"""

    Geometry1 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the first System.Windows.Media.Geometry object of this System.Windows.Media.CombinedGeometry object.

Get: Geometry1(self: CombinedGeometry) -> Geometry

Set: Geometry1(self: CombinedGeometry) = value
"""

    Geometry2 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the second System.Windows.Media.Geometry object of this System.Windows.Media.CombinedGeometry object.

Get: Geometry2(self: CombinedGeometry) -> Geometry

Set: Geometry2(self: CombinedGeometry) = value
"""

    GeometryCombineMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the method by which the two geometries (specified by the System.Windows.Media.CombinedGeometry.Geometry1 and System.Windows.Media.CombinedGeometry.Geometry2 properties) are combined.

Get: GeometryCombineMode(self: CombinedGeometry) -> GeometryCombineMode

Set: GeometryCombineMode(self: CombinedGeometry) = value
"""


    Geometry1Property = None
    Geometry2Property = None
    GeometryCombineModeProperty = None


class CompositionTarget(DispatcherObject, IDisposable, ICompositionTarget):
    """ Represents the display surface of your application. """
    def Dispose(self):
        """
        Dispose(self: CompositionTarget)
            Disposes System.Windows.Media.CompositionTarget.
        """
        pass

    def __enter__(self, *args): #cannot find CLR method
        """
        __enter__(self: IDisposable) -> object
        
            Provides the implementation of __enter__ for objects which implement IDisposable.
        """
        pass

    def __exit__(self, *args): #cannot find CLR method
        """
        __exit__(self: IDisposable, exc_type: object, exc_value: object, exc_back: object)
            Provides the implementation of __exit__ for objects which implement IDisposable.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    RootVisual = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the root visual of the System.Windows.Media.CompositionTarget.

Get: RootVisual(self: CompositionTarget) -> Visual

Set: RootVisual(self: CompositionTarget) = value
"""

    TransformFromDevice = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a matrix that can be used to transform coordinates from the rendering destination device to this target.

Get: TransformFromDevice(self: CompositionTarget) -> Matrix

"""

    TransformToDevice = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a matrix that can be used to transform coordinates from this target to the rendering destination device.

Get: TransformToDevice(self: CompositionTarget) -> Matrix

"""


    Rendering = None


class Visual(DependencyObject, IResource):
    """ Provides rendering support in WPF, which includes hit testing, coordinate transformation, and bounding box calculations. """
    def AddVisualChild(self, *args): #cannot find CLR method
        """
        AddVisualChild(self: Visual, child: Visual)
            Defines the parent-child relationship between two visuals.
        
            child: The child visual object to add to parent visual.
        """
        pass

    def FindCommonVisualAncestor(self, otherVisual):
        """
        FindCommonVisualAncestor(self: Visual, otherVisual: DependencyObject) -> DependencyObject
        
            Returns the common ancestor of two visual objects.
        
            otherVisual: A visual object of type System.Windows.DependencyObject.
            Returns: The common ancestor of the visual object and otherVisual if one exists; otherwise, null.
        """
        pass

    def GetVisualChild(self, *args): #cannot find CLR method
        """
        GetVisualChild(self: Visual, index: int) -> Visual
        
            Returns the specified System.Windows.Media.Visual in the parent System.Windows.Media.VisualCollection.
        
            index: The index of the visual object in the System.Windows.Media.VisualCollection.
            Returns: The child in the System.Windows.Media.VisualCollection at the specified index value.
        """
        pass

    def HitTestCore(self, *args): #cannot find CLR method
        """
        HitTestCore(self: Visual, hitTestParameters: GeometryHitTestParameters) -> GeometryHitTestResult
        
            Determines whether a geometry value is within the bounds of the visual object.
        
            hitTestParameters: A System.Windows.Media.GeometryHitTestParameters object that specifies the System.Windows.Media.Geometry to hit test against.
            Returns: A System.Windows.Media.GeometryHitTestResult that represents the result of the hit test.
        HitTestCore(self: Visual, hitTestParameters: PointHitTestParameters) -> HitTestResult
        
            Determines whether a point coordinate value is within the bounds of the visual object.
        
            hitTestParameters: A System.Windows.Media.PointHitTestParameters object that specifies the System.Windows.Point to hit test against.
            Returns: A System.Windows.Media.HitTestResult that represents the System.Windows.Media.Visual that is returned from a hit test.
        """
        pass

    def IsAncestorOf(self, descendant):
        """
        IsAncestorOf(self: Visual, descendant: DependencyObject) -> bool
        
            Determines whether the visual object is an ancestor of the descendant visual object.
        
            descendant: A value of type System.Windows.DependencyObject.
            Returns: true if the visual object is an ancestor of descendant; otherwise, false.
        """
        pass

    def IsDescendantOf(self, ancestor):
        """
        IsDescendantOf(self: Visual, ancestor: DependencyObject) -> bool
        
            Determines whether the visual object is a descendant of the ancestor visual object.
        
            ancestor: A value of type System.Windows.DependencyObject.
            Returns: true if the visual object is a descendant of ancestor; otherwise, false.
        """
        pass

    def OnDpiChanged(self, *args): #cannot find CLR method
        """ OnDpiChanged(self: Visual, oldDpi: DpiScale, newDpi: DpiScale) """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: DependencyObject, e: DependencyPropertyChangedEventArgs)
            Invoked whenever the effective value of any dependency property on this System.Windows.DependencyObject has been updated. The specific dependency property that changed is reported in the event data.
        
            e: Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.
        """
        pass

    def OnVisualChildrenChanged(self, *args): #cannot find CLR method
        """
        OnVisualChildrenChanged(self: Visual, visualAdded: DependencyObject, visualRemoved: DependencyObject)
            Called when the System.Windows.Media.VisualCollection of the visual object is modified.
        
            visualAdded: The System.Windows.Media.Visual that was added to the collection
            visualRemoved: The System.Windows.Media.Visual that was removed from the collection
        """
        pass

    def OnVisualParentChanged(self, *args): #cannot find CLR method
        """
        OnVisualParentChanged(self: Visual, oldParent: DependencyObject)
            Called when the parent of the visual object is changed.
        
            oldParent: A value of type System.Windows.DependencyObject that represents the previous parent of the System.Windows.Media.Visual object. If the System.Windows.Media.Visual object did not have a previous parent, the 
             value of the parameter is null.
        """
        pass

    def PointFromScreen(self, point):
        """
        PointFromScreen(self: Visual, point: Point) -> Point
        
            Converts a System.Windows.Point in screen coordinates into a System.Windows.Point that represents the current coordinate system of the System.Windows.Media.Visual.
        
            point: The System.Windows.Point value in screen coordinates.
            Returns: The converted System.Windows.Point value that represents the current coordinate system of the System.Windows.Media.Visual.
        """
        pass

    def PointToScreen(self, point):
        """
        PointToScreen(self: Visual, point: Point) -> Point
        
            Converts a System.Windows.Point that represents the current coordinate system of the System.Windows.Media.Visual into a System.Windows.Point in screen coordinates.
        
            point: The System.Windows.Point value that represents the current coordinate system of the System.Windows.Media.Visual.
            Returns: The converted System.Windows.Point value in screen coordinates.
        """
        pass

    def RemoveVisualChild(self, *args): #cannot find CLR method
        """
        RemoveVisualChild(self: Visual, child: Visual)
            Removes the parent-child relationship between two visuals.
        
            child: The child visual object to remove from the parent visual.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def TransformToAncestor(self, ancestor):
        """
        TransformToAncestor(self: Visual, ancestor: Visual3D) -> GeneralTransform2DTo3D
        
            Returns a transform that can be used to transform coordinates from the System.Windows.Media.Visual to the specified System.Windows.Media.Media3D.Visual3D ancestor of the visual object.
        
            ancestor: The System.Windows.Media.Media3D.Visual3D to which the coordinates are transformed.
            Returns: A System.Windows.Media.Media3D.GeneralTransform2DTo3D.
        TransformToAncestor(self: Visual, ancestor: Visual) -> GeneralTransform
        
            Returns a transform that can be used to transform coordinates from the System.Windows.Media.Visual to the specified System.Windows.Media.Visual ancestor of the visual object.
        
            ancestor: The System.Windows.Media.Visual to which the coordinates are transformed.
            Returns: A value of type System.Windows.Media.GeneralTransform.
        """
        pass

    def TransformToDescendant(self, descendant):
        """
        TransformToDescendant(self: Visual, descendant: Visual) -> GeneralTransform
        
            Returns a transform that can be used to transform coordinates from the System.Windows.Media.Visual to the specified visual object descendant.
        
            descendant: The System.Windows.Media.Visual to which the coordinates are transformed.
            Returns: A value of type System.Windows.Media.GeneralTransform.
        """
        pass

    def TransformToVisual(self, visual):
        """
        TransformToVisual(self: Visual, visual: Visual) -> GeneralTransform
        
            Returns a transform that can be used to transform coordinates from the System.Windows.Media.Visual to the specified visual object.
        
            visual: The System.Windows.Media.Visual to which the coordinates are transformed.
            Returns: A value of type System.Windows.Media.GeneralTransform.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    VisualBitmapEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffect value for the System.Windows.Media.Visual.

"""

    VisualBitmapEffectInput = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffectInput value for the System.Windows.Media.Visual.

"""

    VisualBitmapScalingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.BitmapScalingMode for the System.Windows.Media.Visual.

"""

    VisualCacheMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a cached representation of the System.Windows.Media.Visual.

"""

    VisualChildrenCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of child elements for the System.Windows.Media.Visual.

"""

    VisualClearTypeHint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.ClearTypeHint that determines how ClearType is rendered in the System.Windows.Media.Visual.

"""

    VisualClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clip region of the System.Windows.Media.Visual as a System.Windows.Media.Geometry value.

"""

    VisualEdgeMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the edge mode of the System.Windows.Media.Visual as an System.Windows.Media.EdgeMode value.

"""

    VisualEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the bitmap effect to apply to the System.Windows.Media.Visual.

"""

    VisualOffset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the offset value of the visual object.

"""

    VisualOpacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the opacity of the System.Windows.Media.Visual.

"""

    VisualOpacityMask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Brush value that represents the opacity mask of the System.Windows.Media.Visual.

"""

    VisualParent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual tree parent of the visual object.

"""

    VisualScrollableAreaClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a clipped scrollable area for the System.Windows.Media.Visual.

"""

    VisualTextHintingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextHintingMode of the System.Windows.Media.Visual.

"""

    VisualTextRenderingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextRenderingMode of the System.Windows.Media.Visual.

"""

    VisualTransform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform value for the System.Windows.Media.Visual.

"""

    VisualXSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate (vertical) guideline collection.

"""

    VisualYSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate (horizontal) guideline collection.

"""



class ContainerVisual(Visual, IResource):
    """
    Manages a collection of System.Windows.Media.Visual objects.
    
    ContainerVisual()
    """
    def AddVisualChild(self, *args): #cannot find CLR method
        """
        AddVisualChild(self: Visual, child: Visual)
            Defines the parent-child relationship between two visuals.
        
            child: The child visual object to add to parent visual.
        """
        pass

    def GetVisualChild(self, *args): #cannot find CLR method
        """
        GetVisualChild(self: ContainerVisual, index: int) -> Visual
        
            Returns a specified child System.Windows.Media.Visual for the parent System.Windows.Media.ContainerVisual.
        
            index: A 32-bit signed integer that represents the index value of the child System.Windows.Media.Visual. The value of index must be between 0 and System.Windows.Media.ContainerVisual.VisualChildrenCount - 1.
            Returns: The child System.Windows.Media.Visual.
        """
        pass

    def HitTest(self, *__args):
        """
        HitTest(self: ContainerVisual, filterCallback: HitTestFilterCallback, resultCallback: HitTestResultCallback, hitTestParameters: HitTestParameters)
            Initiates a hit test on the System.Windows.Media.ContainerVisual by using the System.Windows.Media.HitTestFilterCallback and System.Windows.Media.HitTestResultCallback objects.
        
            filterCallback: The delegate that allows you to ignore parts of the visual tree that you are not interested in processing in your hit test results.
            resultCallback: The delegate that is used to control the return of hit test information.
            hitTestParameters: Defines the set of parameters for a hit test.
        HitTest(self: ContainerVisual, point: Point) -> HitTestResult
        
            Returns the top-most visual object of a hit test by specifying a System.Windows.Point.
        
            point: The point value to hit test.
            Returns: The hit test result of the visual returned as a System.Windows.Media.HitTestResult type.
        """
        pass

    def HitTestCore(self, *args): #cannot find CLR method
        """
        HitTestCore(self: Visual, hitTestParameters: GeometryHitTestParameters) -> GeometryHitTestResult
        
            Determines whether a geometry value is within the bounds of the visual object.
        
            hitTestParameters: A System.Windows.Media.GeometryHitTestParameters object that specifies the System.Windows.Media.Geometry to hit test against.
            Returns: A System.Windows.Media.GeometryHitTestResult that represents the result of the hit test.
        HitTestCore(self: Visual, hitTestParameters: PointHitTestParameters) -> HitTestResult
        
            Determines whether a point coordinate value is within the bounds of the visual object.
        
            hitTestParameters: A System.Windows.Media.PointHitTestParameters object that specifies the System.Windows.Point to hit test against.
            Returns: A System.Windows.Media.HitTestResult that represents the System.Windows.Media.Visual that is returned from a hit test.
        """
        pass

    def OnDpiChanged(self, *args): #cannot find CLR method
        """ OnDpiChanged(self: Visual, oldDpi: DpiScale, newDpi: DpiScale) """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: DependencyObject, e: DependencyPropertyChangedEventArgs)
            Invoked whenever the effective value of any dependency property on this System.Windows.DependencyObject has been updated. The specific dependency property that changed is reported in the event data.
        
            e: Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.
        """
        pass

    def OnVisualChildrenChanged(self, *args): #cannot find CLR method
        """
        OnVisualChildrenChanged(self: Visual, visualAdded: DependencyObject, visualRemoved: DependencyObject)
            Called when the System.Windows.Media.VisualCollection of the visual object is modified.
        
            visualAdded: The System.Windows.Media.Visual that was added to the collection
            visualRemoved: The System.Windows.Media.Visual that was removed from the collection
        """
        pass

    def OnVisualParentChanged(self, *args): #cannot find CLR method
        """
        OnVisualParentChanged(self: Visual, oldParent: DependencyObject)
            Called when the parent of the visual object is changed.
        
            oldParent: A value of type System.Windows.DependencyObject that represents the previous parent of the System.Windows.Media.Visual object. If the System.Windows.Media.Visual object did not have a previous parent, the 
             value of the parameter is null.
        """
        pass

    def RemoveVisualChild(self, *args): #cannot find CLR method
        """
        RemoveVisualChild(self: Visual, child: Visual)
            Removes the parent-child relationship between two visuals.
        
            child: The child visual object to remove from the parent visual.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    BitmapEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a System.Windows.Media.Effects.BitmapEffect value for the System.Windows.Media.ContainerVisual.

Get: BitmapEffect(self: ContainerVisual) -> BitmapEffect

Set: BitmapEffect(self: ContainerVisual) = value
"""

    BitmapEffectInput = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a System.Windows.Media.Effects.BitmapEffectInput value for the System.Windows.Media.ContainerVisual.

Get: BitmapEffectInput(self: ContainerVisual) -> BitmapEffectInput

Set: BitmapEffectInput(self: ContainerVisual) = value
"""

    CacheMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a cached representation of the System.Windows.Media.ContainerVisual.

Get: CacheMode(self: ContainerVisual) -> CacheMode

Set: CacheMode(self: ContainerVisual) = value
"""

    Children = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the child collection of the System.Windows.Media.ContainerVisual.

Get: Children(self: ContainerVisual) -> VisualCollection

"""

    Clip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clipping region of the System.Windows.Media.ContainerVisual.

Get: Clip(self: ContainerVisual) -> Geometry

Set: Clip(self: ContainerVisual) = value
"""

    ContentBounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the bounding box for the contents of the System.Windows.Media.ContainerVisual.

Get: ContentBounds(self: ContainerVisual) -> Rect

"""

    DescendantBounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the union of all the content bounding boxes for all of the descendants of the System.Windows.Media.ContainerVisual, but not including the contents of the System.Windows.Media.ContainerVisual.

Get: DescendantBounds(self: ContainerVisual) -> Rect

"""

    Effect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the bitmap effect to apply to the System.Windows.Media.ContainerVisual.

Get: Effect(self: ContainerVisual) -> Effect

Set: Effect(self: ContainerVisual) = value
"""

    Offset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the offset value of the System.Windows.Media.ContainerVisual from its reference point.

Get: Offset(self: ContainerVisual) -> Vector

Set: Offset(self: ContainerVisual) = value
"""

    Opacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the opacity of the System.Windows.Media.ContainerVisual, based on 0=transparent, 1=opaque.

Get: Opacity(self: ContainerVisual) -> float

Set: Opacity(self: ContainerVisual) = value
"""

    OpacityMask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a brush that specifies a possible opacity mask for the System.Windows.Media.ContainerVisual.

Get: OpacityMask(self: ContainerVisual) -> Brush

Set: OpacityMask(self: ContainerVisual) = value
"""

    Parent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the parent System.Windows.Media.Visual for the System.Windows.Media.ContainerVisual.

Get: Parent(self: ContainerVisual) -> DependencyObject

"""

    Transform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the transform that is applied to the System.Windows.Media.ContainerVisual.

Get: Transform(self: ContainerVisual) -> Transform

Set: Transform(self: ContainerVisual) = value
"""

    VisualBitmapEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffect value for the System.Windows.Media.Visual.

"""

    VisualBitmapEffectInput = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffectInput value for the System.Windows.Media.Visual.

"""

    VisualBitmapScalingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.BitmapScalingMode for the System.Windows.Media.Visual.

"""

    VisualCacheMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a cached representation of the System.Windows.Media.Visual.

"""

    VisualChildrenCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of children for the System.Windows.Media.ContainerVisual.

"""

    VisualClearTypeHint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.ClearTypeHint that determines how ClearType is rendered in the System.Windows.Media.Visual.

"""

    VisualClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clip region of the System.Windows.Media.Visual as a System.Windows.Media.Geometry value.

"""

    VisualEdgeMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the edge mode of the System.Windows.Media.Visual as an System.Windows.Media.EdgeMode value.

"""

    VisualEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the bitmap effect to apply to the System.Windows.Media.Visual.

"""

    VisualOffset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the offset value of the visual object.

"""

    VisualOpacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the opacity of the System.Windows.Media.Visual.

"""

    VisualOpacityMask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Brush value that represents the opacity mask of the System.Windows.Media.Visual.

"""

    VisualParent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual tree parent of the visual object.

"""

    VisualScrollableAreaClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a clipped scrollable area for the System.Windows.Media.Visual.

"""

    VisualTextHintingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextHintingMode of the System.Windows.Media.Visual.

"""

    VisualTextRenderingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextRenderingMode of the System.Windows.Media.Visual.

"""

    VisualTransform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform value for the System.Windows.Media.Visual.

"""

    VisualXSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate (vertical) guideline collection.

"""

    VisualYSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate (horizontal) guideline collection.

"""

    XSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the X (horizontal) guideline for the System.Windows.Media.ContainerVisual.

Get: XSnappingGuidelines(self: ContainerVisual) -> DoubleCollection

Set: XSnappingGuidelines(self: ContainerVisual) = value
"""

    YSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the Y (vertical) guideline for the System.Windows.Media.ContainerVisual.

Get: YSnappingGuidelines(self: ContainerVisual) -> DoubleCollection

Set: YSnappingGuidelines(self: ContainerVisual) = value
"""



class DashStyle(Animatable, ISealable, IAnimatable, IResource):
    """
    Represents the sequence of dashes and gaps that will be applied by a System.Windows.Media.Pen.
    
    DashStyle()
    DashStyle(dashes: IEnumerable[float], offset: float)
    """
    def Clone(self):
        """
        Clone(self: DashStyle) -> DashStyle
        
            Creates a modifiable clone of this System.Windows.Media.DashStyle, making deep copies of this object's values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: DashStyle) -> DashStyle
        
            Creates a modifiable clone of this System.Windows.Media.DashStyle object, making deep copies of this object's current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: DashStyle) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, dashes=None, offset=None):
        """
        __new__(cls: type)
        __new__(cls: type, dashes: IEnumerable[float], offset: float)
        """
        pass

    Dashes = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the collection of dashes and gaps in this System.Windows.Media.DashStyle.

Get: Dashes(self: DashStyle) -> DoubleCollection

Set: Dashes(self: DashStyle) = value
"""

    Offset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets how far in the dash sequence the stroke will start.

Get: Offset(self: DashStyle) -> float

Set: Offset(self: DashStyle) = value
"""


    DashesProperty = None
    OffsetProperty = None


class DashStyles(object):
    """ Implements a set of predefined System.Windows.Media.DashStyle objects. """
    Dash = None
    DashDot = None
    DashDotDot = None
    Dot = None
    Solid = None
    __all__ = []


class DisableDpiAwarenessAttribute(Attribute, _Attribute):
    """
    Allows WPF�applications to disable dots per inch (dpi) awareness for all user interface elements.
    
    DisableDpiAwarenessAttribute()
    """
    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass


class DoubleCollection(Freezable, ISealable, IFormattable, IList, ICollection, IEnumerable, IList[float], ICollection[float], IEnumerable[float]):
    """
    Represents an ordered collection of System.Double values.
    
    DoubleCollection()
    DoubleCollection(capacity: int)
    DoubleCollection(collection: IEnumerable[float])
    """
    def Add(self, value):
        """
        Add(self: DoubleCollection, value: float)
            Adds a System.Double to the end of this System.Windows.Media.DoubleCollection.
        
            value: The item to add to the end of this collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: DoubleCollection)
            Removes all the items from this System.Windows.Media.DoubleCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: DoubleCollection) -> DoubleCollection
        
            Creates a modifiable clone of this System.Windows.Media.DoubleCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: DoubleCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: DoubleCollection) -> DoubleCollection
        
            Creates a modifiable clone of this System.Windows.Media.DoubleCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: DoubleCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: DoubleCollection, value: float) -> bool
        
            Determines whether a System.Double is in this System.Windows.Media.DoubleCollection.
        
            value: The item to locate in this collection.
            Returns: true if value, the specified System.Double, is in this System.Windows.Media.DoubleCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: DoubleCollection, array: Array[float], index: int)
            Copies the items of this System.Windows.Media.DoubleCollection, starting with the specified index, into an array of  System.Double values.
        
            array: The array that is the destination of the items copied from this System.Windows.Media.DoubleCollection.
            index: The index at which to begin copying.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: DoubleCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Freezable, isChecking: bool) -> bool
        
            Makes the System.Windows.Freezable object unmodifiable or tests whether it can be made unmodifiable.
        
            isChecking: true to return an indication of whether the object can be frozen (without actually freezing it); false to actually freeze the object.
            Returns: If isChecking is true, this method returns true if the System.Windows.Freezable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the 
             if the specified System.Windows.Freezable is now unmodifiable, or false if it cannot be made unmodifiable.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: DoubleCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: DoubleCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: DoubleCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An System.Windows.Media.DoubleCollection.Enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: DoubleCollection, value: float) -> int
        
            Gets the index of the first occurrence of the specified System.Double.
        
            value: The System.Double to locate in the System.Windows.Media.DoubleCollection.
            Returns: The index of value if found in the System.Windows.Media.DoubleCollection; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: DoubleCollection, index: int, value: float)
            Inserts a System.Double into this System.Windows.Media.DoubleCollection at the specified index.
        
            index: The index at which to insert value, the specified System.Double.
            value: The item to insert.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> DoubleCollection
        
            Converts a System.String representation of a collection of doubles into an equivalent System.Windows.Media.DoubleCollection.
        
            source: The System.String representation of the collection of doubles.
            Returns: Returns the equivalent System.Windows.Media.DoubleCollection.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: DoubleCollection, value: float) -> bool
        
            Removes the first occurrence of the specified System.Double from this System.Windows.Media.DoubleCollection.
        
            value: The item to remove from this collection.
            Returns: true if value was removed from the System.Windows.Media.DoubleCollection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: DoubleCollection, index: int)
            Removes the System.Double at the specified index from this System.Windows.Media.DoubleCollection.
        
            index: The index of the item to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: DoubleCollection, provider: IFormatProvider) -> str
        
            Creates a System.String representation of this System.Windows.Media.DoubleCollection.
        
            provider: Culture-specific formatting information.
            Returns: Returns a System.String containing the values of this System.Windows.Media.DoubleCollection.
        ToString(self: DoubleCollection) -> str
        
            Creates a System.String representation of this System.Windows.Media.DoubleCollection.
            Returns: Returns a System.String containing the values of this System.Windows.Media.DoubleCollection.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[float], item: float) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[float])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of doubles contained in the System.Windows.Media.DoubleCollection.

Get: Count(self: DoubleCollection) -> int

"""


    Enumerator = None


class DoubleCollectionConverter(TypeConverter):
    """
    Converts instances of other types to and from a System.Windows.Media.DoubleCollection.
    
    DoubleCollectionConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: DoubleCollectionConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether an object can be converted from a specified type to an instance of a System.Windows.Media.DoubleCollection.
        
            context: The context information of a type.
            sourceType: The type of the source that is being evaluated for conversion.
            Returns: true if the type can be converted to a System.Windows.Media.DoubleCollection; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: DoubleCollectionConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of a System.Windows.Media.DoubleCollection can be converted to a different type.
        
            context: The context information of a type.
            destinationType: The needed type for which you are evaluating this System.Windows.Media.DoubleCollection for conversion.
            Returns: true if this System.Windows.Media.DoubleCollection can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: DoubleCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Attempts to convert the specified object to a System.Windows.Media.DoubleCollection.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type you want to convert.
            value: The object being converted.
            Returns: The System.Windows.Media.DoubleCollection that is created from converting value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: DoubleCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert a System.Windows.Media.DoubleCollection to a specified type.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type you want to convert.
            value: The System.Windows.Media.DoubleCollection to convert.
            destinationType: The type to convert this System.Windows.Media.DoubleCollection to.
            Returns: The object you create when you convert this System.Windows.Media.DoubleCollection.
        """
        pass


class Drawing(Animatable, ISealable, IAnimatable, IResource, IDrawingContent):
    """ Abstract class that describes a 2-D drawing. This class cannot be inherited by your code. """
    def Clone(self):
        """
        Clone(self: Drawing) -> Drawing
        
            Creates a modifiable clone of this System.Windows.Media.Drawing, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings 
             (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: Drawing) -> Drawing
        
            Creates a modifiable clone of this System.Windows.Media.Drawing object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the axis-aligned bounds of the drawing's contents.

Get: Bounds(self: Drawing) -> Rect

"""



class TileBrush(Brush, ISealable, IAnimatable, IResource, IFormattable):
    """ Describes a way to paint a region by using one or more tiles. """
    def Clone(self):
        """
        Clone(self: TileBrush) -> TileBrush
        
            Creates a modifiable copy of this System.Windows.Media.TileBrush by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: TileBrush) -> TileBrush
        
            Creates a modifiable copy of this System.Windows.Media.TileBrush object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does 
             copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen prope-rty of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetContentBounds(self, *args): #cannot find CLR method
        """
        GetContentBounds(self: TileBrush) -> Rect
        
            Obtains the current bounds of the System.Windows.Media.TileBrush content
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    AlignmentX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the horizontal alignment of content in the System.Windows.Media.TileBrush base tile.

Get: AlignmentX(self: TileBrush) -> AlignmentX

Set: AlignmentX(self: TileBrush) = value
"""

    AlignmentY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the vertical alignment of content in the System.Windows.Media.TileBrush base tile.

Get: AlignmentY(self: TileBrush) -> AlignmentY

Set: AlignmentY(self: TileBrush) = value
"""

    Stretch = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies how the content of this System.Windows.Media.TileBrush stretches to fit its tiles.

Get: Stretch(self: TileBrush) -> Stretch

Set: Stretch(self: TileBrush) = value
"""

    TileMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies how a System.Windows.Media.TileBrush fills the area that you are painting if the base tile is smaller than the output area.

Get: TileMode(self: TileBrush) -> TileMode

Set: TileMode(self: TileBrush) = value
"""

    Viewbox = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the position and dimensions of the content in a System.Windows.Media.TileBrush tile.

Get: Viewbox(self: TileBrush) -> Rect

Set: Viewbox(self: TileBrush) = value
"""

    ViewboxUnits = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies whether the System.Windows.Media.TileBrush.Viewbox value is relative to the bounding box of the System.Windows.Media.TileBrush contents or whether the value is absolute.

Get: ViewboxUnits(self: TileBrush) -> BrushMappingMode

Set: ViewboxUnits(self: TileBrush) = value
"""

    Viewport = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the position and dimensions of the base tile for a System.Windows.Media.TileBrush.

Get: Viewport(self: TileBrush) -> Rect

Set: Viewport(self: TileBrush) = value
"""

    ViewportUnits = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a System.Windows.Media.BrushMappingMode enumeration that specifies whether the value of the System.Windows.Media.TileBrush.Viewport, which indicates the size and position of the System.Windows.Media.TileBrush base tile, is relative to the size of the output area.

Get: ViewportUnits(self: TileBrush) -> BrushMappingMode

Set: ViewportUnits(self: TileBrush) = value
"""


    AlignmentXProperty = None
    AlignmentYProperty = None
    StretchProperty = None
    TileModeProperty = None
    ViewboxProperty = None
    ViewboxUnitsProperty = None
    ViewportProperty = None
    ViewportUnitsProperty = None


class DrawingBrush(TileBrush, ISealable, IAnimatable, IResource, IFormattable):
    """
    Paints an area with a System.Windows.Media.Drawing, which can include shapes, text, video, images, or other drawings.
    
    DrawingBrush()
    DrawingBrush(drawing: Drawing)
    """
    def Clone(self):
        """
        Clone(self: DrawingBrush) -> DrawingBrush
        
            Creates a modifiable clone of this System.Windows.Media.DrawingBrush, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: DrawingBrush) -> DrawingBrush
        
            Creates a modifiable clone of this System.Windows.Media.DrawingBrush object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: DrawingBrush) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetContentBounds(self, *args): #cannot find CLR method
        """ GetContentBounds(self: DrawingBrush) -> Rect """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, drawing=None):
        """
        __new__(cls: type)
        __new__(cls: type, drawing: Drawing)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Drawing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Drawing that describes the contents of this System.Windows.Media.DrawingBrush.

Get: Drawing(self: DrawingBrush) -> Drawing

Set: Drawing(self: DrawingBrush) = value
"""


    DrawingProperty = None


class DrawingCollection(Animatable, ISealable, IAnimatable, IResource, IList, ICollection, IEnumerable, IList[Drawing], ICollection[Drawing], IEnumerable[Drawing]):
    """
    Represents an ordered collection of System.Windows.Media.Drawing objects.
    
    DrawingCollection()
    DrawingCollection(capacity: int)
    DrawingCollection(collection: IEnumerable[Drawing])
    """
    def Add(self, value):
        """
        Add(self: DrawingCollection, value: Drawing)
            Adds a System.Windows.Media.Drawing to the end of the System.Windows.Media.DrawingCollection.
        
            value: The item to add to the end of this collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: DrawingCollection)
            Removes all the items from this System.Windows.Media.DrawingCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: DrawingCollection) -> DrawingCollection
        
            Creates a modifiable clone of this System.Windows.Media.DrawingCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: DrawingCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: DrawingCollection) -> DrawingCollection
        
            Creates a modifiable clone of this System.Windows.Media.DrawingCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: DrawingCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: DrawingCollection, value: Drawing) -> bool
        
            Determines whether a given System.Windows.Media.Drawing is in this System.Windows.Media.DrawingCollection.
        
            value: The item to locate in this collection.
            Returns: true if value, the specified System.Windows.Media.Drawing, is in this System.Windows.Media.DrawingCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: DrawingCollection, array: Array[Drawing], index: int)
            Copies the items of this System.Windows.Media.DrawingCollection, starting with the specified index value, into an array of System.Windows.Media.Drawing objects.
        
            array: The array that is the destination of the items copied from this System.Windows.Media.DrawingCollection.
            index: The index at which copying begins.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: DrawingCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: DrawingCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: DrawingCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: DrawingCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: DrawingCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An enumerator that can iterate the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: DrawingCollection, value: Drawing) -> int
        
            Gets the index position of the first occurrence of the specified System.Windows.Media.Drawing.
        
            value: The item to search for.
            Returns: The index position of the specified System.Windows.Media.Drawing.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: DrawingCollection, index: int, value: Drawing)
            Inserts a System.Windows.Media.Drawing into this System.Windows.Media.DrawingCollection at the specified index position.
        
            index: The index position at which to insert value, the specified System.Windows.Media.Drawing.
            value: The item to insert.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: DrawingCollection, value: Drawing) -> bool
        
            Removes the first occurrence of the specified System.Windows.Media.Drawing from the System.Windows.Media.DrawingCollection.
        
            value: The item to remove from this collection.
            Returns: true if the operation was successful; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: DrawingCollection, index: int)
            Removes the System.Windows.Media.Drawing at the specified index position from the System.Windows.Media.DrawingCollection.
        
            index: The index position of the item to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[Drawing], item: Drawing) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[Drawing])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of System.Windows.Media.Drawing objects contained in the System.Windows.Media.DrawingCollection.

Get: Count(self: DrawingCollection) -> int

"""


    Enumerator = None


class DrawingContext(DispatcherObject, IDisposable):
    """ Describes visual content using draw, push, and pop commands. """
    def Close(self):
        """
        Close(self: DrawingContext)
            Closes the System.Windows.Media.DrawingContext and flushes the content. Afterward, the System.Windows.Media.DrawingContext cannot be modified.
        """
        pass

    def DisposeCore(self, *args): #cannot find CLR method
        """
        DisposeCore(self: DrawingContext)
            Releases all resources used by the System.Windows.Media.DrawingContext.
        """
        pass

    def DrawDrawing(self, drawing):
        """
        DrawDrawing(self: DrawingContext, drawing: Drawing)
            Draws the specified System.Windows.Media.Drawing object.
        
            drawing: The drawing to append.
        """
        pass

    def DrawEllipse(self, brush, pen, center, *__args):
        """
        DrawEllipse(self: DrawingContext, brush: Brush, pen: Pen, center: Point, centerAnimations: AnimationClock, radiusX: float, radiusXAnimations: AnimationClock, radiusY: float, radiusYAnimations: AnimationClock)
            Draws an ellipse with the specified System.Windows.Media.Brush and System.Windows.Media.Pen and applies the specified animation clocks.
        
            brush: The brush with which to fill the ellipse.  This is optional, and can be null. If the brush is null, no fill is drawn.
            pen: The pen with which to stroke the ellipse.  This is optional, and can be null. If the pen is null, no stroke is drawn.
            center: The location of the center of the ellipse.
            centerAnimations: The clock with which to animate the ellipse's center position, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Point objects.
        
            radiusX: The horizontal radius of the ellipse.
            radiusXAnimations: The clock with which to animate the ellipse's x-radius, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate System.Double objects.
            radiusY: The vertical radius of the ellipse.
            radiusYAnimations: The clock with which to animate the ellipse's y-radius, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate System.Double objects.
        DrawEllipse(self: DrawingContext, brush: Brush, pen: Pen, center: Point, radiusX: float, radiusY: float)
            Draws an ellipse with the specified System.Windows.Media.Brush and System.Windows.Media.Pen.
        
            brush: The brush with which to fill the ellipse.  This is optional, and can be null. If the brush is null, no fill is drawn.
            pen: The pen with which to stroke the ellipse.  This is optional, and can be null. If the pen is null, no stroke is drawn.
            center: The location of the center of the ellipse.
            radiusX: The horizontal radius of the ellipse.
            radiusY: The vertical radius of the ellipse.
        """
        pass

    def DrawGeometry(self, brush, pen, geometry):
        """
        DrawGeometry(self: DrawingContext, brush: Brush, pen: Pen, geometry: Geometry)
            Draws the specified System.Windows.Media.Geometry using the specified System.Windows.Media.Brush and System.Windows.Media.Pen.
        
            brush: The System.Windows.Media.Brush with which to fill the System.Windows.Media.Geometry. This is optional, and can be null. If the brush is null, no fill is drawn.
            pen: The System.Windows.Media.Pen with which to stroke the System.Windows.Media.Geometry. This is optional, and can be null. If the pen is null, no stroke is drawn.
            geometry: The System.Windows.Media.Geometry to draw.
        """
        pass

    def DrawGlyphRun(self, foregroundBrush, glyphRun):
        """
        DrawGlyphRun(self: DrawingContext, foregroundBrush: Brush, glyphRun: GlyphRun)
            Draws the specified text.
        
            foregroundBrush: The brush used to paint the text.
            glyphRun: The text to draw.
        """
        pass

    def DrawImage(self, imageSource, rectangle, rectangleAnimations=None):
        """
        DrawImage(self: DrawingContext, imageSource: ImageSource, rectangle: Rect, rectangleAnimations: AnimationClock)
            Draws an image into the region defined by the specified System.Windows.Rect and applies the specified animation clock.
        
            imageSource: The image to draw.
            rectangle: The region in which to draw bitmapSource.
            rectangleAnimations: The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Rect objects.
        
        DrawImage(self: DrawingContext, imageSource: ImageSource, rectangle: Rect)
            Draws an image into the region defined by the specified System.Windows.Rect.
        
            imageSource: The image to draw.
            rectangle: The region in which to draw bitmapSource.
        """
        pass

    def DrawLine(self, pen, point0, *__args):
        """
        DrawLine(self: DrawingContext, pen: Pen, point0: Point, point0Animations: AnimationClock, point1: Point, point1Animations: AnimationClock)
            Draws a line between the specified points using the specified System.Windows.Media.Pen and applies the specified animation clocks.
        
            pen: The pen to stroke the line.
            point0: The start point of the line.
            point0Animations: The clock with which to animate the start point of the line, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Point objects.
        
            point1: The end point of the line.
            point1Animations: The clock with which to animate the end point of the line, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Point objects.
        
        DrawLine(self: DrawingContext, pen: Pen, point0: Point, point1: Point)
            Draws a line between the specified points using the specified System.Windows.Media.Pen.
        
            pen: The pen with which to stroke the line.
            point0: The start point of the line.
            point1: The end point of the line.
        """
        pass

    def DrawRectangle(self, brush, pen, rectangle, rectangleAnimations=None):
        """
        DrawRectangle(self: DrawingContext, brush: Brush, pen: Pen, rectangle: Rect, rectangleAnimations: AnimationClock)
            Draws a rectangle with the specified System.Windows.Media.Brush and System.Windows.Media.Pen and applies the specified animation clocks.
        
            brush: The brush with which to fill the rectangle.  This is optional, and can be null. If the brush is null, no fill is drawn.
            pen: The pen with which to stroke the rectangle.  This is optional, and can be null. If the pen is null, no stroke is drawn.
            rectangle: The rectangle to draw.
            rectangleAnimations: The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Rect objects.
        
        DrawRectangle(self: DrawingContext, brush: Brush, pen: Pen, rectangle: Rect)
            Draws a rectangle with the specified System.Windows.Media.Brush and System.Windows.Media.Pen. The pen and the brush can be null.
        
            brush: The brush with which to fill the rectangle.  This is optional, and can be null. If the brush is null, no fill is drawn.
            pen: The pen with which to stroke the rectangle.  This is optional, and can be null. If the pen is null, no stroke is drawn.
            rectangle: The rectangle to draw.
        """
        pass

    def DrawRoundedRectangle(self, brush, pen, rectangle, *__args):
        """
        DrawRoundedRectangle(self: DrawingContext, brush: Brush, pen: Pen, rectangle: Rect, rectangleAnimations: AnimationClock, radiusX: float, radiusXAnimations: AnimationClock, radiusY: float, radiusYAnimations: AnimationClock)
            Draws a rounded rectangle with the specified System.Windows.Media.Brush and System.Windows.Media.Pen and applies the specified animation clocks.
        
            brush: The brush used to fill the rectangle, or null for no fill.
            pen: The pen used to stroke the rectangle, or null for no stroke.
            rectangle: The rectangle to draw.
            rectangleAnimations: The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Rect objects.
        
            radiusX: The radius in the X dimension of the rounded corners.  This value will be clamped to the range of 0 to System.Windows.Rect.Width/2
            radiusXAnimations: The clock with which to animate the rectangle's radiusX value, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate System.Double 
             values.
        
            radiusY: The radius in the Y dimension of the rounded corners.  This value will be clamped to a value between 0 to System.Windows.Rect.Height/2.
            radiusYAnimations: The clock with which to animate the rectangle's radiusY value, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate System.Double 
             values.
        
        DrawRoundedRectangle(self: DrawingContext, brush: Brush, pen: Pen, rectangle: Rect, radiusX: float, radiusY: float)
            Draws a rounded rectangle with the specified System.Windows.Media.Brush and System.Windows.Media.Pen.
        
            brush: The brush used to fill the rectangle.
            pen: The pen used to stroke the rectangle.
            rectangle: The rectangle to draw.
            radiusX: The radius in the X dimension of the rounded corners.  This value will be clamped to the range of 0 to System.Windows.Rect.Width/2.
            radiusY: The radius in the Y dimension of the rounded corners.  This value will be clamped to a value between 0 to System.Windows.Rect.Height/2.
        """
        pass

    def DrawText(self, formattedText, origin):
        """
        DrawText(self: DrawingContext, formattedText: FormattedText, origin: Point)
            Draws formatted text at the specified location.
        
            formattedText: The formatted text to be drawn.
            origin: The location where the text is to be drawn.
        """
        pass

    def DrawVideo(self, player, rectangle, rectangleAnimations=None):
        """
        DrawVideo(self: DrawingContext, player: MediaPlayer, rectangle: Rect, rectangleAnimations: AnimationClock)
            Draws a video into the specified region and applies the specified animation clock.
        
            player: The media to draw.
            rectangle: The area in which to draw the media.
            rectangleAnimations: The clock with which to animate the rectangle's size and dimensions, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate 
             System.Windows.Rect objects.
        
        DrawVideo(self: DrawingContext, player: MediaPlayer, rectangle: Rect)
            Draws a video into the specified region.
        
            player: The media to draw.
            rectangle: The region in which to draw player.
        """
        pass

    def Pop(self):
        """
        Pop(self: DrawingContext)
            Pops the last opacity mask, opacity, clip, effect, or transform operation that was pushed onto the drawing context.
        """
        pass

    def PushClip(self, clipGeometry):
        """
        PushClip(self: DrawingContext, clipGeometry: Geometry)
            Pushes the specified clip region onto the drawing context.
        
            clipGeometry: The clip region to apply to subsequent drawing commands.
        """
        pass

    def PushEffect(self, effect, effectInput):
        """
        PushEffect(self: DrawingContext, effect: BitmapEffect, effectInput: BitmapEffectInput)
            Pushes the specified System.Windows.Media.Effects.BitmapEffect onto the drawing context.
        
            effect: The effect to apply to subsequent drawings.
            effectInput: The area to which the effect is applied, or null if the effect is to be applied to the entire area of subsequent drawings.
        """
        pass

    def PushGuidelineSet(self, guidelines):
        """
        PushGuidelineSet(self: DrawingContext, guidelines: GuidelineSet)
            Pushes the specified System.Windows.Media.GuidelineSet onto the drawing context.
        
            guidelines: The guideline set to apply to subsequent drawing commands.
        """
        pass

    def PushOpacity(self, opacity, opacityAnimations=None):
        """
        PushOpacity(self: DrawingContext, opacity: float, opacityAnimations: AnimationClock)
            Pushes the specified opacity setting onto the drawing context and applies the specified animation clock.
        
            opacity: The opacity factor to apply to subsequent drawing commands. This factor is cumulative with previous System.Windows.Media.DrawingContext.PushOpacity(System.Double) operations.
            opacityAnimations: The clock with which to animate the opacity value, or null for no animation. This clock must be created from an System.Windows.Media.Animation.AnimationTimeline that can animate System.Double values.
        PushOpacity(self: DrawingContext, opacity: float)
            Pushes the specified opacity setting onto the drawing context.
        
            opacity: The opacity factor to apply to subsequent drawing commands. This factor is cumulative with previous System.Windows.Media.DrawingContext.PushOpacity(System.Double) operations.
        """
        pass

    def PushOpacityMask(self, opacityMask):
        """
        PushOpacityMask(self: DrawingContext, opacityMask: Brush)
            Pushes the specified opacity mask onto the drawing context.
        
            opacityMask: The opacity mask to apply to subsequent drawings. The alpha values of this brush determine the opacity of the drawing to which it is applied.
        """
        pass

    def PushTransform(self, transform):
        """
        PushTransform(self: DrawingContext, transform: Transform)
            Pushes the specified System.Windows.Media.Transform onto the drawing context.
        
            transform: The transform to apply to subsequent drawing commands.
        """
        pass

    def VerifyApiNonstructuralChange(self, *args): #cannot find CLR method
        """
        VerifyApiNonstructuralChange(self: DrawingContext)
            This member supports the WPF infrastructure and is not intended to be used directly from your code.
        """
        pass

    def __enter__(self, *args): #cannot find CLR method
        """
        __enter__(self: IDisposable) -> object
        
            Provides the implementation of __enter__ for objects which implement IDisposable.
        """
        pass

    def __exit__(self, *args): #cannot find CLR method
        """
        __exit__(self: IDisposable, exc_type: object, exc_value: object, exc_back: object)
            Provides the implementation of __exit__ for objects which implement IDisposable.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass


class DrawingGroup(Drawing, ISealable, IAnimatable, IResource, IDrawingContent):
    """
    Represents a collection of drawings that can be operated upon as a single drawing.
    
    DrawingGroup()
    """
    def Append(self):
        """
        Append(self: DrawingGroup) -> DrawingContext
        
            Opens the System.Windows.Media.DrawingGroup in order to populate its System.Windows.Media.DrawingGroup.Children. This method enables you to append additional System.Windows.Media.DrawingGroup.Children to 
             this System.Windows.Media.DrawingGroup.
        
            Returns: A System.Windows.Media.DrawingContext that you can use to describe the contents of this System.Windows.Media.DrawingGroup object.
        """
        pass

    def Clone(self):
        """
        Clone(self: DrawingGroup) -> DrawingGroup
        
            Creates a modifiable deep copy of this System.Windows.Media.DrawingGroup and makes deep copies of its values.
            Returns: A modifiable clone of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: DrawingGroup) -> DrawingGroup
        
            Creates a modifiable deep copy of this System.Windows.Media.DrawingGroup object and makes deep copies of its current values.
            Returns: A modifiable clone of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: DrawingGroup) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def Open(self):
        """
        Open(self: DrawingGroup) -> DrawingContext
        
            Opens the System.Windows.Media.DrawingGroup in order to populate its System.Windows.Media.DrawingGroup.Children and clears any existing System.Windows.Media.DrawingGroup.Children.
            Returns: A System.Windows.Media.DrawingContext that can be used to describe the contents of this System.Windows.Media.DrawingGroup object.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    BitmapEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffect to apply to this System.Windows.Media.DrawingGroup.

Get: BitmapEffect(self: DrawingGroup) -> BitmapEffect

Set: BitmapEffect(self: DrawingGroup) = value
"""

    BitmapEffectInput = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the region where the System.Windows.Media.DrawingGroup applies its System.Windows.Media.DrawingGroup.BitmapEffect and, optionally, a System.Windows.Media.Imaging.BitmapSource to use as input for its System.Windows.Media.DrawingGroup.BitmapEffect.

Get: BitmapEffectInput(self: DrawingGroup) -> BitmapEffectInput

Set: BitmapEffectInput(self: DrawingGroup) = value
"""

    Children = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Drawing objects that are contained in this System.Windows.Media.DrawingGroup.

Get: Children(self: DrawingGroup) -> DrawingCollection

Set: Children(self: DrawingGroup) = value
"""

    ClipGeometry = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clip region of this System.Windows.Media.DrawingGroup.

Get: ClipGeometry(self: DrawingGroup) -> Geometry

Set: ClipGeometry(self: DrawingGroup) = value
"""

    GuidelineSet = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.GuidelineSet to apply to this System.Windows.Media.DrawingGroup.

Get: GuidelineSet(self: DrawingGroup) -> GuidelineSet

Set: GuidelineSet(self: DrawingGroup) = value
"""

    Opacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the opacity of this System.Windows.Media.DrawingGroup.

Get: Opacity(self: DrawingGroup) -> float

Set: Opacity(self: DrawingGroup) = value
"""

    OpacityMask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the brush used to alter the opacity of select regions of this System.Windows.Media.DrawingGroup.

Get: OpacityMask(self: DrawingGroup) -> Brush

Set: OpacityMask(self: DrawingGroup) = value
"""

    Transform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform that is applied to this System.Windows.Media.DrawingGroup.

Get: Transform(self: DrawingGroup) -> Transform

Set: Transform(self: DrawingGroup) = value
"""


    BitmapEffectInputProperty = None
    BitmapEffectProperty = None
    ChildrenProperty = None
    ClipGeometryProperty = None
    GuidelineSetProperty = None
    OpacityMaskProperty = None
    OpacityProperty = None
    TransformProperty = None


class ImageSource(Animatable, ISealable, IAnimatable, IResource, IFormattable):
    """ Represents a object type that has a width, height, and System.Windows.Media.ImageMetadata such as a  System.Windows.Media.Imaging.BitmapSource and a System.Windows.Media.DrawingImage. This is an abstract class. """
    def Clone(self):
        """
        Clone(self: ImageSource) -> ImageSource
        
            Creates a modifiable clone of this System.Windows.Media.ImageSource, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings 
             (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: ImageSource) -> ImageSource
        
            Creates a modifiable clone of this System.Windows.Media.ImageSource object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def PixelsToDIPs(self, *args): #cannot find CLR method
        """
        PixelsToDIPs(dpi: float, pixels: int) -> float
        
            Converts pixels to DIPs in a way that is consistent with MIL.
        
            dpi: Width of the bitmap, in dots per inch.
            pixels: Width of the bitmap, in pixels.
            Returns: The natural size of the bitmap in MIL Device Independent Pixels (DIPs, or 1/96").
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: ImageSource, provider: IFormatProvider) -> str
        
            Creates a string representation of this object based on the System.IFormatProvider passed in. If the provider is null, the System.Globalization.CultureInfo.CurrentCulture is used.
        
            provider: An System.IFormatProvider that supplies culture-specific formatting information.
            Returns: A string representation of this object.
        ToString(self: ImageSource) -> str
        
            Creates a string representation of this object based on the current culture.
            Returns: A string representation of this object.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Height = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """When overridden in a derived class, gets the height of the image in measure units (96ths of an inch).

Get: Height(self: ImageSource) -> float

"""

    Metadata = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """When overridden in a derived class, gets the System.Windows.Media.ImageMetadata associated with the image.

Get: Metadata(self: ImageSource) -> ImageMetadata

"""

    Width = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """When overridden in a derived class, gets the width of the image in measure units (96ths of an inch).

Get: Width(self: ImageSource) -> float

"""



class DrawingImage(ImageSource, ISealable, IAnimatable, IResource, IFormattable):
    """
    An System.Windows.Media.ImageSource that uses a System.Windows.Media.Drawing for content.
    
    DrawingImage()
    DrawingImage(drawing: Drawing)
    """
    def Clone(self):
        """
        Clone(self: DrawingImage) -> DrawingImage
        
            Creates a modifiable clone of this System.Windows.Media.DrawingImage, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: DrawingImage) -> DrawingImage
        
            Creates a modifiable clone of this System.Windows.Media.DrawingImage object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: DrawingImage) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, drawing=None):
        """
        __new__(cls: type)
        __new__(cls: type, drawing: Drawing)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Drawing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the drawing content for the System.Windows.Media.DrawingImage.

Get: Drawing(self: DrawingImage) -> Drawing

Set: Drawing(self: DrawingImage) = value
"""

    Height = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the height of the System.Windows.Media.DrawingImage.

Get: Height(self: DrawingImage) -> float

"""

    Metadata = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the metadata of the System.Windows.Media.DrawingImage.

Get: Metadata(self: DrawingImage) -> ImageMetadata

"""

    Width = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the width of the System.Windows.Media.DrawingImage.

Get: Width(self: DrawingImage) -> float

"""


    DrawingProperty = None


class DrawingVisual(ContainerVisual, IResource):
    """
    System.Windows.Media.DrawingVisual is a visual object that can be used to render vector graphics on the screen. The content is persisted by the system.
    
    DrawingVisual()
    """
    def AddVisualChild(self, *args): #cannot find CLR method
        """
        AddVisualChild(self: Visual, child: Visual)
            Defines the parent-child relationship between two visuals.
        
            child: The child visual object to add to parent visual.
        """
        pass

    def GetVisualChild(self, *args): #cannot find CLR method
        """
        GetVisualChild(self: ContainerVisual, index: int) -> Visual
        
            Returns a specified child System.Windows.Media.Visual for the parent System.Windows.Media.ContainerVisual.
        
            index: A 32-bit signed integer that represents the index value of the child System.Windows.Media.Visual. The value of index must be between 0 and System.Windows.Media.ContainerVisual.VisualChildrenCount - 1.
            Returns: The child System.Windows.Media.Visual.
        """
        pass

    def HitTestCore(self, *args): #cannot find CLR method
        """
        HitTestCore(self: DrawingVisual, hitTestParameters: GeometryHitTestParameters) -> GeometryHitTestResult
        
            Determines whether a geometry value is within the bounds of the visual object.
        
            hitTestParameters: A value of type System.Windows.Media.GeometryHitTestParameters that specifies the System.Windows.Media.Geometry to hit test against.
            Returns: A value of type System.Windows.Media.GeometryHitTestResult.
        HitTestCore(self: DrawingVisual, hitTestParameters: PointHitTestParameters) -> HitTestResult
        
            Determines whether a point coordinate value is within the bounds of the System.Windows.Media.DrawingVisual object.
        
            hitTestParameters: A value of type System.Windows.Media.PointHitTestParameters that specifies the System.Windows.Point to hit test against.
            Returns: A value of type System.Windows.Media.HitTestResult, representing the System.Windows.Media.Visual returned from a hit test.
        """
        pass

    def OnDpiChanged(self, *args): #cannot find CLR method
        """ OnDpiChanged(self: Visual, oldDpi: DpiScale, newDpi: DpiScale) """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: DependencyObject, e: DependencyPropertyChangedEventArgs)
            Invoked whenever the effective value of any dependency property on this System.Windows.DependencyObject has been updated. The specific dependency property that changed is reported in the event data.
        
            e: Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.
        """
        pass

    def OnVisualChildrenChanged(self, *args): #cannot find CLR method
        """
        OnVisualChildrenChanged(self: Visual, visualAdded: DependencyObject, visualRemoved: DependencyObject)
            Called when the System.Windows.Media.VisualCollection of the visual object is modified.
        
            visualAdded: The System.Windows.Media.Visual that was added to the collection
            visualRemoved: The System.Windows.Media.Visual that was removed from the collection
        """
        pass

    def OnVisualParentChanged(self, *args): #cannot find CLR method
        """
        OnVisualParentChanged(self: Visual, oldParent: DependencyObject)
            Called when the parent of the visual object is changed.
        
            oldParent: A value of type System.Windows.DependencyObject that represents the previous parent of the System.Windows.Media.Visual object. If the System.Windows.Media.Visual object did not have a previous parent, the 
             value of the parameter is null.
        """
        pass

    def RemoveVisualChild(self, *args): #cannot find CLR method
        """
        RemoveVisualChild(self: Visual, child: Visual)
            Removes the parent-child relationship between two visuals.
        
            child: The child visual object to remove from the parent visual.
        """
        pass

    def RenderOpen(self):
        """
        RenderOpen(self: DrawingVisual) -> DrawingContext
        
            Opens the System.Windows.Media.DrawingVisual object for rendering. The returned System.Windows.Media.DrawingContext value can be used to render into the System.Windows.Media.DrawingVisual.
            Returns: A value of type System.Windows.Media.DrawingContext.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    Drawing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the drawing content of the System.Windows.Media.DrawingVisual object.

Get: Drawing(self: DrawingVisual) -> DrawingGroup

"""

    VisualBitmapEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffect value for the System.Windows.Media.Visual.

"""

    VisualBitmapEffectInput = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffectInput value for the System.Windows.Media.Visual.

"""

    VisualBitmapScalingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.BitmapScalingMode for the System.Windows.Media.Visual.

"""

    VisualCacheMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a cached representation of the System.Windows.Media.Visual.

"""

    VisualChildrenCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of children for the System.Windows.Media.ContainerVisual.

"""

    VisualClearTypeHint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.ClearTypeHint that determines how ClearType is rendered in the System.Windows.Media.Visual.

"""

    VisualClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clip region of the System.Windows.Media.Visual as a System.Windows.Media.Geometry value.

"""

    VisualEdgeMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the edge mode of the System.Windows.Media.Visual as an System.Windows.Media.EdgeMode value.

"""

    VisualEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the bitmap effect to apply to the System.Windows.Media.Visual.

"""

    VisualOffset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the offset value of the visual object.

"""

    VisualOpacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the opacity of the System.Windows.Media.Visual.

"""

    VisualOpacityMask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Brush value that represents the opacity mask of the System.Windows.Media.Visual.

"""

    VisualParent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual tree parent of the visual object.

"""

    VisualScrollableAreaClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a clipped scrollable area for the System.Windows.Media.Visual.

"""

    VisualTextHintingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextHintingMode of the System.Windows.Media.Visual.

"""

    VisualTextRenderingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextRenderingMode of the System.Windows.Media.Visual.

"""

    VisualTransform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform value for the System.Windows.Media.Visual.

"""

    VisualXSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate (vertical) guideline collection.

"""

    VisualYSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate (horizontal) guideline collection.

"""



class EdgeMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Determines how the edges of non-text drawing primitives are rendered.
    
    enum EdgeMode, values: Aliased (1), Unspecified (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Aliased = None
    Unspecified = None
    value__ = None


class EllipseGeometry(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents the geometry of a circle or ellipse.
    
    EllipseGeometry()
    EllipseGeometry(rect: Rect)
    EllipseGeometry(center: Point, radiusX: float, radiusY: float)
    EllipseGeometry(center: Point, radiusX: float, radiusY: float, transform: Transform)
    """
    def Clone(self):
        """
        Clone(self: EllipseGeometry) -> EllipseGeometry
        
            Creates a modifiable clone of this System.Windows.Media.EllipseGeometry, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: EllipseGeometry) -> EllipseGeometry
        
            Creates a modifiable clone of this System.Windows.Media.EllipseGeometry object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: EllipseGeometry) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetArea(self, tolerance=None, type=None):
        """
        GetArea(self: EllipseGeometry, tolerance: float, type: ToleranceType) -> float
        
            Gets the area of this System.Windows.Media.EllipseGeometry.
        
            tolerance: The maximum bounds on the distance between points in the polygonal approximation of the geometry. Smaller values produce more accurate results but cause slower execution. If tolerance is less than .000001, 
             .000001 is used instead.
        
            type: One of the enumeration values, System.Windows.Media.ToleranceType.Absolute or System.Windows.Media.ToleranceType.Relative, that specifies whether the tolerance factor is an absolute value or relative to 
             the area of this geometry.
        
            Returns: The area of the filled region of this ellipse.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: EllipseGeometry) -> bool
        
            Determines whether this System.Windows.Media.EllipseGeometry object is empty.
            Returns: true if this System.Windows.Media.EllipseGeometry is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: EllipseGeometry) -> bool
        
            Determines whether this System.Windows.Media.EllipseGeometry object can have curved segments.
            Returns: true if this System.Windows.Media.EllipseGeometry object can have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, rect: Rect)
        __new__(cls: type, center: Point, radiusX: float, radiusY: float)
        __new__(cls: type, center: Point, radiusX: float, radiusY: float, transform: Transform)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Rect that represents the bounding box of this System.Windows.Media.EllipseGeometry. This method does not consider the extra area potentially added by a stroke.

Get: Bounds(self: EllipseGeometry) -> Rect

"""

    Center = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the center point of the System.Windows.Media.EllipseGeometry.

Get: Center(self: EllipseGeometry) -> Point

Set: Center(self: EllipseGeometry) = value
"""

    RadiusX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-radius value of the System.Windows.Media.EllipseGeometry.

Get: RadiusX(self: EllipseGeometry) -> float

Set: RadiusX(self: EllipseGeometry) = value
"""

    RadiusY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-radius value of the System.Windows.Media.EllipseGeometry.

Get: RadiusY(self: EllipseGeometry) -> float

Set: RadiusY(self: EllipseGeometry) = value
"""


    CenterProperty = None
    RadiusXProperty = None
    RadiusYProperty = None


class ExceptionEventArgs(EventArgs):
    """ Provides error exception data for media events. """
    ErrorException = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the exception that details the cause of the failure.

Get: ErrorException(self: ExceptionEventArgs) -> Exception

"""



class FamilyTypeface(object, IDeviceFont, ITypefaceMetrics):
    """
    Specifies the details of a single typeface supported by a System.Windows.Media.FontFamily.
    
    FamilyTypeface()
    """
    def Equals(self, *__args):
        """
        Equals(self: FamilyTypeface, o: object) -> bool
        
            Compares two font family typefaces for equality.
        
            o: The System.Object value that represents the typeface to compare.
            Returns: true if typeface is not null and has the same properties as this typeface; otherwise, false.
        Equals(self: FamilyTypeface, typeface: FamilyTypeface) -> bool
        
            Compares two font family typefaces for equality.
        
            typeface: The System.Windows.Media.FamilyTypeface value to compare.
            Returns: true if typeface is not null and has the same properties as this font family typeface; otherwise, false.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: FamilyTypeface) -> int
        
            Serves as a hash function for a System.Windows.Media.FamilyTypeface object. The System.Windows.Media.FamilyTypeface.GetHashCode method is suitable for use in hashing algorithms and data structures like a 
             hash table.
        
            Returns: A value of type System.Int32.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    AdjustedFaceNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection of localized face names adjusted by the font differentiator.

Get: AdjustedFaceNames(self: FamilyTypeface) -> IDictionary[XmlLanguage, str]

"""

    CapsHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the distance from baseline to top of an English capital, relative to em size.

Get: CapsHeight(self: FamilyTypeface) -> float

Set: CapsHeight(self: FamilyTypeface) = value
"""

    DeviceFontCharacterMetrics = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the collection of character metrics for a device font family typeface.

Get: DeviceFontCharacterMetrics(self: FamilyTypeface) -> CharacterMetricsDictionary

"""

    DeviceFontName = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the name or unique identifier for a device font family typeface.

Get: DeviceFontName(self: FamilyTypeface) -> str

Set: DeviceFontName(self: FamilyTypeface) = value
"""

    Stretch = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the designed stretch of the font family typeface.

Get: Stretch(self: FamilyTypeface) -> FontStretch

Set: Stretch(self: FamilyTypeface) = value
"""

    StrikethroughPosition = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the position of the strikethrough value relative to the baseline. The value is also relative to em size.

Get: StrikethroughPosition(self: FamilyTypeface) -> float

Set: StrikethroughPosition(self: FamilyTypeface) = value
"""

    StrikethroughThickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the thickness of the strikethrough relative to em size.

Get: StrikethroughThickness(self: FamilyTypeface) -> float

Set: StrikethroughThickness(self: FamilyTypeface) = value
"""

    Style = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the style of the font family typeface design.

Get: Style(self: FamilyTypeface) -> FontStyle

Set: Style(self: FamilyTypeface) = value
"""

    UnderlinePosition = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the position of underline value relative to the baseline. The value is also relative to em size.

Get: UnderlinePosition(self: FamilyTypeface) -> float

Set: UnderlinePosition(self: FamilyTypeface) = value
"""

    UnderlineThickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the thickness of underline relative to em size.

Get: UnderlineThickness(self: FamilyTypeface) -> float

Set: UnderlineThickness(self: FamilyTypeface) = value
"""

    Weight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the designed weight of this font family typeface.

Get: Weight(self: FamilyTypeface) -> FontWeight

Set: Weight(self: FamilyTypeface) = value
"""

    XHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the Western x-height relative to em size.

Get: XHeight(self: FamilyTypeface) -> float

Set: XHeight(self: FamilyTypeface) = value
"""



class FamilyTypefaceCollection(object, IList[FamilyTypeface], ICollection[FamilyTypeface], IEnumerable[FamilyTypeface], IEnumerable, IList, ICollection):
    """ Represents a collection of System.Windows.Media.FamilyTypeface instances. """
    def Add(self, item):
        """
        Add(self: FamilyTypefaceCollection, item: FamilyTypeface)
            Inserts the specified System.Windows.Media.FamilyTypeface object into the collection.
        
            item: The System.Windows.Media.FamilyTypeface object to insert.
        """
        pass

    def Clear(self):
        """
        Clear(self: FamilyTypefaceCollection)
            Removes all System.Windows.Media.FamilyTypeface objects from the System.Windows.Media.FamilyTypefaceCollection.
        """
        pass

    def Contains(self, item):
        """
        Contains(self: FamilyTypefaceCollection, item: FamilyTypeface) -> bool
        
            Determines if the collection contains the specified System.Windows.Media.FamilyTypeface.
        
            item: The System.Windows.Media.FamilyTypeface object to locate.
            Returns: true if item is in the collection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: FamilyTypefaceCollection, array: Array[FamilyTypeface], index: int)
            Copies the System.Windows.Media.FamilyTypeface objects in the collection into an array of System.Windows.Media.FamilyTypefaceCollection, starting at the specified index position.
        
            array: The destination array.
            index: The zero-based index position where copying begins.
        """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: FamilyTypefaceCollection) -> IEnumerator[FamilyTypeface]
        
            Returns an enumerator that can iterate through the collection.
            Returns: An enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, item):
        """
        IndexOf(self: FamilyTypefaceCollection, item: FamilyTypeface) -> int
        
            Returns the index of the specified System.Windows.Media.FamilyTypeface object within the collection.
        
            item: The System.Windows.Media.FamilyTypeface object to locate.
            Returns: The zero-based index of item, if found; otherwise -1;
        """
        pass

    def Insert(self, index, item):
        """
        Insert(self: FamilyTypefaceCollection, index: int, item: FamilyTypeface)
            Inserts the specified System.Windows.Media.FamilyTypeface object at the specified index position in the collection.
        
            index: The zero-based index position to insert the object.
            item: The System.Windows.Media.FamilyTypeface object to insert.
        """
        pass

    def Remove(self, item):
        """
        Remove(self: FamilyTypefaceCollection, item: FamilyTypeface) -> bool
        
            Removes the specified System.Windows.Media.FamilyTypeface object from the collection.
        
            item: The System.Windows.Media.FamilyTypeface object to remove.
            Returns: true if item was successfully deleted; otherwise false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: FamilyTypefaceCollection, index: int)
            Removes the specified System.Windows.Media.FamilyTypeface object from the collection at the specified index.
        
            index: The zero-based index position from where to delete the object.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[FamilyTypeface], item: FamilyTypeface) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of System.Windows.Media.FamilyTypeface objects in the System.Windows.Media.FamilyTypefaceCollection.

Get: Count(self: FamilyTypefaceCollection) -> int

"""

    IsReadOnly = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether the System.Windows.Media.FamilyTypefaceCollection is read-only.

Get: IsReadOnly(self: FamilyTypefaceCollection) -> bool

"""



class FillRule(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies how the intersecting areas of System.Windows.Media.PathFigure objects contained in a System.Windows.Media.Geometry are combined to form the area of the System.Windows.Media.Geometry.
    
    enum FillRule, values: EvenOdd (0), Nonzero (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    EvenOdd = None
    Nonzero = None
    value__ = None


class FontEmbeddingManager(object):
    """
    Provides functionality for physical and composite font embedding.
    
    FontEmbeddingManager()
    """
    def GetUsedGlyphs(self, glyphTypeface):
        """
        GetUsedGlyphs(self: FontEmbeddingManager, glyphTypeface: Uri) -> ICollection[UInt16]
        
            Retrieves the list of glyphs used by the glyph typeface.
        
            glyphTypeface: A System.Uri value that represents the location of the glyph typeface containing the glyphs.
            Returns: A collection of System.UInt16 values that represent the glyphs.
        """
        pass

    def RecordUsage(self, glyphRun):
        """
        RecordUsage(self: FontEmbeddingManager, glyphRun: GlyphRun)
            Initiates the collection of usage information about the glyph typeface and indices used by a specified System.Windows.Media.GlyphRun.
        
            glyphRun: The System.Windows.Media.GlyphRun whose usage information is collected.
        """
        pass

    GlyphTypefaceUris = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Returns the collection of glyph typefaces used by the System.Windows.Media.GlyphRun specified in the System.Windows.Media.FontEmbeddingManager.RecordUsage(System.Windows.Media.GlyphRun) method.

Get: GlyphTypefaceUris(self: FontEmbeddingManager) -> ICollection[Uri]

"""



class FontEmbeddingRight(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes font embedding permissions specified in an OpenType font file.
    
    enum FontEmbeddingRight, values: Editable (9), EditableButNoSubsetting (10), EditableButNoSubsettingAndWithBitmapsOnly (12), EditableButWithBitmapsOnly (11), Installable (0), InstallableButNoSubsetting (1), InstallableButNoSubsettingAndWithBitmapsOnly (3), InstallableButWithBitmapsOnly (2), PreviewAndPrint (5), PreviewAndPrintButNoSubsetting (6), PreviewAndPrintButNoSubsettingAndWithBitmapsOnly (8), PreviewAndPrintButWithBitmapsOnly (7), RestrictedLicense (4)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Editable = None
    EditableButNoSubsetting = None
    EditableButNoSubsettingAndWithBitmapsOnly = None
    EditableButWithBitmapsOnly = None
    Installable = None
    InstallableButNoSubsetting = None
    InstallableButNoSubsettingAndWithBitmapsOnly = None
    InstallableButWithBitmapsOnly = None
    PreviewAndPrint = None
    PreviewAndPrintButNoSubsetting = None
    PreviewAndPrintButNoSubsettingAndWithBitmapsOnly = None
    PreviewAndPrintButWithBitmapsOnly = None
    RestrictedLicense = None
    value__ = None


class FontFamily(object):
    """
    Represents a family of related fonts.
    
    FontFamily(familyName: str)
    FontFamily(baseUri: Uri, familyName: str)
    FontFamily()
    """
    def Equals(self, o):
        """
        Equals(self: FontFamily, o: object) -> bool
        
            Gets a value that indicates whether the current font family object and the specified font family object are the same.
        
            o: The System.Windows.Media.FontFamily object to compare.
            Returns: true if o is equal to the current System.Windows.Media.FontFamily object; otherwise, false. If o is not a System.Windows.Media.FontFamily object, false is returned.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: FontFamily) -> int
        
            Serves as a hash function for System.Windows.Media.FontFamily. It is suitable for use in hashing algorithms and data structures such as a hash table.
            Returns: An System.Int32 value that represents the hash code for the current object.
        """
        pass

    def GetTypefaces(self):
        """
        GetTypefaces(self: FontFamily) -> ICollection[Typeface]
        
            Returns a collection of System.Windows.Media.Typeface objects that represent the type faces in the default system font location.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.Typeface objects.
        """
        pass

    def ToString(self):
        """
        ToString(self: FontFamily) -> str
        
            Returns the value of the System.Windows.Media.FontFamily.Source property.
            Returns: The source location of the System.Windows.Media.FontFamily object, including the directory or uniform resource identifier (URI) location reference.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type, familyName: str)
        __new__(cls: type, baseUri: Uri, familyName: str)
        __new__(cls: type)
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    Baseline = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the distance between the baseline and the character cell top.

Get: Baseline(self: FontFamily) -> float

Set: Baseline(self: FontFamily) = value
"""

    BaseUri = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the base uniform resource identifier (URI) that is used to resolve a font family name.

Get: BaseUri(self: FontFamily) -> Uri

"""

    FamilyMaps = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the collection of System.Windows.Media.FontFamilyMap objects.

Get: FamilyMaps(self: FontFamily) -> FontFamilyMapCollection

"""

    FamilyNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection of strings and System.Globalization.CultureInfo values that represent the font family names of the System.Windows.Media.FontFamily object.

Get: FamilyNames(self: FontFamily) -> LanguageSpecificStringDictionary

"""

    FamilyTypefaces = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection of typefaces for the System.Windows.Media.FontFamily object.

Get: FamilyTypefaces(self: FontFamily) -> FamilyTypefaceCollection

"""

    LineSpacing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the line spacing value for the System.Windows.Media.FontFamily object. The line spacing is the recommended baseline-to-baseline distance for the text in this font relative to the em size.

Get: LineSpacing(self: FontFamily) -> float

Set: LineSpacing(self: FontFamily) = value
"""

    Source = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the font family name that is used to construct the System.Windows.Media.FontFamily object.

Get: Source(self: FontFamily) -> str

"""



class FontFamilyConverter(TypeConverter):
    """
    Converts instances of the System.String type to and from System.Windows.Media.FontFamily instances.
    
    FontFamilyConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: FontFamilyConverter, td: ITypeDescriptorContext, t: Type) -> bool
        
            Determines whether a class can be converted from a given type to an instance of System.Windows.Media.FontFamily.
        
            td: Describes the context information of a type.
            t: The type of the source that is being evaluated for conversion.
            Returns: true if the converter can convert from the specified type to an instance of System.Windows.Media.FontFamily; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: FontFamilyConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of System.Windows.Media.FontFamily can be converted to a different type.
        
            context: Describes the context information of a type.
            destinationType: The desired type that this instance of System.Windows.Media.FontFamily is being evaluated for conversion.
            Returns: true if the converter can convert this instance of System.Windows.Media.FontFamily to the specified type; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: FontFamilyConverter, context: ITypeDescriptorContext, cultureInfo: CultureInfo, o: object) -> object
        
            Attempts to convert a specified object to an instance of System.Windows.Media.FontFamily.
        
            context: Describes the context information of a type.
            cultureInfo: Cultural-specific information that should be respected during conversion.
            o: The object being converted.
            Returns: The instance of System.Windows.Media.FontFamily that is created from the converted o parameter.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: FontFamilyConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert a specified object to an instance of System.Windows.Media.FontFamily.
        
            context: Describes the context information of a type.
            culture: Cultural-specific information that should be respected during conversion.
            value: The object being converted.
            destinationType: The type that this instance of System.Windows.Media.FontFamily is converted to.
            Returns: The object that is created from the converted instance of System.Windows.Media.FontFamily.
        """
        pass


class FontFamilyMap(object):
    """
    Defines which System.Windows.Media.FontFamily to use for a specified set of Unicode code points and a culture-specific language.
    
    FontFamilyMap()
    """
    Language = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the culture-specific language for the System.Windows.Media.FontFamilyMap.

Get: Language(self: FontFamilyMap) -> XmlLanguage

Set: Language(self: FontFamilyMap) = value
"""

    Scale = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the font scale factor for the target System.Windows.Media.FontFamily.

Get: Scale(self: FontFamilyMap) -> float

Set: Scale(self: FontFamilyMap) = value
"""

    Target = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the target font family name for which the Unicode range applies to.

Get: Target(self: FontFamilyMap) -> str

Set: Target(self: FontFamilyMap) = value
"""

    Unicode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a string value representing one or more Unicode code point ranges.

Get: Unicode(self: FontFamilyMap) -> str

Set: Unicode(self: FontFamilyMap) = value
"""



class FontFamilyMapCollection(object, IList[FontFamilyMap], ICollection[FontFamilyMap], IEnumerable[FontFamilyMap], IEnumerable, IList, ICollection):
    """ Represents an ordered collection of System.Windows.Media.FontFamilyMap objects. """
    def Add(self, item):
        """
        Add(self: FontFamilyMapCollection, item: FontFamilyMap)
            Inserts the specified System.Windows.Media.FontFamilyMap object into the collection.
        
            item: The object to insert.
        """
        pass

    def Clear(self):
        """
        Clear(self: FontFamilyMapCollection)
            Removes all System.Windows.Media.FontFamilyMap objects from the System.Windows.Media.FontFamilyMapCollection.
        """
        pass

    def Contains(self, item):
        """
        Contains(self: FontFamilyMapCollection, item: FontFamilyMap) -> bool
        
            Indicates whether the System.Windows.Media.FontFamilyMapCollection contains the specified System.Windows.Media.FontFamilyMap object.
        
            item: The object to locate.
            Returns: true if the collection contains item; otherwise false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: FontFamilyMapCollection, array: Array[FontFamilyMap], index: int)
            Copies the System.Windows.Media.FontFamilyMap objects in the collection into an array of FontFamilyMaps, starting at the specified index position.
        
            array: The destination array.
            index: The zero-based index position where copying begins.
        """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: FontFamilyMapCollection) -> IEnumerator[FontFamilyMap]
        
            Returns an enumerator that can iterate through the collection.
            Returns: An enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, item):
        """
        IndexOf(self: FontFamilyMapCollection, item: FontFamilyMap) -> int
        
            Returns the index of the specified System.Windows.Media.FontFamilyMap object within the collection.
        
            item: The object to locate.
            Returns: The zero-based index of item, if found; otherwise -1;
        """
        pass

    def Insert(self, index, item):
        """
        Insert(self: FontFamilyMapCollection, index: int, item: FontFamilyMap)
            Inserts the specified System.Windows.Media.FontFamilyMap object at the specified index position in the collection.
        
            index: The zero-based index position to insert the object.
            item: The object to insert.
        """
        pass

    def Remove(self, item):
        """
        Remove(self: FontFamilyMapCollection, item: FontFamilyMap) -> bool
        
            Removes the specified System.Windows.Media.FontFamilyMap object from the collection.
        
            item: The object to remove.
            Returns: true if item was successfully deleted; otherwise false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: FontFamilyMapCollection, index: int)
            Deletes a System.Windows.Media.FontFamilyMap object from the System.Windows.Media.FontFamilyMapCollection.
        
            index: The zero-based index position to remove the object.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[FontFamilyMap], item: FontFamilyMap) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of System.Windows.Media.FontFamilyMap objects in the System.Windows.Media.FontFamilyMapCollection.

Get: Count(self: FontFamilyMapCollection) -> int

"""

    IsReadOnly = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates if a System.Windows.Media.FontFamilyMapCollection is read only.

Get: IsReadOnly(self: FontFamilyMapCollection) -> bool

"""



class FontFamilyValueSerializer(ValueSerializer):
    """
    Converts instances of System.String to and from instances of System.Windows.Media.FontFamily.
    
    FontFamilyValueSerializer()
    """
    def CanConvertFromString(self, value, context):
        """
        CanConvertFromString(self: FontFamilyValueSerializer, value: str, context: IValueSerializerContext) -> bool
        
            Determines if conversion from a given System.String to an instance of System.Windows.Media.FontFamily is possible.
        
            value: String to evaluate for conversion.
            context: Context information used for conversion.
            Returns: true if value can be converted; otherwise, false.
        """
        pass

    def CanConvertToString(self, value, context):
        """
        CanConvertToString(self: FontFamilyValueSerializer, value: object, context: IValueSerializerContext) -> bool
        
            Determines if an instance of System.Windows.Media.FontFamily can be converted to a System.String.
        
            value: Instance of System.Windows.Media.FontFamily to evaluate for conversion.
            context: Context information used for conversion.
            Returns: true if value can be converted into a System.String; otherwise, false.
        """
        pass

    def ConvertFromString(self, value, context):
        """
        ConvertFromString(self: FontFamilyValueSerializer, value: str, context: IValueSerializerContext) -> object
        
            Converts a System.String into a System.Windows.Media.FontFamily.
        
            value: System.String value to convert into a System.Windows.Media.FontFamily.
            context: Context information used for conversion.
            Returns: A new instance of System.Windows.Media.FontFamily based on the supplied value.
        """
        pass

    def ConvertToString(self, value, context):
        """
        ConvertToString(self: FontFamilyValueSerializer, value: object, context: IValueSerializerContext) -> str
        
            Converts an instance of System.Windows.Media.FontFamily to a System.String.
        
            value: Instance of System.Windows.Media.FontFamily to evaluate for conversion.
            context: Context information used for conversion.
            Returns: A System.String representation of the supplied System.Windows.Media.FontFamily object.
        """
        pass


class Fonts(object):
    """ Provides enumeration support for System.Windows.Media.FontFamily and System.Windows.Media.Typeface objects. """
    @staticmethod
    def GetFontFamilies(*__args):
        """
        GetFontFamilies(baseUri: Uri, location: str) -> ICollection[FontFamily]
        
            Returns a collection of System.Windows.Media.FontFamily objects using a base uniform resource identifier (URI) value to resolve the font location.
        
            baseUri: The base URI value of the location of the fonts.
            location: The location that contains the fonts.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.FontFamily objects that represent the fonts in the resolved font location.
        GetFontFamilies(baseUri: Uri) -> ICollection[FontFamily]
        
            Returns a collection of System.Windows.Media.FontFamily objects from a uniform resource identifier (URI) value that represents the location of the fonts.
        
            baseUri: The base URI value of the location of the fonts.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.FontFamily objects that represent the fonts in baseUri.
        GetFontFamilies(location: str) -> ICollection[FontFamily]
        
            Returns the collection of System.Windows.Media.FontFamily objects from a string value that represents the location of the fonts.
        
            location: The location that contains the fonts.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.FontFamily objects that represent the fonts in location.
        """
        pass

    @staticmethod
    def GetTypefaces(*__args):
        """
        GetTypefaces(baseUri: Uri, location: str) -> ICollection[Typeface]
        
            Returns a collection of System.Windows.Media.Typeface objects using a base uniform resource identifier (URI) value to resolve the font location.
        
            baseUri: The base URI value of the location of the fonts.
            location: The location that contains the fonts.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.Typeface objects that represent the fonts in the resolved font location.
        GetTypefaces(baseUri: Uri) -> ICollection[Typeface]
        
            Returns a collection of System.Windows.Media.Typeface objects from a uniform resource identifier (URI) value that represents the font location.
        
            baseUri: The base URI value of the location of the fonts.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.Typeface objects that represent the fonts in baseUri.
        GetTypefaces(location: str) -> ICollection[Typeface]
        
            Returns the collection of System.Windows.Media.Typeface objects from a string value that represents the font directory location.
        
            location: The location that contains the fonts.
            Returns: An System.Collections.Generic.ICollection of System.Windows.Media.Typeface objects that represent the fonts in location.
        """
        pass

    SystemFontFamilies = None
    SystemTypefaces = None
    __all__ = [
        'GetFontFamilies',
        'GetTypefaces',
    ]


class FormattedText(object):
    """
    Provides low-level control for drawing text in Windows Presentation Foundation (WPF) applications.
    
    FormattedText(textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush)
    FormattedText(textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, pixelsPerDip: float)
    FormattedText(textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution)
    FormattedText(textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution, pixelsPerDip: float)
    FormattedText(textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution, textFormattingMode: TextFormattingMode)
    FormattedText(textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution, textFormattingMode: TextFormattingMode, pixelsPerDip: float)
    """
    def BuildGeometry(self, origin):
        """
        BuildGeometry(self: FormattedText, origin: Point) -> Geometry
        
            Returns a System.Windows.Media.Geometry object that represents the formatted text, including all glyphs and text decorations.
        
            origin: The top-left origin of the resulting geometry.
            Returns: The System.Windows.Media.Geometry object representation of the formatted text.
        """
        pass

    def BuildHighlightGeometry(self, origin, startIndex=None, count=None):
        """
        BuildHighlightGeometry(self: FormattedText, origin: Point, startIndex: int, count: int) -> Geometry
        
            Returns a System.Windows.Media.Geometry object that represents the highlight bounding box for a specified substring of the formatted text.
        
            origin: The origin of the highlight region.
            startIndex: The index of the initial character the highlight bounds should be obtained for.
            count: The number of characters the highlight bounds should contain.
            Returns: The System.Windows.Media.Geometry object that represents the highlight bounding box of the formatted text substring.
        BuildHighlightGeometry(self: FormattedText, origin: Point) -> Geometry
        
            Returns a System.Windows.Media.Geometry object that represents the highlight bounding box of the formatted text.
        
            origin: The origin of the highlight region.
            Returns: The System.Windows.Media.Geometry object that represents the highlight bounding box of the formatted text.
        """
        pass

    def GetMaxTextWidths(self):
        """
        GetMaxTextWidths(self: FormattedText) -> Array[float]
        
            Retrieves an array of text widths. Each element in the array represents the maximum text width of sequential lines of text.
            Returns: An array of maximum text widths, each width provided in device-independent units (1/96th inch per unit).
        """
        pass

    def SetCulture(self, culture, startIndex=None, count=None):
        """
        SetCulture(self: FormattedText, culture: CultureInfo, startIndex: int, count: int)
            Sets the System.Globalization.CultureInfo for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            culture: The System.Globalization.CultureInfo to use for text formatting.
            startIndex: The start index of initial character to apply the change to.
            count: The number of characters the change should be applied to.
        SetCulture(self: FormattedText, culture: CultureInfo)
            Sets the System.Globalization.CultureInfo for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            culture: The System.Globalization.CultureInfo to use for text formatting.
        """
        pass

    def SetFontFamily(self, fontFamily, startIndex=None, count=None):
        """
        SetFontFamily(self: FormattedText, fontFamily: FontFamily)
            Sets the font family for a System.Windows.Media.FormattedText object.
        
            fontFamily: The System.Windows.Media.FontFamily to use for text formatting.
        SetFontFamily(self: FormattedText, fontFamily: FontFamily, startIndex: int, count: int)
            Sets the font family for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            fontFamily: The System.Windows.Media.FontFamily to use for text formatting.
            startIndex: The starting index of the initial character to apply the font family change to.
            count: The number of characters the change should apply to.
        SetFontFamily(self: FormattedText, fontFamily: str)
            Sets the font family for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            fontFamily: A string that constructs the System.Windows.Media.FontFamily to use for text formatting. Fallbacks are permitted; for details, see System.Windows.Media.FontFamily.
        SetFontFamily(self: FormattedText, fontFamily: str, startIndex: int, count: int)
            Sets the font family for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            fontFamily: A string that constructs the System.Windows.Media.FontFamily to use for text formatting. Fallbacks are permitted; for details, see System.Windows.Media.FontFamily.
            startIndex: The starting index of the initial character to apply the font family change to.
            count: The number of characters the change should apply to.
        """
        pass

    def SetFontSize(self, emSize, startIndex=None, count=None):
        """
        SetFontSize(self: FormattedText, emSize: float, startIndex: int, count: int)
            Sets the font size for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            emSize: The font 'em' measure size, provided in device-independent units (1/96th inch per unit).
            startIndex: The start index of the initial character to apply the font size to.
            count: The number of characters to apply the font size to.
        SetFontSize(self: FormattedText, emSize: float)
            Sets the font size for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            emSize: The font 'em' measure size, provided in device-independent units (1/96th inch per unit).
        """
        pass

    def SetFontStretch(self, stretch, startIndex=None, count=None):
        """
        SetFontStretch(self: FormattedText, stretch: FontStretch, startIndex: int, count: int)
            Sets the font stretch value for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            stretch: The desired System.Windows.FontStretch value to use for text formatting.
            startIndex: The start index of the initial character to apply the font stretch to.
            count: The number of characters to apply the font stretch to.
        SetFontStretch(self: FormattedText, stretch: FontStretch)
            Sets the font stretch value for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            stretch: The desired System.Windows.FontStretch value to use for text formatting.
        """
        pass

    def SetFontStyle(self, style, startIndex=None, count=None):
        """
        SetFontStyle(self: FormattedText, style: FontStyle, startIndex: int, count: int)
            Sets the font style for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            style: The System.Windows.FontStyle value to use for text formatting.
            startIndex: The start index of the initial character to apply the font style to.
            count: The number of characters to apply the font style to.
        SetFontStyle(self: FormattedText, style: FontStyle)
            Sets the font style for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            style: The System.Windows.FontStyle value to use for text formatting.
        """
        pass

    def SetFontTypeface(self, typeface, startIndex=None, count=None):
        """
        SetFontTypeface(self: FormattedText, typeface: Typeface, startIndex: int, count: int)
            Sets the font typeface for a specified subset of characters in the System.Windows.Media.FormattedText object.
        
            typeface: The System.Windows.Media.Typeface to use for text formatting.
            startIndex: The start index of the initial character to apply the typeface to.
            count: The number of characters to apply the typeface to.
        SetFontTypeface(self: FormattedText, typeface: Typeface)
            Sets the font typeface for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            typeface: The System.Windows.Media.Typeface to use for text formatting.
        """
        pass

    def SetFontWeight(self, weight, startIndex=None, count=None):
        """
        SetFontWeight(self: FormattedText, weight: FontWeight, startIndex: int, count: int)
            Changes the System.Windows.FontWeight for specified text within a System.Windows.Media.FormattedText object.
        
            weight: The font weight to use for text formatting.
            startIndex: The start index of the initial character to apply the font weight to.
            count: The number of characters to apply the font weight to.
        SetFontWeight(self: FormattedText, weight: FontWeight)
            Sets the font weight for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            weight: The System.Windows.FontWeight to use for text formatting.
        """
        pass

    def SetForegroundBrush(self, foregroundBrush, startIndex=None, count=None):
        """
        SetForegroundBrush(self: FormattedText, foregroundBrush: Brush, startIndex: int, count: int)
            Changes the foreground System.Windows.Media.Brush for specified text within a System.Windows.Media.FormattedText object.
        
            foregroundBrush: The brush to use for the text foreground.
            startIndex: The start index of the initial character to apply the foreground brush to.
            count: The number of characters to apply the foreground brush to.
        SetForegroundBrush(self: FormattedText, foregroundBrush: Brush)
            Changes the foreground System.Windows.Media.Brush for an entire System.Windows.Media.FormattedText object.
        
            foregroundBrush: The brush to use for the text foreground.
        """
        pass

    def SetMaxTextWidths(self, maxTextWidths):
        """
        SetMaxTextWidths(self: FormattedText, maxTextWidths: Array[float])
            Sets an array of maximum text widths within the System.Windows.Media.FormattedText, on a per-line basis. Each element in the array represents the maximum text width of sequential lines of text.
        
            maxTextWidths: An array of maximum text widths, each width provided in device-independent units (1/96th inch per unit).
        """
        pass

    def SetNumberSubstitution(self, numberSubstitution, startIndex=None, count=None):
        """
        SetNumberSubstitution(self: FormattedText, numberSubstitution: NumberSubstitution, startIndex: int, count: int)
            Sets the number substitution behavior for specified text within a System.Windows.Media.FormattedText object.
        
            numberSubstitution: Number substitution behavior to apply to the text; can be null, in which case the default number substitution method for the text culture is used.
            startIndex: The start index of initial character to apply the change to.
            count: The number of characters the change should be applied to.
        SetNumberSubstitution(self: FormattedText, numberSubstitution: NumberSubstitution)
            Sets the number substitution behavior for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            numberSubstitution: Number substitution behavior to apply to the text; can be null, in which case the default number substitution method for the text culture is used.
        """
        pass

    def SetTextDecorations(self, textDecorations, startIndex=None, count=None):
        """
        SetTextDecorations(self: FormattedText, textDecorations: TextDecorationCollection, startIndex: int, count: int)
            Sets the System.Windows.TextDecorationCollection for specified text within a System.Windows.Media.FormattedText object.
        
            textDecorations: The System.Windows.TextDecorationCollection to apply to the text.
            startIndex: The start index of the initial character to apply the text decorations to.
            count: The number of characters to apply the text decorations to.
        SetTextDecorations(self: FormattedText, textDecorations: TextDecorationCollection)
            Sets the System.Windows.TextDecorationCollection for the entire set of characters in the System.Windows.Media.FormattedText object.
        
            textDecorations: The System.Windows.TextDecorationCollection to apply to the text.
        """
        pass

    @staticmethod # known case of __new__
    def __new__(self, textToFormat, culture, flowDirection, typeface, emSize, foreground, *__args):
        """
        __new__(cls: type, textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush)
        __new__(cls: type, textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, pixelsPerDip: float)
        __new__(cls: type, textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution)
        __new__(cls: type, textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution, pixelsPerDip: float)
        __new__(cls: type, textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution, textFormattingMode: TextFormattingMode)
        __new__(cls: type, textToFormat: str, culture: CultureInfo, flowDirection: FlowDirection, typeface: Typeface, emSize: float, foreground: Brush, numberSubstitution: NumberSubstitution, textFormattingMode: TextFormattingMode, pixelsPerDip: float)
        """
        pass

    Baseline = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the top of the first line to the baseline of the first line of a System.Windows.Media.FormattedText object.

Get: Baseline(self: FormattedText) -> float

"""

    Extent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the topmost drawn pixel of the first line to the bottommost drawn pixel of the last line.

Get: Extent(self: FormattedText) -> float

"""

    FlowDirection = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.FlowDirection of a System.Windows.Media.FormattedText object.

Get: FlowDirection(self: FormattedText) -> FlowDirection

Set: FlowDirection(self: FormattedText) = value
"""

    Height = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the top of the first line to the bottom of the last line of the System.Windows.Media.FormattedText object.

Get: Height(self: FormattedText) -> float

"""

    LineHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the line height, or line spacing, between lines of text.

Get: LineHeight(self: FormattedText) -> float

Set: LineHeight(self: FormattedText) = value
"""

    MaxLineCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the maximum number of lines to display. Text exceeding the System.Windows.Media.FormattedText.MaxLineCount  will not be displayed.

Get: MaxLineCount(self: FormattedText) -> int

Set: MaxLineCount(self: FormattedText) = value
"""

    MaxTextHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the maximum height of a text column.

Get: MaxTextHeight(self: FormattedText) -> float

Set: MaxTextHeight(self: FormattedText) = value
"""

    MaxTextWidth = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the maximum text width (length) for a line of text.

Get: MaxTextWidth(self: FormattedText) -> float

Set: MaxTextWidth(self: FormattedText) = value
"""

    MinWidth = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the smallest possible text width that can fully contain the specified text content.

Get: MinWidth(self: FormattedText) -> float

"""

    OverhangAfter = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the bottom of the last line of text to the bottommost drawn pixel.

Get: OverhangAfter(self: FormattedText) -> float

"""

    OverhangLeading = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the maximum distance from the leading alignment point to the leading drawn pixel of a line.

Get: OverhangLeading(self: FormattedText) -> float

"""

    OverhangTrailing = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the maximum distance from the trailing inked pixel to the trailing alignment point of a line.

Get: OverhangTrailing(self: FormattedText) -> float

"""

    PixelsPerDip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Get: PixelsPerDip(self: FormattedText) -> float

Set: PixelsPerDip(self: FormattedText) = value
"""

    Text = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the string of text to be displayed.

Get: Text(self: FormattedText) -> str

"""

    TextAlignment = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the alignment of text within a System.Windows.Media.FormattedText object.

Get: TextAlignment(self: FormattedText) -> TextAlignment

Set: TextAlignment(self: FormattedText) = value
"""

    Trimming = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the means by which the omission of text is indicated.

Get: Trimming(self: FormattedText) -> TextTrimming

Set: Trimming(self: FormattedText) = value
"""

    Width = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the width between the leading and trailing alignment points of a line, excluding any trailing white-space characters.

Get: Width(self: FormattedText) -> float

"""

    WidthIncludingTrailingWhitespace = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the width between the leading and trailing alignment points of a line, including any trailing white-space characters.

Get: WidthIncludingTrailingWhitespace(self: FormattedText) -> float

"""



class GeneralTransform(Animatable, ISealable, IAnimatable, IResource, IFormattable):
    """ Provides generalized transformation support for objects, such as points and rectangles. This is an abstract class. """
    def Clone(self):
        """
        Clone(self: GeneralTransform) -> GeneralTransform
        
            Creates a modifiable clone of this System.Windows.Media.GeneralTransform, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GeneralTransform) -> GeneralTransform
        
            Creates a modifiable clone of this System.Windows.Media.GeneralTransform object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: GeneralTransform, provider: IFormatProvider) -> str
        
            Creates a string representation of this instance, based on the passed System.IFormatProvider parameter.
        
            provider: System.IFormatProvider instance used to process this instance.
            Returns: A string representation of this instance, based on provider.
        ToString(self: GeneralTransform) -> str
        
            Creates a string representation of this System.Windows.Media.GeneralTransform.
            Returns: A string representation of this instance.
        """
        pass

    def Transform(self, point):
        """
        Transform(self: GeneralTransform, point: Point) -> Point
        
            Transforms the specified point and returns the result.
        
            point: The point to transform.
            Returns: The result of transforming point.
        """
        pass

    def TransformBounds(self, rect):
        """
        TransformBounds(self: GeneralTransform, rect: Rect) -> Rect
        
            When overridden in a derived class, transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.
        
            rect: The bounding box to transform.
            Returns: The smallest axis-aligned bounding box possible that contains the transformed rect.
        """
        pass

    def TryTransform(self, inPoint, result):
        """
        TryTransform(self: GeneralTransform, inPoint: Point) -> (bool, Point)
        
            When overridden in a derived class, attempts to transform the specified point and returns a value that indicates whether the transformation was successful.
        
            inPoint: The point to transform.
            Returns: true if inPoint was transformed; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Inverse = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the inverse transformation of this System.Windows.Media.GeneralTransform, if possible.

Get: Inverse(self: GeneralTransform) -> GeneralTransform

"""



class GeneralTransformCollection(Animatable, ISealable, IAnimatable, IResource, IList, ICollection, IEnumerable, IList[GeneralTransform], ICollection[GeneralTransform], IEnumerable[GeneralTransform]):
    """
    Represents an ordered collection of System.Windows.Media.GeneralTransform objects.
    
    GeneralTransformCollection()
    GeneralTransformCollection(capacity: int)
    GeneralTransformCollection(collection: IEnumerable[GeneralTransform])
    """
    def Add(self, value):
        """
        Add(self: GeneralTransformCollection, value: GeneralTransform)
            Adds a System.Windows.Media.GeneralTransform object to the end of the System.Windows.Media.GeneralTransformCollection.
        
            value: The System.Windows.Media.GeneralTransform to add to the end of the System.Windows.Media.GeneralTransformCollection.
        """
        pass

    def Clear(self):
        """
        Clear(self: GeneralTransformCollection)
            Removes all System.Windows.Media.GeneralTransform objects from the System.Windows.Media.GeneralTransformCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: GeneralTransformCollection) -> GeneralTransformCollection
        
            Creates a modifiable clone of this System.Windows.Media.GeneralTransformCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references 
             and data bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: GeneralTransformCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GeneralTransformCollection) -> GeneralTransformCollection
        
            Creates a modifiable clone of this System.Windows.Media.GeneralTransformCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not 
             copied, but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: GeneralTransformCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: GeneralTransformCollection, value: GeneralTransform) -> bool
        
            Indicates whether the System.Windows.Media.GeneralTransformCollection contains the specified System.Windows.Media.GeneralTransform object.
        
            value: The System.Windows.Media.GeneralTransform to locate in the System.Windows.Media.GeneralTransformCollection.
            Returns: true if the collection contains value; otherwise false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: GeneralTransformCollection, array: Array[GeneralTransform], index: int)
            Copies the System.Windows.Media.GeneralTransform objects in the collection into an array of GeneralTransforms, starting at the specified index position.
        
            array: The destination array.
            index: The zero-based index position where copying begins.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GeneralTransformCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: GeneralTransformCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: GeneralTransformCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: GeneralTransformCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: GeneralTransformCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An enumerator that can iterate the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: GeneralTransformCollection, value: GeneralTransform) -> int
        
            Searches for the specified System.Windows.Media.GeneralTransform object within a System.Windows.Media.GeneralTransformCollection.
        
            value: The object to locate.
            Returns: The zero-based index position of value, if found; otherwise -1;
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: GeneralTransformCollection, index: int, value: GeneralTransform)
            Inserts a System.Windows.Media.GeneralTransform object into the specified index position within the System.Windows.Media.GeneralTransformCollection.
        
            index: The zero-based index position to insert the object.
            value: The object to insert.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: GeneralTransformCollection, value: GeneralTransform) -> bool
        
            Deletes a System.Windows.Media.GeneralTransform object from the System.Windows.Media.GeneralTransformCollection.
        
            value: The object to remove.
            Returns: true if value was successfully deleted; otherwise false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: GeneralTransformCollection, index: int)
            Deletes a System.Windows.Media.GeneralTransform object from the System.Windows.Media.GeneralTransformCollection.
        
            index: The zero-based index position to remove the object.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[GeneralTransform], item: GeneralTransform) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[GeneralTransform])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of System.Windows.Media.GeneralTransform objects in the System.Windows.Media.GeneralTransformCollection.

Get: Count(self: GeneralTransformCollection) -> int

"""


    Enumerator = None


class GeneralTransformGroup(GeneralTransform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a System.Windows.Media.GeneralTransform that is a composite of the transforms in its System.Windows.Media.GeneralTransformCollection.
    
    GeneralTransformGroup()
    """
    def Clone(self):
        """
        Clone(self: GeneralTransformGroup) -> GeneralTransformGroup
        
            Creates a modifiable clone of this System.Windows.Media.GeneralTransformGroup, making deep copies of this object's values. When copying dependency properties, this method copies resource references and 
             data bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GeneralTransformGroup) -> GeneralTransformGroup
        
            Creates a modifiable clone of this System.Windows.Media.GeneralTransformGroup object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GeneralTransformGroup) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def TransformBounds(self, rect):
        """
        TransformBounds(self: GeneralTransformGroup, rect: Rect) -> Rect
        
            Transforms the specified bounding box to the smallest axis-aligned bounding box possible that contains all the points in the original bounding box.
        
            rect: The bounding box to transform.
            Returns: The transformed bounding box, which is the smallest axis-aligned bounding box possible that contains all the points in the original bounding box.
        """
        pass

    def TryTransform(self, inPoint, result):
        """
        TryTransform(self: GeneralTransformGroup, inPoint: Point) -> (bool, Point)
        
            Attempts to transform the specified point.
        
            inPoint: The point to transform.
            Returns: true if inPoint was transformed; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Children = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the collection of System.Windows.Media.GeneralTransformGroup objects that form this System.Windows.Media.GeneralTransformGroup.

Get: Children(self: GeneralTransformGroup) -> GeneralTransformCollection

Set: Children(self: GeneralTransformGroup) = value
"""

    Inverse = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the inverse transform of this System.Windows.Media.GeneralTransformGroup, if it has an inverse.

Get: Inverse(self: GeneralTransformGroup) -> GeneralTransform

"""


    ChildrenProperty = None


class GeometryCollection(Animatable, ISealable, IAnimatable, IResource, IList, ICollection, IEnumerable, IList[Geometry], ICollection[Geometry], IEnumerable[Geometry]):
    """
    Represents a collection of System.Windows.Media.Geometry objects.
    
    GeometryCollection()
    GeometryCollection(capacity: int)
    GeometryCollection(collection: IEnumerable[Geometry])
    """
    def Add(self, value):
        """
        Add(self: GeometryCollection, value: Geometry)
            Adds a System.Windows.Media.Geometry to the end of the collection.
        
            value: The System.Windows.Media.Geometry to add to the end of the collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: GeometryCollection)
            Removes all System.Windows.Media.Geometry objects from the collection.
        """
        pass

    def Clone(self):
        """
        Clone(self: GeometryCollection) -> GeometryCollection
        
            Creates a modifiable clone of this System.Windows.Media.GeometryCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: GeometryCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GeometryCollection) -> GeometryCollection
        
            Creates a modifiable clone of this System.Windows.Media.GeometryCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: GeometryCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: GeometryCollection, value: Geometry) -> bool
        
            Returns a value that indicates whether the collection contains the specified System.Windows.Media.Geometry.
        
            value: The System.Windows.Media.Geometry to locate in the collection.
            Returns: true if value is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: GeometryCollection, array: Array[Geometry], index: int)
            Copies all of the System.Windows.Media.Geometry objects in a collection to a specified array.
        
            array: Identifies the array to which content is copied.
            index: Index position in the array to which the contents of the collection are copied.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GeometryCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: GeometryCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: GeometryCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: GeometryCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: GeometryCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An System.Windows.Media.GeometryCollection.Enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: GeometryCollection, value: Geometry) -> int
        
            Searches for the specified System.Windows.Media.Geometry and returns the zero-based index of the first occurrence within the entire collection.
        
            value: The System.Windows.Media.Geometry to locate in the collection.
            Returns: The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: GeometryCollection, index: int, value: Geometry)
            Inserts a System.Windows.Media.Geometry into a specific location within the collection.
        
            index: The index position at which the System.Windows.Media.Geometry is inserted.
            value: The System.Windows.Media.Geometry object to insert in the collection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: GeometryCollection, value: Geometry) -> bool
        
            Removes the first occurrence of the specified System.Windows.Media.Geometry  from this System.Windows.Media.GeometryCollection.
        
            value: The System.Windows.Media.Geometry  to remove from this System.Windows.Media.GeometryCollection.
            Returns: true if value was removed from the collection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: GeometryCollection, index: int)
            Removes the System.Windows.Media.Geometry  at the specified index from this System.Windows.Media.GeometryCollection.
        
            index: The index of the System.Windows.Media.Geometry  to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[Geometry], item: Geometry) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[Geometry])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of geometries contained in the System.Windows.Media.GeometryCollection.

Get: Count(self: GeometryCollection) -> int

"""


    Enumerator = None


class GeometryCombineMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies the different methods by which two geometries can be combined.
    
    enum GeometryCombineMode, values: Exclude (3), Intersect (1), Union (0), Xor (2)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Exclude = None
    Intersect = None
    Union = None
    value__ = None
    Xor = None


class GeometryConverter(TypeConverter):
    """
    Converts instances of other types to and from instances of System.Windows.Media.Geometry.
    
    GeometryConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: GeometryConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Indicates whether an object can be converted from a given type to an instance of a System.Windows.Media.Geometry.
        
            context: Context information required for conversion.
            sourceType: The source System.Type that is being queried for conversion support.
            Returns: true if object of the specified type can be converted to a System.Windows.Media.Geometry; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: GeometryConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether instances of System.Windows.Media.Geometry can be converted to the specified type.
        
            context: Context information required for conversion.
            destinationType: The desired type this System.Windows.Media.Geometry is being evaluated to be converted to.
            Returns: true if instances of System.Windows.Media.Geometry can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: GeometryConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Converts the specified object to a System.Windows.Media.Geometry.
        
            context: Context information required for conversion.
            culture: Cultural information respected during conversion.
            value: The object being converted.
            Returns: The System.Windows.Media.Geometry created from converting value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: GeometryConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Converts the specified System.Windows.Media.Geometry to the specified type.
        
            context: Context information required for conversion.
            culture: Cultural information respected during conversion.
            value: The System.Windows.Media.Geometry to convert.
            destinationType: The type to convert the System.Windows.Media.Geometry to.
            Returns: The object created from converting this System.Windows.Media.Geometry.
        """
        pass


class GeometryDrawing(Drawing, ISealable, IAnimatable, IResource, IDrawingContent):
    """
    Draws a System.Windows.Media.Geometry using the specified System.Windows.Media.GeometryDrawing.Brush and System.Windows.Media.GeometryDrawing.Pen.
    
    GeometryDrawing()
    GeometryDrawing(brush: Brush, pen: Pen, geometry: Geometry)
    """
    def Clone(self):
        """
        Clone(self: GeometryDrawing) -> GeometryDrawing
        
            Creates a modifiable clone of this System.Windows.Media.GeometryDrawing, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GeometryDrawing) -> GeometryDrawing
        
            Creates a modifiable clone of this System.Windows.Media.GeometryDrawing object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GeometryDrawing) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, brush=None, pen=None, geometry=None):
        """
        __new__(cls: type)
        __new__(cls: type, brush: Brush, pen: Pen, geometry: Geometry)
        """
        pass

    Brush = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Brush used to fill the interior of the shape described by this System.Windows.Media.GeometryDrawing.

Get: Brush(self: GeometryDrawing) -> Brush

Set: Brush(self: GeometryDrawing) = value
"""

    Geometry = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Geometry that describes the shape of this System.Windows.Media.GeometryDrawing.

Get: Geometry(self: GeometryDrawing) -> Geometry

Set: Geometry(self: GeometryDrawing) = value
"""

    Pen = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Pen used to stroke this System.Windows.Media.GeometryDrawing.

Get: Pen(self: GeometryDrawing) -> Pen

Set: Pen(self: GeometryDrawing) = value
"""


    BrushProperty = None
    GeometryProperty = None
    PenProperty = None


class GeometryGroup(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a composite geometry, composed of other System.Windows.Media.Geometry objects.
    
    GeometryGroup()
    """
    def Clone(self):
        """
        Clone(self: GeometryGroup) -> GeometryGroup
        
            Creates a modifiable clone of this System.Windows.Media.GeometryGroup, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GeometryGroup) -> GeometryGroup
        
            Creates a modifiable clone of this System.Windows.Media.GeometryGroup object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GeometryGroup) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: GeometryGroup) -> bool
        
            Determines whether this System.Windows.Media.GeometryGroup object is empty.
            Returns: true if this System.Windows.Media.GeometryGroup is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: GeometryGroup) -> bool
        
            Determines whether this System.Windows.Media.GeometryGroup object may have curved segments.
            Returns: true if this System.Windows.Media.GeometryGroup object may have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Children = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.GeometryCollection that contains the objects that define this System.Windows.Media.GeometryGroup.

Get: Children(self: GeometryGroup) -> GeometryCollection

Set: Children(self: GeometryGroup) = value
"""

    FillRule = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets how the intersecting areas of the objects contained in this System.Windows.Media.GeometryGroup are combined.

Get: FillRule(self: GeometryGroup) -> FillRule

Set: FillRule(self: GeometryGroup) = value
"""


    ChildrenProperty = None
    FillRuleProperty = None


class HitTestParameters(object):
    """ Defines parameters for hit testing. Classes derived from this common base class that can be used for practical hit testing include System.Windows.Media.PointHitTestParameters and System.Windows.Media.GeometryHitTestParameters. """

class GeometryHitTestParameters(HitTestParameters):
    """
    Specifies a System.Windows.Media.Geometry as the parameter to be used for hit testing a visual tree.
    
    GeometryHitTestParameters(geometry: Geometry)
    """
    @staticmethod # known case of __new__
    def __new__(self, geometry):
        """ __new__(cls: type, geometry: Geometry) """
        pass

    HitGeometry = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.Media.Geometry that defines the hit test geometry for this System.Windows.Media.GeometryHitTestParameters instance.

Get: HitGeometry(self: GeometryHitTestParameters) -> Geometry

"""



class GeometryHitTestResult(HitTestResult):
    """
    Returns the results of a hit test that uses a System.Windows.Media.Geometry as a hit test parameter.
    
    GeometryHitTestResult(visualHit: Visual, intersectionDetail: IntersectionDetail)
    """
    @staticmethod # known case of __new__
    def __new__(self, visualHit, intersectionDetail):
        """ __new__(cls: type, visualHit: Visual, intersectionDetail: IntersectionDetail) """
        pass

    IntersectionDetail = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.Media.IntersectionDetail value of the hit test.

Get: IntersectionDetail(self: GeometryHitTestResult) -> IntersectionDetail

"""

    VisualHit = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual object that is returned from a hit test result.

Get: VisualHit(self: GeometryHitTestResult) -> Visual

"""



class GlyphRun(object, IResource, ISupportInitialize):
    """
    Represents a sequence of glyphs from a single face of a single font at a single size, and with a single rendering style.
    
    GlyphRun()
    GlyphRun(pixelsPerDip: Single)
    GlyphRun(glyphTypeface: GlyphTypeface, bidiLevel: int, isSideways: bool, renderingEmSize: float, pixelsPerDip: Single, glyphIndices: IList[UInt16], baselineOrigin: Point, advanceWidths: IList[float], glyphOffsets: IList[Point], characters: IList[Char], deviceFontName: str, clusterMap: IList[UInt16], caretStops: IList[bool], language: XmlLanguage)
    GlyphRun(glyphTypeface: GlyphTypeface, bidiLevel: int, isSideways: bool, renderingEmSize: float, glyphIndices: IList[UInt16], baselineOrigin: Point, advanceWidths: IList[float], glyphOffsets: IList[Point], characters: IList[Char], deviceFontName: str, clusterMap: IList[UInt16], caretStops: IList[bool], language: XmlLanguage)
    """
    def BuildGeometry(self):
        """
        BuildGeometry(self: GlyphRun) -> Geometry
        
            Retrieves the System.Windows.Media.Geometry for the System.Windows.Media.GlyphRun.
            Returns: The System.Windows.Media.Geometry corresponding to the System.Windows.Media.GlyphRun.
        """
        pass

    def ComputeAlignmentBox(self):
        """
        ComputeAlignmentBox(self: GlyphRun) -> Rect
        
            Retrieves the alignment box for the System.Windows.Media.GlyphRun.
            Returns: A System.Windows.Rect that represents the alignment box for the System.Windows.Media.GlyphRun.
        """
        pass

    def ComputeInkBoundingBox(self):
        """
        ComputeInkBoundingBox(self: GlyphRun) -> Rect
        
            Retrieves the ink bounding box for the System.Windows.Media.GlyphRun.
            Returns: A System.Windows.Rect that represents the ink bounding box the System.Windows.Media.GlyphRun.
        """
        pass

    def GetCaretCharacterHitFromDistance(self, distance, isInside):
        """
        GetCaretCharacterHitFromDistance(self: GlyphRun, distance: float) -> (CharacterHit, bool)
        
            Retrieves the System.Windows.Media.TextFormatting.CharacterHit value that represents the character hit of the caret of the System.Windows.Media.GlyphRun.
        
            distance: Offset to use for computing the caret character hit.
            Returns: A System.Windows.Media.TextFormatting.CharacterHit value that represents the character hit that is closest to the distance value. The out parameter isInside returns true if the character hit is inside the 
             System.Windows.Media.GlyphRun; otherwise, false.
        """
        pass

    def GetDistanceFromCaretCharacterHit(self, characterHit):
        """
        GetDistanceFromCaretCharacterHit(self: GlyphRun, characterHit: CharacterHit) -> float
        
            Retrieves the offset from the leading edge of the System.Windows.Media.GlyphRun to the leading or trailing edge of a caret stop containing the specified character hit.
        
            characterHit: The System.Windows.Media.TextFormatting.CharacterHit to use for computing the offset.
            Returns: A System.Double that represents the offset from the leading edge of the System.Windows.Media.GlyphRun to the leading or trailing edge of a caret stop containing the character hit.
        """
        pass

    def GetNextCaretCharacterHit(self, characterHit):
        """
        GetNextCaretCharacterHit(self: GlyphRun, characterHit: CharacterHit) -> CharacterHit
        
            Retrieves the next valid caret character hit in the logical direction in the System.Windows.Media.GlyphRun.
        
            characterHit: The System.Windows.Media.TextFormatting.CharacterHit to use for computing the next hit value.
            Returns: A System.Windows.Media.TextFormatting.CharacterHit that represents the next valid caret character hit in the logical direction. If the return value is equal to characterHit, no further navigation is 
             possible in the System.Windows.Media.GlyphRun.
        """
        pass

    def GetPreviousCaretCharacterHit(self, characterHit):
        """
        GetPreviousCaretCharacterHit(self: GlyphRun, characterHit: CharacterHit) -> CharacterHit
        
            Retrieves the previous valid caret character hit in the logical direction in the System.Windows.Media.GlyphRun.
        
            characterHit: The System.Windows.Media.TextFormatting.CharacterHit to use for computing the previous hit value.
            Returns: A System.Windows.Media.TextFormatting.CharacterHit that represents the previous valid caret character hit in the logical direction. If the return value is equal to characterHit, no further navigation is 
             possible in the System.Windows.Media.GlyphRun.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, pixelsPerDip: Single)
        __new__(cls: type, glyphTypeface: GlyphTypeface, bidiLevel: int, isSideways: bool, renderingEmSize: float, pixelsPerDip: Single, glyphIndices: IList[UInt16], baselineOrigin: Point, advanceWidths: IList[float], glyphOffsets: IList[Point], characters: IList[Char], deviceFontName: str, clusterMap: IList[UInt16], caretStops: IList[bool], language: XmlLanguage)
        __new__(cls: type, glyphTypeface: GlyphTypeface, bidiLevel: int, isSideways: bool, renderingEmSize: float, glyphIndices: IList[UInt16], baselineOrigin: Point, advanceWidths: IList[float], glyphOffsets: IList[Point], characters: IList[Char], deviceFontName: str, clusterMap: IList[UInt16], caretStops: IList[bool], language: XmlLanguage)
        """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    AdvanceWidths = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the list of System.Double values that represent the advance widths corresponding to the glyph indices.

Get: AdvanceWidths(self: GlyphRun) -> IList[float]

Set: AdvanceWidths(self: GlyphRun) = value
"""

    BaselineOrigin = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the baseline origin of the System.Windows.Media.GlyphRun.

Get: BaselineOrigin(self: GlyphRun) -> Point

Set: BaselineOrigin(self: GlyphRun) = value
"""

    BidiLevel = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the bidirectional nesting level of the System.Windows.Media.GlyphRun.

Get: BidiLevel(self: GlyphRun) -> int

Set: BidiLevel(self: GlyphRun) = value
"""

    CaretStops = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the list of System.Boolean values that determine whether there are caret stops for every UTF16 code point in the Unicode representing the System.Windows.Media.GlyphRun.

Get: CaretStops(self: GlyphRun) -> IList[bool]

Set: CaretStops(self: GlyphRun) = value
"""

    Characters = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the list of UTF16 code points that represent the Unicode content of the System.Windows.Media.GlyphRun.

Get: Characters(self: GlyphRun) -> IList[Char]

Set: Characters(self: GlyphRun) = value
"""

    ClusterMap = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the list of System.UInt16 values that maps characters in the System.Windows.Media.GlyphRun to glyph indices.

Get: ClusterMap(self: GlyphRun) -> IList[UInt16]

Set: ClusterMap(self: GlyphRun) = value
"""

    DeviceFontName = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the specific device font for which the System.Windows.Media.GlyphRun has been optimized.

Get: DeviceFontName(self: GlyphRun) -> str

Set: DeviceFontName(self: GlyphRun) = value
"""

    FontRenderingEmSize = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the em size used for rendering the System.Windows.Media.GlyphRun.

Get: FontRenderingEmSize(self: GlyphRun) -> float

Set: FontRenderingEmSize(self: GlyphRun) = value
"""

    GlyphIndices = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets an array of System.UInt16 values that represent the glyph indices in the rendering physical font.

Get: GlyphIndices(self: GlyphRun) -> IList[UInt16]

Set: GlyphIndices(self: GlyphRun) = value
"""

    GlyphOffsets = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets an array of System.Windows.Point values representing the offsets of the glyphs in the System.Windows.Media.GlyphRun.

Get: GlyphOffsets(self: GlyphRun) -> IList[Point]

Set: GlyphOffsets(self: GlyphRun) = value
"""

    GlyphTypeface = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.GlyphTypeface for the System.Windows.Media.GlyphRun.

Get: GlyphTypeface(self: GlyphRun) -> GlyphTypeface

Set: GlyphTypeface(self: GlyphRun) = value
"""

    IsHitTestable = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value indicating whether there are any valid caret character hits within the System.Windows.Media.GlyphRun.

Get: IsHitTestable(self: GlyphRun) -> bool

"""

    IsSideways = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value indicating whether to rotate glyphs.

Get: IsSideways(self: GlyphRun) -> bool

Set: IsSideways(self: GlyphRun) = value
"""

    Language = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Markup.XmlLanguage for the System.Windows.Media.GlyphRun.

Get: Language(self: GlyphRun) -> XmlLanguage

Set: Language(self: GlyphRun) = value
"""

    PixelsPerDip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Get: PixelsPerDip(self: GlyphRun) -> Single

Set: PixelsPerDip(self: GlyphRun) = value
"""



class GlyphRunDrawing(Drawing, ISealable, IAnimatable, IResource, IDrawingContent):
    """
    Represents a System.Windows.Media.Drawing object that renders a System.Windows.Media.GlyphRun.
    
    GlyphRunDrawing()
    GlyphRunDrawing(foregroundBrush: Brush, glyphRun: GlyphRun)
    """
    def Clone(self):
        """
        Clone(self: GlyphRunDrawing) -> GlyphRunDrawing
        
            Creates a modifiable clone of this System.Windows.Media.GlyphRunDrawing, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GlyphRunDrawing) -> GlyphRunDrawing
        
            Creates a modifiable clone of this System.Windows.Media.GlyphRunDrawing object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GlyphRunDrawing) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, foregroundBrush=None, glyphRun=None):
        """
        __new__(cls: type)
        __new__(cls: type, foregroundBrush: Brush, glyphRun: GlyphRun)
        """
        pass

    ForegroundBrush = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the foreground brush of the System.Windows.Media.GlyphRunDrawing.

Get: ForegroundBrush(self: GlyphRunDrawing) -> Brush

Set: ForegroundBrush(self: GlyphRunDrawing) = value
"""

    GlyphRun = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.GlyphRun that describes the text to draw.

Get: GlyphRun(self: GlyphRunDrawing) -> GlyphRun

Set: GlyphRun(self: GlyphRunDrawing) = value
"""


    ForegroundBrushProperty = None
    GlyphRunProperty = None


class GlyphTypeface(object, ITypefaceMetrics, ISupportInitialize):
    """
    Specifies a physical font face that corresponds to a font file on the disk.
    
    GlyphTypeface()
    GlyphTypeface(typefaceSource: Uri)
    GlyphTypeface(typefaceSource: Uri, styleSimulations: StyleSimulations)
    """
    def ComputeSubset(self, glyphs):
        """ ComputeSubset(self: GlyphTypeface, glyphs: ICollection[UInt16]) -> Array[Byte] """
        pass

    def Equals(self, o):
        """
        Equals(self: GlyphTypeface, o: object) -> bool
        
            Determines whether the specified object is equal to the current System.Windows.Media.GlyphTypeface object.
        
            o: The System.Object to compare with the current System.Windows.Media.GlyphTypeface object.
            Returns: true if o is a System.Windows.Media.GlyphTypeface and is equal to the current System.Windows.Media.GlyphTypeface; otherwise, false.
        """
        pass

    def GetFontStream(self):
        """
        GetFontStream(self: GlyphTypeface) -> Stream
        
            Returns the font file stream represented by the System.Windows.Media.GlyphTypeface object.
            Returns: A System.IO.Stream value that represents the font file.
        """
        pass

    def GetGlyphOutline(self, glyphIndex, renderingEmSize, hintingEmSize):
        """
        GetGlyphOutline(self: GlyphTypeface, glyphIndex: UInt16, renderingEmSize: float, hintingEmSize: float) -> Geometry
        
            Returns a System.Windows.Media.Geometry value describing the path for a single glyph in the font.
        
            glyphIndex: The index of the glyph to get the outline for.
            renderingEmSize: The font size in drawing surface units.
            hintingEmSize: The size to hint for in points.
            Returns: A System.Windows.Media.Geometry value that represents the path of the glyph.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: GlyphTypeface) -> int
        
            Serves as a hash function for System.Windows.Media.GlyphTypeface.
            Returns: A hash code for the current object.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, typefaceSource=None, styleSimulations=None):
        """
        __new__(cls: type)
        __new__(cls: type, typefaceSource: Uri)
        __new__(cls: type, typefaceSource: Uri, styleSimulations: StyleSimulations)
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    AdvanceHeights = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the advance heights for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: AdvanceHeights(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    AdvanceWidths = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the advance widths for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: AdvanceWidths(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    Baseline = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the baseline value for the System.Windows.Media.GlyphTypeface.

Get: Baseline(self: GlyphTypeface) -> float

"""

    BottomSideBearings = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from bottom edge of the black box to the bottom end of the advance vector for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: BottomSideBearings(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    CapsHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the baseline to the top of an English capital, relative to em size, for the System.Windows.Media.GlyphTypeface object.

Get: CapsHeight(self: GlyphTypeface) -> float

"""

    CharacterToGlyphMap = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the nominal mapping of a Unicode code point to a glyph index as defined by the font 'CMAP' table.

Get: CharacterToGlyphMap(self: GlyphTypeface) -> IDictionary[int, UInt16]

"""

    Copyrights = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the copyright information for the System.Windows.Media.GlyphTypeface object.

Get: Copyrights(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    Descriptions = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the description information for the System.Windows.Media.GlyphTypeface object.

Get: Descriptions(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    DesignerNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the designer information for the System.Windows.Media.GlyphTypeface object.

Get: DesignerNames(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    DesignerUrls = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the designer URL information for the System.Windows.Media.GlyphTypeface object.

Get: DesignerUrls(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    DistancesFromHorizontalBaselineToBlackBoxBottom = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the offset value from the horizontal Western baseline to the bottom of the glyph black box for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: DistancesFromHorizontalBaselineToBlackBoxBottom(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    EmbeddingRights = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the font embedding permission for the System.Windows.Media.GlyphTypeface object.

Get: EmbeddingRights(self: GlyphTypeface) -> FontEmbeddingRight

"""

    FaceNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the face name for the System.Windows.Media.GlyphTypeface object.

Get: FaceNames(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    FamilyNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the family name for the System.Windows.Media.GlyphTypeface object.

Get: FamilyNames(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    FontUri = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the URI�for the System.Windows.Media.GlyphTypeface�object.

Get: FontUri(self: GlyphTypeface) -> Uri

Set: FontUri(self: GlyphTypeface) = value
"""

    GlyphCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of glyphs for the System.Windows.Media.GlyphTypeface object.

Get: GlyphCount(self: GlyphTypeface) -> int

"""

    Height = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the height of the character cell relative to the em size.

Get: Height(self: GlyphTypeface) -> float

"""

    LeftSideBearings = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the leading end of the advance vector to the left edge of the black box for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: LeftSideBearings(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    LicenseDescriptions = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the font license description information for the System.Windows.Media.GlyphTypeface object.

Get: LicenseDescriptions(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    ManufacturerNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the font manufacturer information for the System.Windows.Media.GlyphTypeface object.

Get: ManufacturerNames(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    RightSideBearings = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the right edge of the black box to the right end of the advance vector for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: RightSideBearings(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    SampleTexts = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the sample text information for the System.Windows.Media.GlyphTypeface object.

Get: SampleTexts(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    Stretch = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.FontStretch value for the System.Windows.Media.GlyphTypeface object.

Get: Stretch(self: GlyphTypeface) -> FontStretch

"""

    StrikethroughPosition = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.

Get: StrikethroughPosition(self: GlyphTypeface) -> float

"""

    StrikethroughThickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates the thickness of the strikethrough relative to the font em size.

Get: StrikethroughThickness(self: GlyphTypeface) -> float

"""

    Style = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the style for the System.Windows.Media.GlyphTypeface object.

Get: Style(self: GlyphTypeface) -> FontStyle

"""

    StyleSimulations = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.StyleSimulations for the System.Windows.Media.GlyphTypeface object.

Get: StyleSimulations(self: GlyphTypeface) -> StyleSimulations

Set: StyleSimulations(self: GlyphTypeface) = value
"""

    Symbol = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether the System.Windows.Media.GlyphTypeface font conforms to Unicode encoding.

Get: Symbol(self: GlyphTypeface) -> bool

"""

    TopSideBearings = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the top end of the vertical advance vector to the top edge of the black box for the glyphs represented by the System.Windows.Media.GlyphTypeface object.

Get: TopSideBearings(self: GlyphTypeface) -> IDictionary[UInt16, float]

"""

    Trademarks = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the trademark notice information for the System.Windows.Media.GlyphTypeface object.

Get: Trademarks(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    UnderlinePosition = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the position of the underline in the System.Windows.Media.GlyphTypeface.

Get: UnderlinePosition(self: GlyphTypeface) -> float

"""

    UnderlineThickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the thickness of the underline relative to em size.

Get: UnderlineThickness(self: GlyphTypeface) -> float

"""

    VendorUrls = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the vendor URL information for the System.Windows.Media.GlyphTypeface object.

Get: VendorUrls(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    Version = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the font face version interpreted from the font's 'NAME' table.

Get: Version(self: GlyphTypeface) -> float

"""

    VersionStrings = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the version string information for the System.Windows.Media.GlyphTypeface object interpreted from the font's 'NAME' table.

Get: VersionStrings(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    Weight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the designed weight of the font represented by the System.Windows.Media.GlyphTypeface object.

Get: Weight(self: GlyphTypeface) -> FontWeight

"""

    Win32FaceNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the Win32 face name for the font represented by the  System.Windows.Media.GlyphTypeface object.

Get: Win32FaceNames(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    Win32FamilyNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the Win32 family name for the font represented by the  System.Windows.Media.GlyphTypeface object.

Get: Win32FamilyNames(self: GlyphTypeface) -> IDictionary[CultureInfo, str]

"""

    XHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the Western x-height relative to em size for the font represented by the System.Windows.Media.GlyphTypeface object.

Get: XHeight(self: GlyphTypeface) -> float

"""



class GradientBrush(Brush, ISealable, IAnimatable, IResource, IFormattable):
    """ An abstract class that describes a gradient, composed of gradient stops. Classes that inherit from System.Windows.Media.GradientBrush describe different ways of interpreting gradient stops. """
    def Clone(self):
        """
        Clone(self: GradientBrush) -> GradientBrush
        
            Creates a modifiable clone of this System.Windows.Media.GradientBrush, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GradientBrush) -> GradientBrush
        
            Creates a modifiable clone of this System.Windows.Media.GradientBrush object, making deep copies of this object's current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *args): #cannot find CLR constructor
        """
        __new__(cls: type)
        __new__(cls: type, gradientStopCollection: GradientStopCollection)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    ColorInterpolationMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a System.Windows.Media.ColorInterpolationMode enumeration that specifies how the gradient's colors are interpolated.

Get: ColorInterpolationMode(self: GradientBrush) -> ColorInterpolationMode

Set: ColorInterpolationMode(self: GradientBrush) = value
"""

    GradientStops = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the brush's gradient stops.

Get: GradientStops(self: GradientBrush) -> GradientStopCollection

Set: GradientStops(self: GradientBrush) = value
"""

    MappingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a System.Windows.Media.BrushMappingMode enumeration that specifies whether the gradient brush's positioning coordinates are absolute or relative to the output area.

Get: MappingMode(self: GradientBrush) -> BrushMappingMode

Set: MappingMode(self: GradientBrush) = value
"""

    SpreadMethod = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the type of spread method that specifies how to draw a gradient that starts or ends inside the bounds of the object to be painted.

Get: SpreadMethod(self: GradientBrush) -> GradientSpreadMethod

Set: SpreadMethod(self: GradientBrush) = value
"""


    ColorInterpolationModeProperty = None
    GradientStopsProperty = None
    MappingModeProperty = None
    SpreadMethodProperty = None


class GradientSpreadMethod(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies how to draw the gradient outside a gradient brush's gradient vector or space.
    
    enum GradientSpreadMethod, values: Pad (0), Reflect (1), Repeat (2)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Pad = None
    Reflect = None
    Repeat = None
    value__ = None


class GradientStop(Animatable, ISealable, IAnimatable, IResource, IFormattable):
    """
    Describes the location and color of a transition point in a gradient.
    
    GradientStop()
    GradientStop(color: Color, offset: float)
    """
    def Clone(self):
        """
        Clone(self: GradientStop) -> GradientStop
        
            Creates a modifiable clone of this System.Windows.Media.GradientStop, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GradientStop) -> GradientStop
        
            Creates a modifiable clone of this System.Windows.Media.GradientStop object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GradientStop) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: GradientStop, provider: IFormatProvider) -> str
        
            Creates a string representation of this object based on the specified culture-specific formatting information.
        
            provider: Culture specific formatting information, or null to use the current culture.
            Returns: A string representation of this object that contains its System.Windows.Media.GradientStop.Color and System.Windows.Media.GradientStop.Offset values.
        ToString(self: GradientStop) -> str
        
            Creates a string representation of this object based on the current culture.
            Returns: A string representation of this object that contains its System.Windows.Media.GradientStop.Color and System.Windows.Media.GradientStop.Offset values.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, color=None, offset=None):
        """
        __new__(cls: type)
        __new__(cls: type, color: Color, offset: float)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Color = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the color of the gradient stop.

Get: Color(self: GradientStop) -> Color

Set: Color(self: GradientStop) = value
"""

    Offset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the location of the gradient stop within the gradient vector.

Get: Offset(self: GradientStop) -> float

Set: Offset(self: GradientStop) = value
"""


    ColorProperty = None
    OffsetProperty = None


class GradientStopCollection(Animatable, ISealable, IAnimatable, IResource, IFormattable, IList, ICollection, IEnumerable, IList[GradientStop], ICollection[GradientStop], IEnumerable[GradientStop]):
    """
    Represents a collection of System.Windows.Media.GradientStop objects that can be individually accessed by index.
    
    GradientStopCollection()
    GradientStopCollection(capacity: int)
    GradientStopCollection(collection: IEnumerable[GradientStop])
    """
    def Add(self, value):
        """
        Add(self: GradientStopCollection, value: GradientStop)
            Adds a System.Windows.Media.GradientStop to the gradient stop collection.
        
            value: The System.Windows.Media.GradientStop to add to the end of the System.Windows.Media.GradientStopCollection.
        """
        pass

    def Clear(self):
        """
        Clear(self: GradientStopCollection)
            Removes all items from the gradient stop list.
        """
        pass

    def Clone(self):
        """
        Clone(self: GradientStopCollection) -> GradientStopCollection
        
            Creates a modifiable clone of this System.Windows.Media.GradientStopCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and 
             data bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: GradientStopCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GradientStopCollection) -> GradientStopCollection
        
            Creates a modifiable clone of this System.Windows.Media.GradientStopCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: GradientStopCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: GradientStopCollection, value: GradientStop) -> bool
        
            Determines whether the collection contains the specified System.Windows.Media.GradientStop.
        
            value: The System.Windows.Media.GradientStop to locate in the System.Windows.Media.GradientStopCollection.
            Returns: true if the System.Windows.Media.GradientStop is found in the System.Windows.Media.GradientStopCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: GradientStopCollection, array: Array[GradientStop], index: int)
            Copies the entire System.Windows.Media.GradientStopCollection to a compatible one-dimensional System.Array, starting at the specified index of the target array.
        
            array: The one-dimensional array that is the destination of the items copied from the System.Windows.Media.GradientStopCollection. The array must have zero-based indexing.
            index: The zero-based index in array at which copying begins.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GradientStopCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: GradientStopCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: GradientStopCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: GradientStopCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: GradientStopCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An System.Windows.Media.GradientStopCollection.Enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: GradientStopCollection, value: GradientStop) -> int
        
            Returns the zero-based index of the specified System.Windows.Media.GradientStop.
        
            value: The item to search for.
            Returns: The index if the object was found; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: GradientStopCollection, index: int, value: GradientStop)
            Inserts a System.Windows.Media.GradientStop at the specified position in the gradient stop list.
        
            index: The zero-based index at which to insert the object.
            value: The System.Windows.Media.GradientStop to insert.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> GradientStopCollection
        
            Converts a System.String representation of a GradientStopCollection into the equivalent System.Windows.Media.GradientStopCollection.
        
            source: The System.String representation of the GradientStopCollection.
            Returns: Returns the equivalent System.Windows.Media.GradientStopCollection.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: GradientStopCollection, value: GradientStop) -> bool
        
            Removes the first occurrence of the specified System.Windows.Media.GradientStop  from this System.Windows.Media.GradientStopCollection.
        
            value: The System.Windows.Media.GradientStop  to remove from this System.Windows.Media.GradientStopCollection.
            Returns: true if value was removed from the System.Windows.Media.GradientStopCollection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: GradientStopCollection, index: int)
            Removes the System.Windows.Media.GradientStop  at the specified index from this System.Windows.Media.GradientStopCollection.
        
            index: The index of the System.Windows.Media.GradientStop  to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: GradientStopCollection, provider: IFormatProvider) -> str
        
            Creates a System.String representation of this System.Windows.Media.GradientStopCollection.
        
            provider: Culture-specific formatting information.
            Returns: Returns a System.String containing the values of this System.Windows.Media.GradientStopCollection.
        ToString(self: GradientStopCollection) -> str
        
            Creates a System.String representation of this System.Windows.Media.GradientStopCollection.
            Returns: Returns a System.String containing the values of this System.Windows.Media.GradientStopCollection.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[GradientStop], item: GradientStop) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[GradientStop])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of items contained in a System.Windows.Media.GradientStopCollection.

Get: Count(self: GradientStopCollection) -> int

"""


    Enumerator = None


class GuidelineSet(Animatable, ISealable, IAnimatable, IResource):
    """
    Represents a collection of guide lines that can assist in adjusting rendered figures to a device pixel grid.
    
    GuidelineSet()
    GuidelineSet(guidelinesX: Array[float], guidelinesY: Array[float])
    """
    def Clone(self):
        """
        Clone(self: GuidelineSet) -> GuidelineSet
        
            Creates a modifiable clone of this System.Windows.Media.GuidelineSet, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: GuidelineSet) -> GuidelineSet
        
            Creates a modifiable clone of this System.Windows.Media.GuidelineSet object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: GuidelineSet) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, guidelinesX=None, guidelinesY=None):
        """
        __new__(cls: type)
        __new__(cls: type, guidelinesX: Array[float], guidelinesY: Array[float])
        """
        pass

    GuidelinesX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a series of coordinate values that represent guide lines on the X-axis.

Get: GuidelinesX(self: GuidelineSet) -> DoubleCollection

Set: GuidelinesX(self: GuidelineSet) = value
"""

    GuidelinesY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a series of coordinate values that represent guide lines on the Y-axis.

Get: GuidelinesY(self: GuidelineSet) -> DoubleCollection

Set: GuidelinesY(self: GuidelineSet) = value
"""


    GuidelinesXProperty = None
    GuidelinesYProperty = None


class HitTestFilterBehavior(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies the return behavior of a hit test in a hit test filter callback method.
    
    enum HitTestFilterBehavior, values: Continue (6), ContinueSkipChildren (2), ContinueSkipSelf (4), ContinueSkipSelfAndChildren (0), Stop (8)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Continue = None
    ContinueSkipChildren = None
    ContinueSkipSelf = None
    ContinueSkipSelfAndChildren = None
    Stop = None
    value__ = None


class HitTestFilterCallback(MulticastDelegate, ICloneable, ISerializable):
    """
    Represents the callback method that specifies parts of the visual tree to omit from hit test processing
    
    HitTestFilterCallback(object: object, method: IntPtr)
    """
    def BeginInvoke(self, potentialHitTestTarget, callback, object):
        """ BeginInvoke(self: HitTestFilterCallback, potentialHitTestTarget: DependencyObject, callback: AsyncCallback, object: object) -> IAsyncResult """
        pass

    def CombineImpl(self, *args): #cannot find CLR method
        """
        CombineImpl(self: MulticastDelegate, follow: Delegate) -> Delegate
        
            Combines this System.Delegate with the specified System.Delegate to form a new delegate.
        
            follow: The delegate to combine with this delegate.
            Returns: A delegate that is the new root of the System.MulticastDelegate invocation list.
        """
        pass

    def DynamicInvokeImpl(self, *args): #cannot find CLR method
        """
        DynamicInvokeImpl(self: Delegate, args: Array[object]) -> object
        
            Dynamically invokes (late-bound) the method represented by the current delegate.
        
            args: An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments.
            Returns: The object returned by the method represented by the delegate.
        """
        pass

    def EndInvoke(self, result):
        """ EndInvoke(self: HitTestFilterCallback, result: IAsyncResult) -> HitTestFilterBehavior """
        pass

    def GetMethodImpl(self, *args): #cannot find CLR method
        """
        GetMethodImpl(self: MulticastDelegate) -> MethodInfo
        
            Returns a static method represented by the current System.MulticastDelegate.
            Returns: A static method represented by the current System.MulticastDelegate.
        """
        pass

    def Invoke(self, potentialHitTestTarget):
        """ Invoke(self: HitTestFilterCallback, potentialHitTestTarget: DependencyObject) -> HitTestFilterBehavior """
        pass

    def RemoveImpl(self, *args): #cannot find CLR method
        """
        RemoveImpl(self: MulticastDelegate, value: Delegate) -> Delegate
        
            Removes an element from the invocation list of this System.MulticastDelegate that is equal to the specified delegate.
        
            value: The delegate to search for in the invocation list.
            Returns: If value is found in the invocation list for this instance, then a new System.Delegate without value in its invocation list; otherwise, this instance with its original invocation list.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, object, method):
        """ __new__(cls: type, object: object, method: IntPtr) """
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass


class HitTestResultBehavior(Enum, IComparable, IFormattable, IConvertible):
    """
    Determines whether to continue the enumeration of any remaining visual objects during a hit test.
    
    enum HitTestResultBehavior, values: Continue (1), Stop (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Continue = None
    Stop = None
    value__ = None


class HitTestResultCallback(MulticastDelegate, ICloneable, ISerializable):
    """
    Represents a callback that is used to customize hit testing. WPF invokes the System.Windows.Media.HitTestResultCallback to report hit test intersections to the user.
    
    HitTestResultCallback(object: object, method: IntPtr)
    """
    def BeginInvoke(self, result, callback, object):
        """ BeginInvoke(self: HitTestResultCallback, result: HitTestResult, callback: AsyncCallback, object: object) -> IAsyncResult """
        pass

    def CombineImpl(self, *args): #cannot find CLR method
        """
        CombineImpl(self: MulticastDelegate, follow: Delegate) -> Delegate
        
            Combines this System.Delegate with the specified System.Delegate to form a new delegate.
        
            follow: The delegate to combine with this delegate.
            Returns: A delegate that is the new root of the System.MulticastDelegate invocation list.
        """
        pass

    def DynamicInvokeImpl(self, *args): #cannot find CLR method
        """
        DynamicInvokeImpl(self: Delegate, args: Array[object]) -> object
        
            Dynamically invokes (late-bound) the method represented by the current delegate.
        
            args: An array of objects that are the arguments to pass to the method represented by the current delegate.-or- null, if the method represented by the current delegate does not require arguments.
            Returns: The object returned by the method represented by the delegate.
        """
        pass

    def EndInvoke(self, result):
        """ EndInvoke(self: HitTestResultCallback, result: IAsyncResult) -> HitTestResultBehavior """
        pass

    def GetMethodImpl(self, *args): #cannot find CLR method
        """
        GetMethodImpl(self: MulticastDelegate) -> MethodInfo
        
            Returns a static method represented by the current System.MulticastDelegate.
            Returns: A static method represented by the current System.MulticastDelegate.
        """
        pass

    def Invoke(self, result):
        """ Invoke(self: HitTestResultCallback, result: HitTestResult) -> HitTestResultBehavior """
        pass

    def RemoveImpl(self, *args): #cannot find CLR method
        """
        RemoveImpl(self: MulticastDelegate, value: Delegate) -> Delegate
        
            Removes an element from the invocation list of this System.MulticastDelegate that is equal to the specified delegate.
        
            value: The delegate to search for in the invocation list.
            Returns: If value is found in the invocation list for this instance, then a new System.Delegate without value in its invocation list; otherwise, this instance with its original invocation list.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, object, method):
        """ __new__(cls: type, object: object, method: IntPtr) """
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass


class HostVisual(ContainerVisual, IResource):
    """
    Represents a System.Windows.Media.Visual object that can be connected anywhere to a parent visual tree.
    
    HostVisual()
    """
    def AddVisualChild(self, *args): #cannot find CLR method
        """
        AddVisualChild(self: Visual, child: Visual)
            Defines the parent-child relationship between two visuals.
        
            child: The child visual object to add to parent visual.
        """
        pass

    def GetVisualChild(self, *args): #cannot find CLR method
        """
        GetVisualChild(self: ContainerVisual, index: int) -> Visual
        
            Returns a specified child System.Windows.Media.Visual for the parent System.Windows.Media.ContainerVisual.
        
            index: A 32-bit signed integer that represents the index value of the child System.Windows.Media.Visual. The value of index must be between 0 and System.Windows.Media.ContainerVisual.VisualChildrenCount - 1.
            Returns: The child System.Windows.Media.Visual.
        """
        pass

    def HitTestCore(self, *args): #cannot find CLR method
        """
        HitTestCore(self: HostVisual, hitTestParameters: GeometryHitTestParameters) -> GeometryHitTestResult
        
            Implements System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters) to supply base hit testing behavior (returning System.Windows.Media.GeometryHitTestParameters).
        
            hitTestParameters: A value of type System.Windows.Media.GeometryHitTestParameters.
            Returns: Returns a value of type System.Windows.Media.GeometryHitTestResult. The System.Windows.Media.GeometryHitTestResult.VisualHit property contains the visual that was hit.
        HitTestCore(self: HostVisual, hitTestParameters: PointHitTestParameters) -> HitTestResult
        
            Implements System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.PointHitTestParameters) to supply base hit testing behavior (returning System.Windows.Media.PointHitTestParameters).
        
            hitTestParameters: A value of type System.Windows.Media.PointHitTestParameters.
            Returns: Returns a value of type System.Windows.Media.HitTestResult. The System.Windows.Media.HitTestResult.VisualHit property contains the visual object that was hit.
        """
        pass

    def OnDpiChanged(self, *args): #cannot find CLR method
        """ OnDpiChanged(self: Visual, oldDpi: DpiScale, newDpi: DpiScale) """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: DependencyObject, e: DependencyPropertyChangedEventArgs)
            Invoked whenever the effective value of any dependency property on this System.Windows.DependencyObject has been updated. The specific dependency property that changed is reported in the event data.
        
            e: Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.
        """
        pass

    def OnVisualChildrenChanged(self, *args): #cannot find CLR method
        """
        OnVisualChildrenChanged(self: Visual, visualAdded: DependencyObject, visualRemoved: DependencyObject)
            Called when the System.Windows.Media.VisualCollection of the visual object is modified.
        
            visualAdded: The System.Windows.Media.Visual that was added to the collection
            visualRemoved: The System.Windows.Media.Visual that was removed from the collection
        """
        pass

    def OnVisualParentChanged(self, *args): #cannot find CLR method
        """
        OnVisualParentChanged(self: Visual, oldParent: DependencyObject)
            Called when the parent of the visual object is changed.
        
            oldParent: A value of type System.Windows.DependencyObject that represents the previous parent of the System.Windows.Media.Visual object. If the System.Windows.Media.Visual object did not have a previous parent, the 
             value of the parameter is null.
        """
        pass

    def RemoveVisualChild(self, *args): #cannot find CLR method
        """
        RemoveVisualChild(self: Visual, child: Visual)
            Removes the parent-child relationship between two visuals.
        
            child: The child visual object to remove from the parent visual.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    VisualBitmapEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffect value for the System.Windows.Media.Visual.

"""

    VisualBitmapEffectInput = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Effects.BitmapEffectInput value for the System.Windows.Media.Visual.

"""

    VisualBitmapScalingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.BitmapScalingMode for the System.Windows.Media.Visual.

"""

    VisualCacheMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a cached representation of the System.Windows.Media.Visual.

"""

    VisualChildrenCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of children for the System.Windows.Media.ContainerVisual.

"""

    VisualClearTypeHint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.ClearTypeHint that determines how ClearType is rendered in the System.Windows.Media.Visual.

"""

    VisualClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clip region of the System.Windows.Media.Visual as a System.Windows.Media.Geometry value.

"""

    VisualEdgeMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the edge mode of the System.Windows.Media.Visual as an System.Windows.Media.EdgeMode value.

"""

    VisualEffect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the bitmap effect to apply to the System.Windows.Media.Visual.

"""

    VisualOffset = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the offset value of the visual object.

"""

    VisualOpacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the opacity of the System.Windows.Media.Visual.

"""

    VisualOpacityMask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Brush value that represents the opacity mask of the System.Windows.Media.Visual.

"""

    VisualParent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the visual tree parent of the visual object.

"""

    VisualScrollableAreaClip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a clipped scrollable area for the System.Windows.Media.Visual.

"""

    VisualTextHintingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextHintingMode of the System.Windows.Media.Visual.

"""

    VisualTextRenderingMode = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TextRenderingMode of the System.Windows.Media.Visual.

"""

    VisualTransform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform value for the System.Windows.Media.Visual.

"""

    VisualXSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate (vertical) guideline collection.

"""

    VisualYSnappingGuidelines = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate (horizontal) guideline collection.

"""



class ImageBrush(TileBrush, ISealable, IAnimatable, IResource, IFormattable):
    """
    Paints an area with an image.
    
    ImageBrush()
    ImageBrush(image: ImageSource)
    """
    def Clone(self):
        """
        Clone(self: ImageBrush) -> ImageBrush
        
            Creates a modifiable clone of this System.Windows.Media.ImageBrush, making deep copies of this object's values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: ImageBrush) -> ImageBrush
        
            Creates a modifiable clone of this System.Windows.Media.ImageBrush object, making deep copies of this object's current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: ImageBrush) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetContentBounds(self, *args): #cannot find CLR method
        """ GetContentBounds(self: ImageBrush) -> Rect """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, image=None):
        """
        __new__(cls: type)
        __new__(cls: type, image: ImageSource)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    ImageSource = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the image displayed by this System.Windows.Media.ImageBrush.

Get: ImageSource(self: ImageBrush) -> ImageSource

Set: ImageSource(self: ImageBrush) = value
"""


    ImageSourceProperty = None


class ImageDrawing(Drawing, ISealable, IAnimatable, IResource, IDrawingContent):
    """
    Draws an image within a region defined by a System.Windows.Rect.
    
    ImageDrawing()
    ImageDrawing(imageSource: ImageSource, rect: Rect)
    """
    def Clone(self):
        """
        Clone(self: ImageDrawing) -> ImageDrawing
        
            Creates a modifiable clone of this System.Windows.Media.ImageDrawing, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: ImageDrawing) -> ImageDrawing
        
            Creates a modifiable clone of this System.Windows.Media.ImageDrawing object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: ImageDrawing) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, imageSource=None, rect=None):
        """
        __new__(cls: type)
        __new__(cls: type, imageSource: ImageSource, rect: Rect)
        """
        pass

    ImageSource = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the source of the image

Get: ImageSource(self: ImageDrawing) -> ImageSource

Set: ImageSource(self: ImageDrawing) = value
"""

    Rect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the region in which the image is drawn.

Get: Rect(self: ImageDrawing) -> Rect

Set: Rect(self: ImageDrawing) = value
"""


    ImageSourceProperty = None
    RectProperty = None


class ImageMetadata(Freezable, ISealable):
    """ Defines a base class for all metadata operations on imaging related APIs.�This is an abstract class. """
    def Clone(self):
        """
        Clone(self: ImageMetadata) -> ImageMetadata
        
            Creates a modifiable clone of this System.Windows.Media.ImageMetadata, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Freezable, isChecking: bool) -> bool
        
            Makes the System.Windows.Freezable object unmodifiable or tests whether it can be made unmodifiable.
        
            isChecking: true to return an indication of whether the object can be frozen (without actually freezing it); false to actually freeze the object.
            Returns: If isChecking is true, this method returns true if the System.Windows.Freezable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the 
             if the specified System.Windows.Freezable is now unmodifiable, or false if it cannot be made unmodifiable.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass


class ImageSourceConverter(TypeConverter):
    """
    Converts a System.Windows.Media.ImageSource to and from other data types.
    
    ImageSourceConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: ImageSourceConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether the converter can convert an object of the given type to an instance of System.Windows.Media.ImageSource.
        
            context: Type context information used to evaluate conversion.
            sourceType: The type of the source that is being evaluated for conversion.
            Returns: true if the converter can convert the provided type to an instance of System.Windows.Media.ImageSource; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: ImageSourceConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of System.Windows.Media.ImageSource can be converted to a different type.
        
            context: Type context information used to evaluate conversion.
            destinationType: The desired type to evaluate the conversion to.
            Returns: true if the converter can convert this instance of System.Windows.Media.ImageSource; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: ImageSourceConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Attempts to convert a specified object to an instance of System.Windows.Media.ImageSource.
        
            context: Type context information used for conversion.
            culture: Cultural information that is respected during conversion.
            value: The object being converted.
            Returns: A new instance of System.Windows.Media.ImageSource.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: ImageSourceConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert an instance of System.Windows.Media.ImageSource to a specified type.
        
            context: Context information used for conversion.
            culture: Cultural information that is respected during conversion.
            value: System.Windows.Media.ImageSource to convert.
            destinationType: Type being evaluated for conversion.
            Returns: A new instance of the destinationType.
        """
        pass


class ImageSourceValueSerializer(ValueSerializer):
    """
    Converts instances of System.String to and from instances of System.Windows.Media.ImageSource.
    
    ImageSourceValueSerializer()
    """
    def CanConvertFromString(self, value, context):
        """
        CanConvertFromString(self: ImageSourceValueSerializer, value: str, context: IValueSerializerContext) -> bool
        
            Determines if a System.String can be converted to an instance of System.Windows.Media.ImageSource.
        
            value: System.String to evaluate for conversion.
            context: Context information used for conversion.
            Returns: true if value can be converted; otherwise, false.
        """
        pass

    def CanConvertToString(self, value, context):
        """
        CanConvertToString(self: ImageSourceValueSerializer, value: object, context: IValueSerializerContext) -> bool
        
            Determines if an instance of System.Windows.Media.ImageSource can be converted to a System.String.
        
            value: Instance of System.Windows.Media.ImageSource to evaluate for conversion.
            context: Context information used for conversion.
            Returns: true if value can be converted into a System.String; otherwise, false.
        """
        pass

    def ConvertFromString(self, value, context):
        """
        ConvertFromString(self: ImageSourceValueSerializer, value: str, context: IValueSerializerContext) -> object
        
            Converts a System.String to an System.Windows.Media.ImageSource.
        
            value: String value to convert into an System.Windows.Media.ImageSource.
            context: Context information used for conversion.
            Returns: A new instance of System.Windows.Media.ImageSource based on the supplied value.
        """
        pass

    def ConvertToString(self, value, context):
        """
        ConvertToString(self: ImageSourceValueSerializer, value: object, context: IValueSerializerContext) -> str
        
            Converts an instance of System.Windows.Media.ImageSource to a System.String.
        
            value: The System.Windows.Media.ImageSource to evaluate for conversion.
            context: Context information used for conversion.
            Returns: A System.String representation of the supplied System.Windows.Media.ImageSource object.
        """
        pass


class Int32Collection(Freezable, ISealable, IFormattable, IList, ICollection, IEnumerable, IList[int], ICollection[int], IEnumerable[int]):
    """
    Represents a collection of System.Int32 values.
    
    Int32Collection()
    Int32Collection(capacity: int)
    Int32Collection(collection: IEnumerable[int])
    """
    def Add(self, value):
        """
        Add(self: Int32Collection, value: int)
            Adds an System.Int32 to the end of the collection.
        
            value: The System.Int32 to add to the end of the collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: Int32Collection)
            Removes all System.Int32 values from the collection.
        """
        pass

    def Clone(self):
        """
        Clone(self: Int32Collection) -> Int32Collection
        
            Creates a modifiable clone of this System.Windows.Media.Int32Collection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: Int32Collection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: Int32Collection) -> Int32Collection
        
            Creates a modifiable clone of this System.Windows.Media.Int32Collection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: Int32Collection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: Int32Collection, value: int) -> bool
        
            Gets a value that indicates whether the collection contains the specified System.Int32.
        
            value: The System.Int32 to locate in the collection.
            Returns: true if the System.Int32 is found in the System.Windows.Media.Int32Collection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: Int32Collection, array: Array[int], index: int)
            Copies all of the System.Int32 values in a collection to a specified array.
        
            array: Identifies the array to which content is copied.
            index: Index position in the array to which the contents of the collection are copied.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: Int32Collection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Freezable, isChecking: bool) -> bool
        
            Makes the System.Windows.Freezable object unmodifiable or tests whether it can be made unmodifiable.
        
            isChecking: true to return an indication of whether the object can be frozen (without actually freezing it); false to actually freeze the object.
            Returns: If isChecking is true, this method returns true if the System.Windows.Freezable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the 
             if the specified System.Windows.Freezable is now unmodifiable, or false if it cannot be made unmodifiable.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: Int32Collection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: Int32Collection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: Int32Collection) -> Enumerator
        
            Returns an System.Windows.Media.Int32Collection.Enumerator that can iterate through the collection.
            Returns: An System.Windows.Media.Int32Collection.Enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: Int32Collection, value: int) -> int
        
            Searches for the specified System.Int32 and returns the zero-based index of the first occurrence within the entire collection.
        
            value: The System.Int32 to locate in the collection.
            Returns: The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: Int32Collection, index: int, value: int)
            Inserts an System.Int32 into a specific location within the collection.
        
            index: The index position at which the System.Int32 is inserted.
            value: The System.Int32 to insert in the collection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> Int32Collection
        
            Returns an instance of System.Windows.Media.Int32Collection created from a specified string.
        
            source: The string that is converted to an System.Int32.
            Returns: An instance of System.Windows.Media.Int32Collection created from source.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: Int32Collection, value: int) -> bool
        
            Removes an System.Int32 from the collection.
        
            value: Identifies the System.Int32 to remove from the collection.
            Returns: true if value was removed from the System.Windows.Media.Int32Collection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: Int32Collection, index: int)
            Removes the System.Int32 at the specified index position from the collection.
        
            index: Index position of the System.Int32 to be removed.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: Int32Collection, provider: IFormatProvider) -> str
        
            Converts the current value of a System.Windows.Media.Int32Collection to a System.String using the specified culture-specific formatting information.
        
            provider: Culture-specific formatting information.
            Returns: A string representation of the System.Windows.Media.Int32Collection.
        ToString(self: Int32Collection) -> str
        
            Converts the current value of a System.Windows.Media.Int32Collection to a System.String.
            Returns: A string representation of the System.Windows.Media.Int32Collection.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[int], item: int) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[int])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of System.Int32 values contained in the System.Windows.Media.Int32Collection.

Get: Count(self: Int32Collection) -> int

"""


    Enumerator = None


class Int32CollectionConverter(TypeConverter):
    """
    Converts an System.Windows.Media.Int32Collection to and from other data types.
    
    Int32CollectionConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: Int32CollectionConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines if the converter can convert an object of the given type to an instance of System.Windows.Media.Int32Collection.
        
            context: Describes the context information of a type.
            sourceType: The type of the source that is being evaluated for conversion.
            Returns: true if the converter can convert the provided type to an instance of System.Windows.Media.Int32Collection; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: Int32CollectionConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines if the converter can convert an System.Windows.Media.Int32Collection to a given data type.
        
            context: The context information of a type.
            destinationType: The desired type to evaluate the conversion to.
            Returns: true if an System.Windows.Media.Int32Collection can convert to destinationType; otherwise false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: Int32CollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Attempts to convert a specified object to an System.Windows.Media.Int32Collection instance.
        
            context: Context information used for conversion.
            culture: Cultural information that is respected during conversion.
            value: The object being converted.
            Returns: A new instance of System.Windows.Media.Int32Collection.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: Int32CollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert an instance of System.Windows.Media.Int32Collection to a specified type.
        
            context: Context information used for conversion.
            culture: Cultural information that is respected during conversion.
            value: System.Windows.Media.Int32Collection to convert.
            destinationType: Type being evaluated for conversion.
            Returns: A new instance of the destinationType.
        """
        pass


class IntersectionDetail(Enum, IComparable, IFormattable, IConvertible):
    """
    Provides information about the intersection between the geometries in the System.Windows.Media.GeometryHitTestParameters and the visual which was hit.
    
    enum IntersectionDetail, values: Empty (1), FullyContains (3), FullyInside (2), Intersects (4), NotCalculated (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Empty = None
    FullyContains = None
    FullyInside = None
    Intersects = None
    NotCalculated = None
    value__ = None


class InvalidWmpVersionException(SystemException, ISerializable, _Exception):
    """
    The exception that is thrown when the installed Microsoft Windows Media Player version is not supported.
    
    InvalidWmpVersionException()
    InvalidWmpVersionException(message: str)
    InvalidWmpVersionException(message: str, innerException: Exception)
    """
    def add_SerializeObjectState(self, *args): #cannot find CLR method
        """ add_SerializeObjectState(self: Exception, value: EventHandler[SafeSerializationEventArgs]) """
        pass

    def remove_SerializeObjectState(self, *args): #cannot find CLR method
        """ remove_SerializeObjectState(self: Exception, value: EventHandler[SafeSerializationEventArgs]) """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, message=None, innerException=None):
        """
        __new__(cls: type)
        __new__(cls: type, message: str)
        __new__(cls: type, info: SerializationInfo, context: StreamingContext)
        __new__(cls: type, message: str, innerException: Exception)
        """
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass


class LanguageSpecificStringDictionary(object, IDictionary[XmlLanguage, str], ICollection[KeyValuePair[XmlLanguage, str]], IEnumerable[KeyValuePair[XmlLanguage, str]], IEnumerable, IDictionary, ICollection):
    """ Represents a dictionary of strings that are used to represent the name of an object in different languages. """
    def Add(self, *__args):
        """
        Add(self: LanguageSpecificStringDictionary, key: XmlLanguage, value: str)
            Adds a language and associated string to the System.Windows.Media.LanguageSpecificStringDictionary.
        
            key: A value of type System.Windows.Markup.XmlLanguage.
            value: A value of type System.String.
        Add(self: LanguageSpecificStringDictionary, item: KeyValuePair[XmlLanguage, str])
        """
        pass

    def Clear(self):
        """
        Clear(self: LanguageSpecificStringDictionary)
            Removes all elements from the collection.
        """
        pass

    def Contains(self, item):
        """ Contains(self: LanguageSpecificStringDictionary, item: KeyValuePair[XmlLanguage, str]) -> bool """
        pass

    def ContainsKey(self, key):
        """
        ContainsKey(self: LanguageSpecificStringDictionary, key: XmlLanguage) -> bool
        
            Determines whether the System.Windows.Media.LanguageSpecificStringDictionary contains the specified language.
        
            key: A value of type System.Windows.Markup.XmlLanguage.
            Returns: true if the System.Windows.Media.LanguageSpecificStringDictionary contains key; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """ CopyTo(self: LanguageSpecificStringDictionary, array: Array[KeyValuePair[XmlLanguage, str]], index: int) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: LanguageSpecificStringDictionary) -> IEnumerator[KeyValuePair[XmlLanguage, str]]
        
            Returns an enumerator that iterates through the collection.
            Returns: An enumerator that iterates through the collection.
        """
        pass

    def Remove(self, *__args):
        """
        Remove(self: LanguageSpecificStringDictionary, key: XmlLanguage) -> bool
        
            Removes the element from System.Windows.Media.LanguageSpecificStringDictionary based on the specified key value.
        
            key: A value of type System.Windows.Markup.XmlLanguage.
            Returns: true if the element referenced by key was successfully deleted; otherwise false.
        Remove(self: LanguageSpecificStringDictionary, item: KeyValuePair[XmlLanguage, str]) -> bool
        """
        pass

    def TryGetValue(self, key, value):
        """
        TryGetValue(self: LanguageSpecificStringDictionary, key: XmlLanguage) -> (bool, str)
        
            Retrieves the string value in the System.Windows.Media.LanguageSpecificStringDictionary for a specified key, or language.
        
            key: A value of type System.Windows.Markup.XmlLanguage.
            Returns: true if the System.Windows.Media.LanguageSpecificStringDictionary contains an entry for key; otherwise false.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+yx.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: IDictionary[XmlLanguage, str], key: XmlLanguage) -> bool
        __contains__(self: IDictionary, key: object) -> bool
        
            Determines whether the System.Collections.IDictionary object contains an element with the specified key.
        
            key: The key to locate in the System.Collections.IDictionary object.
            Returns: true if the System.Collections.IDictionary contains an element with the key; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of strings in the System.Windows.Media.LanguageSpecificStringDictionary.

Get: Count(self: LanguageSpecificStringDictionary) -> int

"""

    IsReadOnly = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value indicating whether the System.Windows.Media.LanguageSpecificStringDictionary is read-only.

Get: IsReadOnly(self: LanguageSpecificStringDictionary) -> bool

"""

    Keys = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection containing the keys, or System.Windows.Markup.XmlLanguage objects, in the dictionary.

Get: Keys(self: LanguageSpecificStringDictionary) -> ICollection[XmlLanguage]

"""

    Values = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection containing the values, or strings, in the dictionary.

Get: Values(self: LanguageSpecificStringDictionary) -> ICollection[str]

"""



class LinearGradientBrush(GradientBrush, ISealable, IAnimatable, IResource, IFormattable):
    """
    Paints an area with a linear gradient.
    
    LinearGradientBrush()
    LinearGradientBrush(startColor: Color, endColor: Color, angle: float)
    LinearGradientBrush(startColor: Color, endColor: Color, startPoint: Point, endPoint: Point)
    LinearGradientBrush(gradientStopCollection: GradientStopCollection)
    LinearGradientBrush(gradientStopCollection: GradientStopCollection, angle: float)
    LinearGradientBrush(gradientStopCollection: GradientStopCollection, startPoint: Point, endPoint: Point)
    """
    def Clone(self):
        """
        Clone(self: LinearGradientBrush) -> LinearGradientBrush
        
            Creates a modifiable clone of this System.Windows.Media.LinearGradientBrush, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: LinearGradientBrush) -> LinearGradientBrush
        
            Creates a modifiable clone of this System.Windows.Media.LinearGradientBrush object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: LinearGradientBrush) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, startColor: Color, endColor: Color, angle: float)
        __new__(cls: type, startColor: Color, endColor: Color, startPoint: Point, endPoint: Point)
        __new__(cls: type, gradientStopCollection: GradientStopCollection)
        __new__(cls: type, gradientStopCollection: GradientStopCollection, angle: float)
        __new__(cls: type, gradientStopCollection: GradientStopCollection, startPoint: Point, endPoint: Point)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    EndPoint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the ending two-dimensional coordinates of the linear gradient.

Get: EndPoint(self: LinearGradientBrush) -> Point

Set: EndPoint(self: LinearGradientBrush) = value
"""

    StartPoint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the starting two-dimensional coordinates of the linear gradient.

Get: StartPoint(self: LinearGradientBrush) -> Point

Set: StartPoint(self: LinearGradientBrush) = value
"""


    EndPointProperty = None
    StartPointProperty = None


class LineGeometry(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents the geometry of a line.
    
    LineGeometry()
    LineGeometry(startPoint: Point, endPoint: Point)
    LineGeometry(startPoint: Point, endPoint: Point, transform: Transform)
    """
    def Clone(self):
        """
        Clone(self: LineGeometry) -> LineGeometry
        
            Creates a modifiable clone of this System.Windows.Media.LineGeometry, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: LineGeometry) -> LineGeometry
        
            Creates a modifiable clone of this System.Windows.Media.LineGeometry object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: LineGeometry) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetArea(self, tolerance=None, type=None):
        """
        GetArea(self: LineGeometry, tolerance: float, type: ToleranceType) -> float
        
            Gets the area of the filled region of this System.Windows.Media.LineGeometry object.
        
            tolerance: The computational tolerance of error.
            type: The specified type for interpreting the error tolerance.
            Returns: The area of the filled region of this System.Windows.Media.LineGeometry object, which is always 0 because a line contains no area.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: LineGeometry) -> bool
        
            Determines whether this System.Windows.Media.LineGeometry object is empty.
            Returns: true if this System.Windows.Media.LineGeometry is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: LineGeometry) -> bool
        
            Determines whether this System.Windows.Media.LineGeometry object can have curved segments.
            Returns: true if this System.Windows.Media.LineGeometry object can have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, startPoint=None, endPoint=None, transform=None):
        """
        __new__(cls: type)
        __new__(cls: type, startPoint: Point, endPoint: Point)
        __new__(cls: type, startPoint: Point, endPoint: Point, transform: Transform)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the axis-aligned bounding box of this System.Windows.Media.LineGeometry.

Get: Bounds(self: LineGeometry) -> Rect

"""

    EndPoint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the end point of a line.

Get: EndPoint(self: LineGeometry) -> Point

Set: EndPoint(self: LineGeometry) = value
"""

    StartPoint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the start point of the line.

Get: StartPoint(self: LineGeometry) -> Point

Set: StartPoint(self: LineGeometry) = value
"""


    EndPointProperty = None
    StartPointProperty = None


class LineSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Creates a line between two points in a System.Windows.Media.PathFigure.
    
    LineSegment()
    LineSegment(point: Point, isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: LineSegment) -> LineSegment
        
            Creates a modifiable copy of this System.Windows.Media.LineSegment by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: LineSegment) -> LineSegment
        
            Creates a modifiable copy of this System.Windows.Media.LineSegment object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does 
             copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: LineSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, point=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, point: Point, isStroked: bool)
        """
        pass

    Point = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the end point of the line segment.

Get: Point(self: LineSegment) -> Point

Set: Point(self: LineSegment) = value
"""


    PointProperty = None


class Matrix(object, IFormattable):
    """
    Represents a 3x3 affine transformation matrix used for transformations in 2-D space.
    
    Matrix(m11: float, m12: float, m21: float, m22: float, offsetX: float, offsetY: float)
    """
    def Append(self, matrix):
        """
        Append(self: Matrix, matrix: Matrix)
            Appends the specified System.Windows.Media.Matrix structure to this System.Windows.Media.Matrix structure.
        
            matrix: The System.Windows.Media.Matrix structure to append to this System.Windows.Media.Matrix structure.
        """
        pass

    @staticmethod
    def Equals(*__args):
        """
        Equals(self: Matrix, value: Matrix) -> bool
        
            Determines whether the specified System.Windows.Media.Matrix structure is identical to this instance.
        
            value: The instance of System.Windows.Media.Matrix to compare to this instance.
            Returns: true if instances are equal; otherwise, false.
        Equals(self: Matrix, o: object) -> bool
        
            Determines whether the specified System.Object is a System.Windows.Media.Matrix structure that is identical to this System.Windows.Media.Matrix.
        
            o: The System.Object to compare.
            Returns: true if o is a System.Windows.Media.Matrix structure that is identical to this System.Windows.Media.Matrix structure; otherwise, false.
        Equals(matrix1: Matrix, matrix2: Matrix) -> bool
        
            Determines whether the two specified System.Windows.Media.Matrix structures are identical.
        
            matrix1: The first System.Windows.Media.Matrix structure to compare.
            matrix2: The second System.Windows.Media.Matrix structure to compare.
            Returns: true if matrix1 and matrix2 are identical; otherwise, false.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: Matrix) -> int
        
            Returns the hash code for this System.Windows.Media.Matrix structure.
            Returns: The hash code for this instance.
        """
        pass

    def Invert(self):
        """
        Invert(self: Matrix)
            Inverts this System.Windows.Media.Matrix structure.
        """
        pass

    @staticmethod
    def Multiply(trans1, trans2):
        """
        Multiply(trans1: Matrix, trans2: Matrix) -> Matrix
        
            Multiplies a System.Windows.Media.Matrix structure by another System.Windows.Media.Matrix structure.
        
            trans1: The first System.Windows.Media.Matrix structure to multiply.
            trans2: The second System.Windows.Media.Matrix structure to multiply.
            Returns: The result of multiplying trans1 by trans2.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> Matrix
        
            Converts a System.String representation of a matrix into the equivalent System.Windows.Media.Matrix structure.
        
            source: The System.String representation of the matrix.
            Returns: The equivalent System.Windows.Media.Matrix structure.
        """
        pass

    def Prepend(self, matrix):
        """
        Prepend(self: Matrix, matrix: Matrix)
            Prepends the specified System.Windows.Media.Matrix structure onto this System.Windows.Media.Matrix structure.
        
            matrix: The System.Windows.Media.Matrix structure to prepend to this System.Windows.Media.Matrix structure.
        """
        pass

    def Rotate(self, angle):
        """
        Rotate(self: Matrix, angle: float)
            Applies a rotation of the specified angle about the origin of this System.Windows.Media.Matrix structure.
        
            angle: The angle of rotation.
        """
        pass

    def RotateAt(self, angle, centerX, centerY):
        """
        RotateAt(self: Matrix, angle: float, centerX: float, centerY: float)
            Rotates this matrix about the specified point.
        
            angle: The angle, in degrees, by which to rotate this matrix.
            centerX: The x-coordinate of the point about which to rotate this matrix.
            centerY: The y-coordinate of the point about which to rotate this matrix.
        """
        pass

    def RotateAtPrepend(self, angle, centerX, centerY):
        """
        RotateAtPrepend(self: Matrix, angle: float, centerX: float, centerY: float)
            Prepends a rotation of the specified angle at the specified point to this System.Windows.Media.Matrix structure.
        
            angle: The rotation angle, in degrees.
            centerX: The x-coordinate of the rotation center.
            centerY: The y-coordinate of the rotation center.
        """
        pass

    def RotatePrepend(self, angle):
        """
        RotatePrepend(self: Matrix, angle: float)
            Prepends a rotation of the specified angle to this System.Windows.Media.Matrix structure.
        
            angle: The angle of rotation to prepend.
        """
        pass

    def Scale(self, scaleX, scaleY):
        """
        Scale(self: Matrix, scaleX: float, scaleY: float)
            Appends the specified scale vector to this System.Windows.Media.Matrix structure.
        
            scaleX: The value by which to scale this System.Windows.Media.Matrix along the x-axis.
            scaleY: The value by which to scale this System.Windows.Media.Matrix along the y-axis.
        """
        pass

    def ScaleAt(self, scaleX, scaleY, centerX, centerY):
        """
        ScaleAt(self: Matrix, scaleX: float, scaleY: float, centerX: float, centerY: float)
            Scales this System.Windows.Media.Matrix by the specified amount about the specified point.
        
            scaleX: The amount by which to scale this System.Windows.Media.Matrix along the x-axis.
            scaleY: The amount by which to scale this System.Windows.Media.Matrix along the y-axis.
            centerX: The x-coordinate of the scale operation's center point.
            centerY: The y-coordinate of the scale operation's center point.
        """
        pass

    def ScaleAtPrepend(self, scaleX, scaleY, centerX, centerY):
        """
        ScaleAtPrepend(self: Matrix, scaleX: float, scaleY: float, centerX: float, centerY: float)
            Prepends the specified scale about the specified point of this System.Windows.Media.Matrix.
        
            scaleX: The x-axis scale factor.
            scaleY: The y-axis scale factor.
            centerX: The x-coordinate of the point about which the scale operation is performed.
            centerY: The y-coordinate of the point about which the scale operation is performed.
        """
        pass

    def ScalePrepend(self, scaleX, scaleY):
        """
        ScalePrepend(self: Matrix, scaleX: float, scaleY: float)
            Prepends the specified scale vector to this System.Windows.Media.Matrix structure.
        
            scaleX: The value by which to scale this System.Windows.Media.Matrix structure along the x-axis.
            scaleY: The value by which to scale this System.Windows.Media.Matrix structure along the y-axis.
        """
        pass

    def SetIdentity(self):
        """
        SetIdentity(self: Matrix)
            Changes this System.Windows.Media.Matrix structure into an identity matrix.
        """
        pass

    def Skew(self, skewX, skewY):
        """
        Skew(self: Matrix, skewX: float, skewY: float)
            Appends a skew of the specified degrees in the x and y dimensions to this System.Windows.Media.Matrix structure.
        
            skewX: The angle in the x dimension by which to skew this System.Windows.Media.Matrix.
            skewY: The angle in the y dimension by which to skew this System.Windows.Media.Matrix.
        """
        pass

    def SkewPrepend(self, skewX, skewY):
        """
        SkewPrepend(self: Matrix, skewX: float, skewY: float)
            Prepends a skew of the specified degrees in the x and y dimensions to this System.Windows.Media.Matrix structure.
        
            skewX: The angle in the x dimension by which to skew this System.Windows.Media.Matrix.
            skewY: The angle in the y dimension by which to skew this System.Windows.Media.Matrix.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: Matrix, provider: IFormatProvider) -> str
        
            Creates a System.String representation of this System.Windows.Media.Matrix structure with culture-specific formatting information.
        
            provider: The culture-specific formatting information.
            Returns: A System.String containing the System.Windows.Media.Matrix.M11, System.Windows.Media.Matrix.M12, System.Windows.Media.Matrix.M21, System.Windows.Media.Matrix.M22, System.Windows.Media.Matrix.OffsetX, and 
             System.Windows.Media.Matrix.OffsetY values of this System.Windows.Media.Matrix.
        
        ToString(self: Matrix) -> str
        
            Creates a System.String representation of this System.Windows.Media.Matrix structure.
            Returns: A System.String containing the System.Windows.Media.Matrix.M11, System.Windows.Media.Matrix.M12, System.Windows.Media.Matrix.M21, System.Windows.Media.Matrix.M22, System.Windows.Media.Matrix.OffsetX, and 
             System.Windows.Media.Matrix.OffsetY values of this System.Windows.Media.Matrix.
        """
        pass

    def Transform(self, *__args):
        """
        Transform(self: Matrix, vector: Vector) -> Vector
        
            Transforms the specified vector by this System.Windows.Media.Matrix.
        
            vector: The vector to transform.
            Returns: The result of transforming vector by this System.Windows.Media.Matrix.
        Transform(self: Matrix, vectors: Array[Vector])
            Transforms the specified vectors by this System.Windows.Media.Matrix.
        
            vectors: The vectors to transform. The original vectors in the array are replaced by their transformed values.
        Transform(self: Matrix, point: Point) -> Point
        
            Transforms the specified point by the System.Windows.Media.Matrix and returns the result.
        
            point: The point to transform.
            Returns: The result of transforming point by this System.Windows.Media.Matrix.
        Transform(self: Matrix, points: Array[Point])
            Transforms the specified points by this System.Windows.Media.Matrix.
        
            points: The points to transform. The original points in the array are replaced by their transformed values.
        """
        pass

    def Translate(self, offsetX, offsetY):
        """
        Translate(self: Matrix, offsetX: float, offsetY: float)
            Appends a translation of the specified offsets to this System.Windows.Media.Matrix structure.
        
            offsetX: The amount to offset this System.Windows.Media.Matrix along the x-axis.
            offsetY: The amount to offset this System.Windows.Media.Matrix along the y-axis.
        """
        pass

    def TranslatePrepend(self, offsetX, offsetY):
        """
        TranslatePrepend(self: Matrix, offsetX: float, offsetY: float)
            Prepends a translation of the specified offsets to this System.Windows.Media.Matrix structure.
        
            offsetX: The amount to offset this System.Windows.Media.Matrix along the x-axis.
            offsetY: The amount to offset this System.Windows.Media.Matrix along the y-axis.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __mul__(self, *args): #cannot find CLR method
        """ x.__mul__(y) <==> x*y """
        pass

    @staticmethod # known case of __new__
    def __new__(self, m11, m12, m21, m22, offsetX, offsetY):
        """
        __new__(cls: type, m11: float, m12: float, m21: float, m22: float, offsetX: float, offsetY: float)
        __new__[Matrix]() -> Matrix
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __rmul__(self, *args): #cannot find CLR method
        """
        __rmul__(trans1: Matrix, trans2: Matrix) -> Matrix
        
            Multiplies a System.Windows.Media.Matrix structure by another System.Windows.Media.Matrix structure.
        
            trans1: The first System.Windows.Media.Matrix structure to multiply.
            trans2: The second System.Windows.Media.Matrix structure to multiply.
            Returns: The result of multiplying trans1 by trans2.
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Determinant = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the determinant of this System.Windows.Media.Matrix structure.

Get: Determinant(self: Matrix) -> float

"""

    HasInverse = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether this System.Windows.Media.Matrix structure is invertible.

Get: HasInverse(self: Matrix) -> bool

"""

    IsIdentity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether this System.Windows.Media.Matrix structure is an identity matrix.

Get: IsIdentity(self: Matrix) -> bool

"""

    M11 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the value of the first row and first column of this System.Windows.Media.Matrix structure.

Get: M11(self: Matrix) -> float

Set: M11(self: Matrix) = value
"""

    M12 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the value of the first row and second column of this System.Windows.Media.Matrix structure.

Get: M12(self: Matrix) -> float

Set: M12(self: Matrix) = value
"""

    M21 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the value of the second row and first column of this System.Windows.Media.Matrix structure.

Get: M21(self: Matrix) -> float

Set: M21(self: Matrix) = value
"""

    M22 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the value of the second row and second column of this System.Windows.Media.Matrix structure.

Get: M22(self: Matrix) -> float

Set: M22(self: Matrix) = value
"""

    OffsetX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the value of the third row and first column of this System.Windows.Media.Matrix structure.

Get: OffsetX(self: Matrix) -> float

Set: OffsetX(self: Matrix) = value
"""

    OffsetY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the value of the third row and second column of this System.Windows.Media.Matrix structure.

Get: OffsetY(self: Matrix) -> float

Set: OffsetY(self: Matrix) = value
"""


    Identity = None


class MatrixConverter(TypeConverter):
    """
    Converts instances of other types to and from a System.Windows.Media.Matrix.
    
    MatrixConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: MatrixConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether an object can be converted from a specific type to an instance of a System.Windows.Media.Matrix.
        
            context: The context information of a type.
            sourceType: The type of the source that is being evaluated for conversion.
            Returns: true if the type can be converted to a System.Windows.Media.Matrix; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: MatrixConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of a System.Windows.Media.Matrix can be converted to a different type.
        
            context: The context information of a type.
            destinationType: The desired type this System.Windows.Media.Matrix is being evaluated for conversion.
            Returns: true if this System.Windows.Media.Matrix can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: MatrixConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Attempts to convert the specified object to a System.Windows.Media.Matrix.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type being converted.
            value: The object being converted.
            Returns: The System.Windows.Media.Matrix created from converting value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: MatrixConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert a System.Windows.Media.Matrix to a specified type.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type being converted.
            value: The System.Windows.Media.Matrix to convert.
            destinationType: The type to convert this System.Windows.Media.Matrix to.
            Returns: The object created from converting this System.Windows.Media.Matrix.
        """
        pass


class Transform(GeneralTransform, ISealable, IAnimatable, IResource, IFormattable):
    """ Defines functionality that enables transformations in a 2-D plane.�Transformations include rotation (System.Windows.Media.RotateTransform), scale (System.Windows.Media.ScaleTransform), skew (System.Windows.Media.SkewTransform), and translation (System.Windows.Media.TranslateTransform). This class hierarchy differs from the System.Windows.Media.Matrix structure because it is a class and it supports animation and enumeration semantics. """
    def Clone(self):
        """
        Clone(self: Transform) -> Transform
        
            Creates a modifiable copy of this System.Windows.Media.Transform by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: Transform) -> Transform
        
            Creates a modifiable clone of this System.Windows.Media.Transform object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it does 
             copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: Freezable) -> Freezable
        
            When implemented in a derived class, creates a new instance of the System.Windows.Freezable derived class.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> Transform
        
            Creates a new System.Windows.Media.Transform from the specified string representation of a transformation matrix.
        
            source: Six comma-delimited System.Double values that describe the new System.Windows.Media.Transform. See also Remarks.
            Returns: A new transform that is constructed from the specified string.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def TransformBounds(self, rect):
        """
        TransformBounds(self: Transform, rect: Rect) -> Rect
        
            Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.
        
            rect: The bounding box to transform.
            Returns: The smallest axis-aligned bounding box that can contain the transformed rect.
        """
        pass

    def TryTransform(self, inPoint, result):
        """
        TryTransform(self: Transform, inPoint: Point) -> (bool, Point)
        
            Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.
        
            inPoint: The point to transform.
            Returns: true if inPoint was transformed; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Inverse = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the inverse of this transform, if it exists.

Get: Inverse(self: Transform) -> GeneralTransform

"""

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the current transformation as a System.Windows.Media.Matrix object.

Get: Value(self: Transform) -> Matrix

"""


    Identity = None


class MatrixTransform(Transform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Creates an arbitrary affine matrix transformation that is used to manipulate objects or coordinate systems in a 2-D�plane.
    
    MatrixTransform()
    MatrixTransform(m11: float, m12: float, m21: float, m22: float, offsetX: float, offsetY: float)
    MatrixTransform(matrix: Matrix)
    """
    def Clone(self):
        """
        Clone(self: MatrixTransform) -> MatrixTransform
        
            Creates a modifiable copy of this System.Windows.Media.MatrixTransform by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: MatrixTransform) -> MatrixTransform
        
            Creates a modifiable copy of this System.Windows.Media.MatrixTransform object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it 
             does copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: MatrixTransform) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, m11: float, m12: float, m21: float, m22: float, offsetX: float, offsetY: float)
        __new__(cls: type, matrix: Matrix)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Matrix = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Matrix structure that defines this transformation.

Get: Matrix(self: MatrixTransform) -> Matrix

Set: Matrix(self: MatrixTransform) = value
"""

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.Media.MatrixTransform.Matrix that represents this System.Windows.Media.MatrixTransform.

Get: Value(self: MatrixTransform) -> Matrix

"""


    MatrixProperty = None


class MediaClock(Clock):
    """ Maintains the timing state for media through a System.Windows.Media.MediaTimeline. """
    @staticmethod # known case of __new__
    def __new__(self, *args): #cannot find CLR constructor
        """ __new__(cls: type, media: MediaTimeline) """
        pass

    CurrentGlobalTime = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the current global time, as established by the WPF timing system.

"""

    Timeline = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.Media.MediaTimeline that describes the controlling behavior of the clock.

Get: Timeline(self: MediaClock) -> MediaTimeline

"""



class MediaPlayer(Animatable, ISealable, IAnimatable, IResource):
    """
    Provides media playback for drawings.
    
    MediaPlayer()
    """
    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: MediaPlayer, sourceFreezable: Freezable)
            Makes this instance a deep copy of the specified System.Windows.Media.MediaPlayer. When copying dependency properties, this method copies resource references and data bindings (but they might no longer 
             resolve) but not animations or their current values.
        
        
            sourceFreezable: The System.Windows.Media.MediaPlayer to clone.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: MediaPlayer, sourceFreezable: Freezable)
            Makes this instance a modifiable deep copy of the specified System.Windows.Media.MediaPlayer using current property values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
        
            sourceFreezable: The System.Windows.Media.MediaPlayer to clone.
        """
        pass

    def Close(self):
        """
        Close(self: MediaPlayer)
            Closes the underlying media.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: MediaPlayer) -> Freezable
        
            Creates a new System.Windows.Media.MediaPlayer instance.
            Returns: A new System.Windows.Media.MediaPlayer instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: MediaPlayer, sourceFreezable: Freezable)
            Makes this instance a clone of the specified System.Windows.Media.MediaPlayer object.
        
            sourceFreezable: The System.Windows.Media.MediaPlayer object to clone and freeze.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def Open(self, source):
        """
        Open(self: MediaPlayer, source: Uri)
            Opens the given System.Uri for media playback.
        
            source: The media source System.Uri.
        """
        pass

    def Pause(self):
        """
        Pause(self: MediaPlayer)
            Pauses media playback.
        """
        pass

    def Play(self):
        """
        Play(self: MediaPlayer)
            Plays media from the current System.Windows.Media.MediaPlayer.Position.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: MediaPlayer)
            Ensures that the MediaPlayer is being accessed from a valid thread.
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def Stop(self):
        """
        Stop(self: MediaPlayer)
            Stops media playback.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: MediaPlayer)
            Verifies that the MediaPlayer is not frozen and that it is being accessed from a valid threading context.
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    Balance = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the balance between the left and right speaker volumes.

Get: Balance(self: MediaPlayer) -> float

Set: Balance(self: MediaPlayer) = value
"""

    BufferingProgress = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the percentage of buffering completed for streaming content.

Get: BufferingProgress(self: MediaPlayer) -> float

"""

    CanPause = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value indicating whether the media can be paused.

Get: CanPause(self: MediaPlayer) -> bool

"""

    Clock = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.MediaClock associated with the System.Windows.Media.MediaTimeline to be played.

Get: Clock(self: MediaPlayer) -> MediaClock

Set: Clock(self: MediaPlayer) = value
"""

    DownloadProgress = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the percentage of download progress for content located at a remote server.

Get: DownloadProgress(self: MediaPlayer) -> float

"""

    HasAudio = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicating whether the media has audio output.

Get: HasAudio(self: MediaPlayer) -> bool

"""

    HasVideo = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether the media has video output.

Get: HasVideo(self: MediaPlayer) -> bool

"""

    IsBuffering = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether the media is buffering.

Get: IsBuffering(self: MediaPlayer) -> bool

"""

    IsMuted = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether the media is muted.

Get: IsMuted(self: MediaPlayer) -> bool

Set: IsMuted(self: MediaPlayer) = value
"""

    NaturalDuration = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the natural duration of the media.

Get: NaturalDuration(self: MediaPlayer) -> Duration

"""

    NaturalVideoHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the pixel height of the video.

Get: NaturalVideoHeight(self: MediaPlayer) -> int

"""

    NaturalVideoWidth = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the pixel width of the video.

Get: NaturalVideoWidth(self: MediaPlayer) -> int

"""

    Position = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the current position of the media.

Get: Position(self: MediaPlayer) -> TimeSpan

Set: Position(self: MediaPlayer) = value
"""

    ScrubbingEnabled = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that indicates whether scrubbing is enabled.

Get: ScrubbingEnabled(self: MediaPlayer) -> bool

Set: ScrubbingEnabled(self: MediaPlayer) = value
"""

    Source = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the media System.Uri.

Get: Source(self: MediaPlayer) -> Uri

"""

    SpeedRatio = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the ratio of speed that media is played at.

Get: SpeedRatio(self: MediaPlayer) -> float

Set: SpeedRatio(self: MediaPlayer) = value
"""

    Volume = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the media's volume.

Get: Volume(self: MediaPlayer) -> float

Set: Volume(self: MediaPlayer) = value
"""


    BufferingEnded = None
    BufferingStarted = None
    MediaEnded = None
    MediaFailed = None
    MediaOpened = None
    ScriptCommand = None


class MediaScriptCommandEventArgs(EventArgs):
    """ Provides data for the System.Windows.Controls.MediaElement.ScriptCommand and System.Windows.Media.MediaPlayer.ScriptCommand events. """
    ParameterType = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the type of script command that was raised.

Get: ParameterType(self: MediaScriptCommandEventArgs) -> str

"""

    ParameterValue = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the arguments associated with the script command type.

Get: ParameterValue(self: MediaScriptCommandEventArgs) -> str

"""



class MediaTimeline(Timeline, ISealable, IAnimatable, IResource, IUriContext):
    """
    Provides a System.Windows.Media.Animation.Timeline for media content.
    
    MediaTimeline(source: Uri)
    MediaTimeline()
    MediaTimeline(beginTime: Nullable[TimeSpan])
    MediaTimeline(beginTime: Nullable[TimeSpan], duration: Duration)
    MediaTimeline(beginTime: Nullable[TimeSpan], duration: Duration, repeatBehavior: RepeatBehavior)
    """
    def AllocateClock(self, *args): #cannot find CLR method
        """
        AllocateClock(self: MediaTimeline) -> Clock
        
            Creates a System.Windows.Media.MediaClock for this timeline.
            Returns: A new System.Windows.Media.MediaClock for this timeline.
        """
        pass

    def Clone(self):
        """
        Clone(self: MediaTimeline) -> MediaTimeline
        
            Creates a modifiable clone of this System.Windows.Media.MediaTimeline, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: MediaTimeline, sourceFreezable: Freezable)
            Makes this instance a deep copy of the specified System.Windows.Media.MediaTimeline. When copying dependency properties, this method copies resource references and data bindings (but they might no longer 
             resolve) but not animations or their current values.
        
        
            sourceFreezable: The System.Windows.Media.MediaTimeline to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: MediaTimeline) -> MediaTimeline
        
            Creates a modifiable clone of this System.Windows.Media.MediaTimeline object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: MediaTimeline, sourceFreezable: Freezable)
            Makes this instance a modifiable deep copy of the specified System.Windows.Media.MediaTimeline using current property values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
        
            sourceFreezable: The System.Windows.Media.MediaTimeline to clone.
        """
        pass

    def CreateClock(self, hasControllableRoot=None):
        """
        CreateClock(self: MediaTimeline) -> MediaClock
        
            Creates a new System.Windows.Media.MediaClock associated with the System.Windows.Media.MediaTimeline.
            Returns: The new System.Windows.Media.MediaClock.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """
        CreateInstanceCore(self: MediaTimeline) -> Freezable
        
            Creates a new instance of the MediaTimeline.
            Returns: The new instance.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: MediaTimeline, isChecking: bool) -> bool
        
            Makes this instance of MediaTimeline unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true to check if the timeline can be frozen; false to freeze the timeline.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.MediaTimeline can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns 
             true if the specified System.Windows.Media.MediaTimeline is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having made the actual change in frozen status to this 
             object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: MediaTimeline, source: Freezable)
            Makes this instance a clone of the specified System.Windows.Media.MediaTimeline object.
        
            source: The System.Windows.Media.MediaTimeline object to clone and freeze.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: MediaTimeline, source: Freezable)
            Makes this instance a frozen clone of the specified System.Windows.Media.MediaTimeline. Resource references, data bindings, and animations are not copied, but their current values are.
        
            source: The System.Windows.Media.MediaTimeline to copy and freeze.
        """
        pass

    def GetNaturalDuration(self, *args): #cannot find CLR method
        """
        GetNaturalDuration(self: Timeline, clock: Clock) -> Duration
        
            Returns the length of a single iteration of this System.Windows.Media.Animation.Timeline.
        
            clock: The System.Windows.Media.Animation.Clock that was created for this System.Windows.Media.Animation.Timeline.
            Returns: The length of a single iteration of this System.Windows.Media.Animation.Timeline, or System.Windows.Duration.Automatic if the natural duration is unknown.
        """
        pass

    def GetNaturalDurationCore(self, *args): #cannot find CLR method
        """
        GetNaturalDurationCore(self: MediaTimeline, clock: Clock) -> Duration
        
            Retrieves the System.Windows.Duration from a specified clock.
        
            clock: The System.Windows.Media.Animation.Clock whose natural duration is desired.
            Returns: If clock is a System.Windows.Media.MediaClock, the System.Windows.Media.MediaPlayer.NaturalDuration value of the System.Windows.Media.MediaPlayer associated with clock, or System.Windows.Duration.Automatic 
             if the clock is not a System.Windows.Media.MediaClock.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self):
        """
        ToString(self: MediaTimeline) -> str
        
            Returns the string that represents the media source.
            Returns: The string that represents the media source.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type, source: Uri)
        __new__(cls: type)
        __new__(cls: type, beginTime: Nullable[TimeSpan])
        __new__(cls: type, beginTime: Nullable[TimeSpan], duration: Duration)
        __new__(cls: type, beginTime: Nullable[TimeSpan], duration: Duration, repeatBehavior: RepeatBehavior)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Source = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the media source associated with the timeline.

Get: Source(self: MediaTimeline) -> Uri

Set: Source(self: MediaTimeline) = value
"""


    SourceProperty = None


class NumberCultureSource(Enum, IComparable, IFormattable, IConvertible):
    """
    Specifies how the culture for numbers in a text run is determined.
    
    enum NumberCultureSource, values: Override (2), Text (0), User (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Override = None
    Text = None
    User = None
    value__ = None


class NumberSubstitution(object):
    """
    Specifies how numbers in text are displayed in different cultures.
    
    NumberSubstitution()
    NumberSubstitution(source: NumberCultureSource, cultureOverride: CultureInfo, substitution: NumberSubstitutionMethod)
    """
    def Equals(self, obj):
        """
        Equals(self: NumberSubstitution, obj: object) -> bool
        
            Determines whether the specified object is equal to the current System.Windows.Media.NumberSubstitution object.
        
            obj: The System.Object to compare with the current System.Windows.Media.NumberSubstitution object.
            Returns: true if o is equal to the current System.Windows.Media.NumberSubstitution object; otherwise, false. If o is not a System.Windows.Media.NumberSubstitution object, false is returned.
        """
        pass

    @staticmethod
    def GetCultureOverride(target):
        """
        GetCultureOverride(target: DependencyObject) -> CultureInfo
        
            Returns the value of System.Windows.Media.NumberSubstitution.CultureOverride from the provided element.
        
            target: The element to return a System.Windows.Media.NumberSubstitution.CultureOverride value for.
            Returns: A System.Globalization.CultureInfo value that represents the culture that is used as an override.
        """
        pass

    @staticmethod
    def GetCultureSource(target):
        """
        GetCultureSource(target: DependencyObject) -> NumberCultureSource
        
            Returns the value of System.Windows.Media.NumberSubstitution.CultureSource from the provided element.
        
            target: The element to return a System.Windows.Media.NumberSubstitution.CultureSource value for.
            Returns: An enumerated value of System.Windows.Media.NumberCultureSource.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: NumberSubstitution) -> int
        
            Serves as a hash function for System.Windows.Media.NumberSubstitution. It is suitable for use in hashing algorithms and data structures such as a hash table.
            Returns: An System.Int32 value that represents the hash code for the current object.
        """
        pass

    @staticmethod
    def GetSubstitution(target):
        """
        GetSubstitution(target: DependencyObject) -> NumberSubstitutionMethod
        
            Returns the value of System.Windows.Media.NumberSubstitution.Substitution from the provided element.
        
            target: The element to return a System.Windows.Media.NumberSubstitution.Substitution value for.
            Returns: An enumerated value of System.Windows.Media.NumberSubstitutionMethod.
        """
        pass

    @staticmethod
    def SetCultureOverride(target, value):
        """
        SetCultureOverride(target: DependencyObject, value: CultureInfo)
            Sets the value of System.Windows.Media.NumberSubstitution.CultureOverride for a provided element.
        
            target: Element that is specifying a culture override.
            value: A culture override value of type System.Globalization.CultureInfo.
        """
        pass

    @staticmethod
    def SetCultureSource(target, value):
        """
        SetCultureSource(target: DependencyObject, value: NumberCultureSource)
            Sets the value of System.Windows.Media.NumberSubstitution.CultureSource for a provided element.
        
            target: Element that is specifying a culture override.
            value: A culture source value of type System.Windows.Media.NumberCultureSource.
        """
        pass

    @staticmethod
    def SetSubstitution(target, value):
        """
        SetSubstitution(target: DependencyObject, value: NumberSubstitutionMethod)
            Sets the value of System.Windows.Media.NumberSubstitution.Substitution for a provided element.
        
            target: Element that is specifying a substitution method.
            value: A substitution method value of type System.Windows.Media.NumberSubstitutionMethod.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    @staticmethod # known case of __new__
    def __new__(self, source=None, cultureOverride=None, substitution=None):
        """
        __new__(cls: type)
        __new__(cls: type, source: NumberCultureSource, cultureOverride: CultureInfo, substitution: NumberSubstitutionMethod)
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    CultureOverride = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value which identifies which culture to use when the value of the System.Windows.Media.NumberSubstitution.CultureSource property is set to System.Windows.Media.NumberCultureSource.Override.

Get: CultureOverride(self: NumberSubstitution) -> CultureInfo

Set: CultureOverride(self: NumberSubstitution) = value
"""

    CultureSource = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value which identifies the source of the culture value that is used to determine number substitution.

Get: CultureSource(self: NumberSubstitution) -> NumberCultureSource

Set: CultureSource(self: NumberSubstitution) = value
"""

    Substitution = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value which identifies the substitution method that is used to determine number substitution.

Get: Substitution(self: NumberSubstitution) -> NumberSubstitutionMethod

Set: Substitution(self: NumberSubstitution) = value
"""


    CultureOverrideProperty = None
    CultureSourceProperty = None
    SubstitutionProperty = None


class NumberSubstitutionMethod(Enum, IComparable, IFormattable, IConvertible):
    """
    Defines an enumerator class that specifies the type of number substitution to perform on numbers in a text run.
    
    enum NumberSubstitutionMethod, values: AsCulture (0), Context (1), European (2), NativeNational (3), Traditional (4)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    AsCulture = None
    Context = None
    European = None
    NativeNational = None
    Traditional = None
    value__ = None


class PathFigure(Animatable, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a subsection of a geometry, a single connected series of two-dimensional geometric segments.
    
    PathFigure()
    PathFigure(start: Point, segments: IEnumerable[PathSegment], closed: bool)
    """
    def Clone(self):
        """
        Clone(self: PathFigure) -> PathFigure
        
            Creates a modifiable clone of this System.Windows.Media.PathFigure, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings 
             (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PathFigure) -> PathFigure
        
            Creates a modifiable clone of this System.Windows.Media.PathFigure object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PathFigure) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def GetFlattenedPathFigure(self, tolerance=None, type=None):
        """
        GetFlattenedPathFigure(self: PathFigure) -> PathFigure
        
            Gets a System.Windows.Media.PathFigure object that is an polygonal approximation of this System.Windows.Media.PathFigure object.
            Returns: The polygonal approximation of this System.Windows.Media.PathFigure object.
        GetFlattenedPathFigure(self: PathFigure, tolerance: float, type: ToleranceType) -> PathFigure
        
            Gets a System.Windows.Media.PathFigure object, within the specified error of tolerance, that is an polygonal approximation of this System.Windows.Media.PathFigure object.
        
            tolerance: The computational tolerance of error.
            type: Specifies how the error of tolerance is interpreted.
            Returns: The polygonal approximation of this System.Windows.Media.PathFigure object.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: PathFigure) -> bool
        
            Determines whether this System.Windows.Media.PathFigure object may have curved segments.
            Returns: true if this System.Windows.Media.PathFigure object may have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: PathFigure, provider: IFormatProvider) -> str
        
            Creates a string representation of this object using the specified culture-specific formatting.
        
            provider: Culture-specific formatting information; otherwise, null to use the current culture and default formatting settings.
            Returns: A formatted string representation of this System.Windows.Media.PathFigure.
        ToString(self: PathFigure) -> str
        
            Creates a string representation of this object.
            Returns: A string representation of this System.Windows.Media.PathFigure.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, start=None, segments=None, closed=None):
        """
        __new__(cls: type)
        __new__(cls: type, start: Point, segments: IEnumerable[PathSegment], closed: bool)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    IsClosed = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies whether this figures first and last segments are connected.

Get: IsClosed(self: PathFigure) -> bool

Set: IsClosed(self: PathFigure) = value
"""

    IsFilled = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets whether the contained area of this System.Windows.Media.PathFigure is to be used for hit-testing, rendering, and clipping.

Get: IsFilled(self: PathFigure) -> bool

Set: IsFilled(self: PathFigure) = value
"""

    Segments = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the collection of segments that define the shape of this System.Windows.Media.PathFigure object.

Get: Segments(self: PathFigure) -> PathSegmentCollection

Set: Segments(self: PathFigure) = value
"""

    StartPoint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Point where the System.Windows.Media.PathFigure begins.

Get: StartPoint(self: PathFigure) -> Point

Set: StartPoint(self: PathFigure) = value
"""


    IsClosedProperty = None
    IsFilledProperty = None
    SegmentsProperty = None
    StartPointProperty = None


class PathFigureCollection(Animatable, ISealable, IAnimatable, IResource, IFormattable, IList, ICollection, IEnumerable, IList[PathFigure], ICollection[PathFigure], IEnumerable[PathFigure]):
    """
    Represents a collection of System.Windows.Media.PathFigure objects that collectively make up the geometry of a System.Windows.Media.PathGeometry.
    
    PathFigureCollection()
    PathFigureCollection(capacity: int)
    PathFigureCollection(collection: IEnumerable[PathFigure])
    """
    def Add(self, value):
        """
        Add(self: PathFigureCollection, value: PathFigure)
            Adds a System.Windows.Media.PathFigure to the end of the collection.
        
            value: The System.Windows.Media.PathFigure to add to the collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: PathFigureCollection)
            Removes all items from the System.Windows.Media.PathFigureCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: PathFigureCollection) -> PathFigureCollection
        
            Creates a modifiable clone of this System.Windows.Media.PathFigureCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: PathFigureCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PathFigureCollection) -> PathFigureCollection
        
            Creates a modifiable clone of this System.Windows.Media.PathFigureCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: PathFigureCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: PathFigureCollection, value: PathFigure) -> bool
        
            Determines whether the collection contains the specified System.Windows.Media.PathFigure.
        
            value: The System.Windows.Media.PathFigure being queried for.
            Returns: true if value is in the System.Windows.Media.PathFigureCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: PathFigureCollection, array: Array[PathFigure], index: int)
            Copies the entire System.Windows.Media.PathFigureCollection to a one-dimensional array of type System.Windows.Media.PathFigure, starting at the specified index of the target array.
        
            array: The array into which the collection's items are to be copied.
            index: The index of array at which to start copying the contents of the System.Windows.Media.PathFigureCollection.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PathFigureCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: PathFigureCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: PathFigureCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: PathFigureCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: PathFigureCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An System.Windows.Media.PathFigureCollection.Enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: PathFigureCollection, value: PathFigure) -> int
        
            Searches for the specified System.Windows.Media.PathFigure and returns the zero-based index of the first occurrence within the entire collection.
        
            value: The System.Windows.Media.PathFigure to locate in the collection.
            Returns: The index of value if found in the System.Windows.Media.PathFigureCollection; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: PathFigureCollection, index: int, value: PathFigure)
            Inserts a System.Windows.Media.PathFigure into a specific location within the collection.
        
            index: The index position at which the System.Windows.Media.PathFigure is inserted.
            value: The System.Windows.Media.PathFigure object to insert in the collection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> PathFigureCollection
        
            Returns an instance of System.Windows.Media.PathFigureCollection created from a specified string.
        
            source: The string that is converted to a System.Windows.Media.PathFigureCollection.
            Returns: An instance of System.Windows.Media.PathFigureCollection created from source.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: PathFigureCollection, value: PathFigure) -> bool
        
            Removes a System.Windows.Media.PathFigure object from the collection.
        
            value: Identifies the System.Windows.Media.PathFigure to remove from the collection.
            Returns: true if value was removed from the System.Windows.Media.PathFigureCollection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: PathFigureCollection, index: int)
            Removes the System.Windows.Media.PathFigure at the specified index position from the collection.
        
            index: Index position of the System.Windows.Media.PathFigure to be removed.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: PathFigureCollection, provider: IFormatProvider) -> str
        
            Converts the current value of a System.Windows.Media.PathFigureCollection to a System.String using the specified culture-specific formatting information.
        
            provider: Culture-specific formatting information.
            Returns: A string representation of the System.Windows.Media.PathFigureCollection.
        ToString(self: PathFigureCollection) -> str
        
            Converts the current value of a System.Windows.Media.PathFigureCollection to a System.String.
            Returns: A string representation of the System.Windows.Media.PathFigureCollection.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[PathFigure], item: PathFigure) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[PathFigure])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of path figures contained in the System.Windows.Media.PathFigureCollection.

Get: Count(self: PathFigureCollection) -> int

"""


    Enumerator = None


class PathFigureCollectionConverter(TypeConverter):
    """
    Converts instances of other types to and from a System.Windows.Media.PathFigureCollection.
    
    PathFigureCollectionConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: PathFigureCollectionConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Indicates whether an object can be converted from a given type to an instance of a System.Windows.Media.PathFigureCollection.
        
            context: Describes the context information of a type.
            sourceType: The source System.Type that is being queried for conversion support.
            Returns: true if object of the specified type can be converted to a System.Windows.Media.PathFigureCollection; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: PathFigureCollectionConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether instances of System.Windows.Media.PathFigureCollection can be converted to the specified type.
        
            context: Describes the context information of a type.
            destinationType: The desired type this System.Windows.Media.PathFigureCollection is being evaluated to be converted to.
            Returns: true if instances of System.Windows.Media.PathFigureCollection can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: PathFigureCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Converts the specified object to a System.Windows.Media.PathFigureCollection.
        
            context: Describes the context information of a type.
            culture: Describes the System.Globalization.CultureInfo of the type being converted.
            value: The object being converted.
            Returns: The System.Windows.Media.PathFigureCollection created from converting value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: PathFigureCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Converts the specified System.Windows.Media.PathFigureCollection to the specified type.
        
            context: Describes the context information of a type.
            culture: Describes the System.Globalization.CultureInfo of the type being converted.
            value: The System.Windows.Media.PathFigureCollection to convert.
            destinationType: The type to convert the System.Windows.Media.PathFigureCollection to.
            Returns: An System.Object that represents the converted value.
        """
        pass


class PathGeometry(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a complex shape that may be composed of arcs, curves, ellipses, lines, and rectangles.
    
    PathGeometry()
    PathGeometry(figures: IEnumerable[PathFigure])
    PathGeometry(figures: IEnumerable[PathFigure], fillRule: FillRule, transform: Transform)
    """
    def AddGeometry(self, geometry):
        """
        AddGeometry(self: PathGeometry, geometry: Geometry)
            Converts the specified System.Windows.Media.Geometry into a collection of System.Windows.Media.PathFigure objects and adds it to the path.   Note: If the specified System.Windows.Media.Geometry is 
             animated, the conversion from System.Windows.Media.Geometry to System.Windows.Media.PathFigure may result in some loss of information.
        
        
            geometry: The geometry to add to the path.
        """
        pass

    def Clear(self):
        """
        Clear(self: PathGeometry)
            Removes all System.Windows.Media.PathFigure objects from this System.Windows.Media.PathGeometry.
        """
        pass

    def Clone(self):
        """
        Clone(self: PathGeometry) -> PathGeometry
        
            Creates a modifiable clone of this System.Windows.Media.PathGeometry, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PathGeometry) -> PathGeometry
        
            Creates a modifiable clone of this System.Windows.Media.PathGeometry object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    @staticmethod
    def CreateFromGeometry(geometry):
        """
        CreateFromGeometry(geometry: Geometry) -> PathGeometry
        
            Creates a System.Windows.Media.PathGeometry version of the specified System.Windows.Media.Geometry.
        
            geometry: The geometry from which to create a System.Windows.Media.PathGeometry.
            Returns: A System.Windows.Media.PathGeometry created from the current values of the specified System.Windows.Media.Geometry.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PathGeometry) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def GetPointAtFractionLength(self, progress, point, tangent):
        """
        GetPointAtFractionLength(self: PathGeometry, progress: float) -> (Point, Point)
        
            Gets the System.Windows.Point and a tangent vector on this System.Windows.Media.PathGeometry at the specified fraction of its length.
        
            progress: The fraction of the length of this System.Windows.Media.PathGeometry.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: PathGeometry) -> bool
        
            Determines whether this System.Windows.Media.PathGeometry object is empty.
            Returns: true if this System.Windows.Media.PathGeometry is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: PathGeometry) -> bool
        
            Determines whether this System.Windows.Media.PathGeometry object may have curved segments.
            Returns: true if this System.Windows.Media.PathGeometry object may have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """ OnChanged(self: PathGeometry) """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, figures=None, fillRule=None, transform=None):
        """
        __new__(cls: type)
        __new__(cls: type, figures: IEnumerable[PathFigure])
        __new__(cls: type, figures: IEnumerable[PathFigure], fillRule: FillRule, transform: Transform)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Rect that specifies the bounding box of this System.Windows.Media.PathGeometry object.   Note: This method does not take any pens into account.

Get: Bounds(self: PathGeometry) -> Rect

"""

    Figures = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the collection of System.Windows.Media.PathFigure objects that describe the path's contents.

Get: Figures(self: PathGeometry) -> PathFigureCollection

Set: Figures(self: PathGeometry) = value
"""

    FillRule = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that determines how the intersecting areas contained in this System.Windows.Media.PathGeometry are combined.

Get: FillRule(self: PathGeometry) -> FillRule

Set: FillRule(self: PathGeometry) = value
"""


    FiguresProperty = None
    FillRuleProperty = None


class PathSegmentCollection(Animatable, ISealable, IAnimatable, IResource, IList, ICollection, IEnumerable, IList[PathSegment], ICollection[PathSegment], IEnumerable[PathSegment]):
    """
    Represents a collection of System.Windows.Media.PathSegment objects that can be individually accessed by index.
    
    PathSegmentCollection()
    PathSegmentCollection(capacity: int)
    PathSegmentCollection(collection: IEnumerable[PathSegment])
    """
    def Add(self, value):
        """
        Add(self: PathSegmentCollection, value: PathSegment)
            Adds a System.Windows.Media.PathSegment to the end of the collection.
        
            value: The segment to add to the collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: PathSegmentCollection)
            Clears the collection of all segments and resets System.Windows.Media.PathSegmentCollection.Count to zero.
        """
        pass

    def Clone(self):
        """
        Clone(self: PathSegmentCollection) -> PathSegmentCollection
        
            Creates a modifiable clone of this System.Windows.Media.PathSegmentCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and 
             data bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: PathSegmentCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PathSegmentCollection) -> PathSegmentCollection
        
            Creates a modifiable clone of this System.Windows.Media.PathSegmentCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: PathSegmentCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: PathSegmentCollection, value: PathSegment) -> bool
        
            Returns a System.Boolean that indicates whether the specified System.Windows.Media.PathSegment is contained within the collection.
        
            value: The System.Windows.Media.PathSegment to search for.
            Returns: true if the specified System.Windows.Media.PathSegment is contained within the collection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: PathSegmentCollection, array: Array[PathSegment], index: int)
            Copies the entire System.Windows.Media.PathSegmentCollection to a one-dimensional System.Windows.Media.PathSegment array, starting at the specified index of the target array.
        
            array: The array into which the collection's items are to be copied.
            index: The index of array at which to start copying the contents of the System.Windows.Media.PathSegmentCollection.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PathSegmentCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: PathSegmentCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: PathSegmentCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: PathSegmentCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: PathSegmentCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An System.Windows.Media.PathSegmentCollection.Enumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: PathSegmentCollection, value: PathSegment) -> int
        
            Returns the index of the first occurrence of the specified System.Windows.Media.PathSegment.
        
            value: The item to search for.
            Returns: The index of the specified System.Windows.Media.PathSegment.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: PathSegmentCollection, index: int, value: PathSegment)
            Inserts a System.Windows.Media.PathSegment into this System.Windows.Media.PathSegmentCollection at the specified index.
        
            index: The index at which to insert value, the specified System.Windows.Media.PathSegment.
            value: The item to insert.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: PathSegmentCollection, value: PathSegment) -> bool
        
            Removes the first occurrence of the specified System.Windows.Media.PathSegment from this System.Windows.Media.PathSegmentCollection.
        
            value: The item to remove from this collection.
            Returns: true if the specified System.Windows.Media.PathSegment is removed from the collection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: PathSegmentCollection, index: int)
            Removes the System.Windows.Media.PathSegment at the specified index from this System.Windows.Media.PathSegmentCollection.
        
            index: The index of the item to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[PathSegment], item: PathSegment) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[PathSegment])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of path segments contained in the System.Windows.Media.PathSegmentCollection.

Get: Count(self: PathSegmentCollection) -> int

"""


    Enumerator = None


class Pen(Animatable, ISealable, IAnimatable, IResource):
    """
    Describes how a shape is outlined.
    
    Pen()
    Pen(brush: Brush, thickness: float)
    """
    def Clone(self):
        """
        Clone(self: Pen) -> Pen
        
            Creates a modifiable clone of this System.Windows.Media.Pen, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but 
             they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: Pen) -> Pen
        
            Creates a modifiable clone of this System.Windows.Media.Pen object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current 
             values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: Pen) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, brush=None, thickness=None):
        """
        __new__(cls: type)
        __new__(cls: type, brush: Brush, thickness: float)
        """
        pass

    Brush = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the fill the outline produced by this System.Windows.Media.Pen.

Get: Brush(self: Pen) -> Brush

Set: Brush(self: Pen) = value
"""

    DashCap = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies how the ends of each dash are drawn.

Get: DashCap(self: Pen) -> PenLineCap

Set: DashCap(self: Pen) = value
"""

    DashStyle = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that describes the pattern of dashes generated by this System.Windows.Media.Pen.

Get: DashStyle(self: Pen) -> DashStyle

Set: DashStyle(self: Pen) = value
"""

    EndLineCap = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the type of shape to use at the end of a stroke.

Get: EndLineCap(self: Pen) -> PenLineCap

Set: EndLineCap(self: Pen) = value
"""

    LineJoin = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the type of joint used at the vertices of a shape's outline.

Get: LineJoin(self: Pen) -> PenLineJoin

Set: LineJoin(self: Pen) = value
"""

    MiterLimit = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the limit on the ratio of the miter length to half this pen's System.Windows.Media.Pen.Thickness.

Get: MiterLimit(self: Pen) -> float

Set: MiterLimit(self: Pen) = value
"""

    StartLineCap = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the type of shape to use at the beginning of a stroke.

Get: StartLineCap(self: Pen) -> PenLineCap

Set: StartLineCap(self: Pen) = value
"""

    Thickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the thickness of the stroke produced by this System.Windows.Media.Pen.

Get: Thickness(self: Pen) -> float

Set: Thickness(self: Pen) = value
"""


    BrushProperty = None
    DashCapProperty = None
    DashStyleProperty = None
    EndLineCapProperty = None
    LineJoinProperty = None
    MiterLimitProperty = None
    StartLineCapProperty = None
    ThicknessProperty = None


class PenLineCap(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes the shape at the end of a line or segment.
    
    enum PenLineCap, values: Flat (0), Round (2), Square (1), Triangle (3)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Flat = None
    Round = None
    Square = None
    Triangle = None
    value__ = None


class PenLineJoin(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes the shape that joins two lines or segments.
    
    enum PenLineJoin, values: Bevel (1), Miter (0), Round (2)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bevel = None
    Miter = None
    Round = None
    value__ = None


class PixelFormat(object, IEquatable[PixelFormat]):
    """ Defines a pixel format for images and pixel-based surfaces. """
    def Equals(self, *__args):
        """
        Equals(self: PixelFormat, pixelFormat: PixelFormat) -> bool
        
            Determines whether the pixel format equals the given System.Windows.Media.PixelFormat.
        
            pixelFormat: The pixel format to compare.
            Returns: true if the pixel formats are equal; otherwise, false.
        Equals(left: PixelFormat, right: PixelFormat) -> bool
        
            Determines whether the specified System.Windows.Media.PixelFormat instances are considered equal.
        
            left: The first System.Windows.Media.PixelFormat objects to compare for equality.
            right: The second System.Windows.Media.PixelFormat object to compare for equality.
            Returns: true if the two parameters are equal; otherwise, false.
        Equals(self: PixelFormat, obj: object) -> bool
        
            Determines whether the specified object is equal to the current object.
        
            obj: The Object to compare with the current Object.
            Returns: true if the System.Windows.Media.PixelFormat is equal to obj; otherwise, false.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: PixelFormat) -> int
        
            Creates a hash code from this pixel format's System.Windows.Media.PixelFormat.Masks value.
            Returns: The pixel format's hash code.
        """
        pass

    def ToString(self):
        """
        ToString(self: PixelFormat) -> str
        
            Creates a string representation of this System.Windows.Media.PixelFormat.
            Returns: A System.String containing a representation of the System.Windows.Media.PixelFormat.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    BitsPerPixel = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of bits-per-pixel (bpp) for this System.Windows.Media.PixelFormat.

Get: BitsPerPixel(self: PixelFormat) -> int

"""

    Masks = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection of bit masks associated with the System.Windows.Media.PixelFormat.

Get: Masks(self: PixelFormat) -> IList[PixelFormatChannelMask]

"""



class PixelFormatChannelMask(object):
    """ Defines the bit mask and shift for a specific pixel formats """
    @staticmethod
    def Equals(*__args):
        """
        Equals(self: PixelFormatChannelMask, obj: object) -> bool
        
            Determines whether the specified object is equal to the current object.
        
            obj: The System.Object to compare with the current mask.
            Returns: true if the System.Windows.Media.PixelFormatChannelMask is equal to obj; otherwise, false.
        Equals(left: PixelFormatChannelMask, right: PixelFormatChannelMask) -> bool
        
            Determines if two pixel format channel masks are equal.
        
            left: The first mask to compare.
            right: The second mask to compare.
            Returns: true if the masks are equal; otherwise, false.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: PixelFormatChannelMask) -> int
        
            Retrieves a hash code for the mask.
            Returns: A mask's hash code.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    Mask = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the bitmask for a color channel. The value will never be greater then 0xffffffff

Get: Mask(self: PixelFormatChannelMask) -> IList[Byte]

"""



class PixelFormatConverter(TypeConverter):
    """
    Converts a System.Windows.Media.PixelFormat to and from other data types.
    
    PixelFormatConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: PixelFormatConverter, td: ITypeDescriptorContext, t: Type) -> bool
        
            Determines whether the converter can convert an object of the given type to an instance of System.Windows.Media.PixelFormat.
        
            td: Type context information used to evaluate conversion.
            t: The type of the source that is being evaluated for conversion.
            Returns: true if the converter can convert the provided type to an instance of System.Windows.Media.PixelFormat; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: PixelFormatConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of System.Windows.Media.PixelFormat can be converted to a different type.
        
            context: Type context information used to evaluate conversion.
            destinationType: The desired type to evaluate the conversion to.
            Returns: true if the converter can convert this instance of System.Windows.Media.PixelFormat; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: PixelFormatConverter, td: ITypeDescriptorContext, ci: CultureInfo, o: object) -> object
        
            Attempts to convert a specified object to an instance of System.Windows.Media.PixelFormat.
        
            td: Type context information used for conversion.
            ci: Cultural information that is respected during conversion.
            o: The object being converted.
            Returns: An System.Object that represents the converted value.
        """
        pass

    def ConvertFromString(self, *__args):
        """
        ConvertFromString(self: PixelFormatConverter, value: str) -> object
        
            Attempts to convert a string to a System.Windows.Media.PixelFormat.
        
            value: The string to convert to a System.Windows.Media.PixelFormat.
            Returns: A new instance of System.Windows.Media.PixelFormat.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: PixelFormatConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert an instance of System.Windows.Media.PixelFormat to a specified type.
        
            context: Context information used for conversion.
            culture: Cultural information that is respected during conversion.
            value: System.Windows.Media.PixelFormat to convert.
            destinationType: Type being evaluated for conversion.
            Returns: A new instance of the destinationType.
        """
        pass


class PixelFormats(object):
    """ Represents the collection of supported pixel formats. """
    Bgr101010 = None
    Bgr24 = None
    Bgr32 = None
    Bgr555 = None
    Bgr565 = None
    Bgra32 = None
    BlackWhite = None
    Cmyk32 = None
    Default = None
    Gray16 = None
    Gray2 = None
    Gray32Float = None
    Gray4 = None
    Gray8 = None
    Indexed1 = None
    Indexed2 = None
    Indexed4 = None
    Indexed8 = None
    Pbgra32 = None
    Prgba128Float = None
    Prgba64 = None
    Rgb128Float = None
    Rgb24 = None
    Rgb48 = None
    Rgba128Float = None
    Rgba64 = None
    __all__ = []


class PointCollection(Freezable, ISealable, IFormattable, IList, ICollection, IEnumerable, IList[Point], ICollection[Point], IEnumerable[Point]):
    """
    Represents a collection of System.Windows.Point values that can be individually accessed by index.
    
    PointCollection()
    PointCollection(capacity: int)
    PointCollection(collection: IEnumerable[Point])
    """
    def Add(self, value):
        """
        Add(self: PointCollection, value: Point)
            Adds a System.Windows.Point to the end of the System.Windows.Media.PointCollection.
        
            value: The System.Windows.Point to add to the end of the System.Windows.Media.PointCollection.
        """
        pass

    def Clear(self):
        """
        Clear(self: PointCollection)
            Removes all items from the System.Windows.Media.PointCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: PointCollection) -> PointCollection
        
            Creates a modifiable clone of this System.Windows.Media.PointCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: PointCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PointCollection) -> PointCollection
        
            Creates a modifiable clone of this System.Windows.Media.PointCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: PointCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: PointCollection, value: Point) -> bool
        
            Determines whether the System.Windows.Media.PointCollection contains the specified System.Windows.Point.
        
            value: The System.Windows.Point to locate in the System.Windows.Media.PointCollection.
            Returns: true if the System.Windows.Point is found in the System.Windows.Media.PointCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: PointCollection, array: Array[Point], index: int)
            Copies the items of the System.Windows.Media.PointCollection to an array, starting at the specified array index.
        
            array: The one-dimensional array that is the destination of the items copied from the System.Windows.Media.PointCollection. The array must have zero-based indexing.
            index: The zero-based index in array at which copying begins.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PointCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Freezable, isChecking: bool) -> bool
        
            Makes the System.Windows.Freezable object unmodifiable or tests whether it can be made unmodifiable.
        
            isChecking: true to return an indication of whether the object can be frozen (without actually freezing it); false to actually freeze the object.
            Returns: If isChecking is true, this method returns true if the System.Windows.Freezable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the 
             if the specified System.Windows.Freezable is now unmodifiable, or false if it cannot be made unmodifiable.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: PointCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: PointCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: PointCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the System.Windows.Media.PointCollection.
            Returns: An System.Windows.Media.PointCollection.Enumerator that can be used to iterate through the System.Windows.Media.PointCollection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: PointCollection, value: Point) -> int
        
            Determines the index of the specified item in the System.Windows.Media.PointCollection.
        
            value: The System.Windows.Point to locate in the System.Windows.Media.PointCollection.
            Returns: The index of value if found in the System.Windows.Media.PointCollection; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: PointCollection, index: int, value: Point)
            Inserts a System.Windows.Point into the System.Windows.Media.PointCollection at the specified index.
        
            index: The zero-based index at which value should be inserted.
            value: The System.Windows.Point to insert into the System.Windows.Media.PointCollection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> PointCollection
        
            Converts a System.String representation of a collection of points into an equivalent System.Windows.Media.PointCollection.
        
            source: The System.String representation of the collection of points.
            Returns: The equivalent System.Windows.Media.PointCollection.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: PointCollection, value: Point) -> bool
        
            Removes the first occurrence of the specified System.Windows.Point from the System.Windows.Media.PointCollection.
        
            value: The System.Windows.Point to remove from the System.Windows.Media.PointCollection.
            Returns: true if value was removed from the System.Windows.Media.PointCollection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: PointCollection, index: int)
            Removes the System.Windows.Point at the specified index.
        
            index: The zero-based index of the System.Windows.Point to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: PointCollection, provider: IFormatProvider) -> str
        
            Creates a System.String representation of this System.Windows.Media.PointCollection.
        
            provider: Culture-specific formatting information.
            Returns: Returns a System.String containing the System.Windows.Point.X and System.Windows.Point.Y values of the System.Windows.Point structures in this System.Windows.Media.PointCollection.
        ToString(self: PointCollection) -> str
        
            Creates a System.String representation of this System.Windows.Media.PointCollection.
            Returns: Returns a System.String containing the System.Windows.Point.X and System.Windows.Point.Y values of the System.Windows.Point structures in this System.Windows.Media.PointCollection.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[Point], item: Point) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[Point])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of items contained in the System.Windows.Media.PointCollection.

Get: Count(self: PointCollection) -> int

"""


    Enumerator = None


class PointCollectionConverter(TypeConverter):
    """
    Converts instances of other types to and from a System.Windows.Media.PointCollection.
    
    PointCollectionConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: PointCollectionConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether an object can be converted from a specified type to an instance of a System.Windows.Media.PointCollection.
        
            context: The context information of a type.
            sourceType: The type of the source that is being evaluated for conversion.
            Returns: true if the type can be converted to a System.Windows.Media.PointCollection; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: PointCollectionConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of a System.Windows.Media.PointCollection can be converted to a different type.
        
            context: The context information of a type.
            destinationType: The needed type for which you are evaluating this System.Windows.Media.PointCollection for conversion.
            Returns: true if this System.Windows.Media.PointCollection can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: PointCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Attempts to convert the specified object to a System.Windows.Media.PointCollection.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type you want to convert.
            value: The object being converted.
            Returns: The System.Windows.Media.PointCollection that is created from converting value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: PointCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert a System.Windows.Media.PointCollection to a specified type.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type you want to convert.
            value: The System.Windows.Media.PointCollection to convert.
            destinationType: The type to convert this System.Windows.Media.PointCollection to.
            Returns: The object that is created from converting this System.Windows.Media.PointCollection.
        """
        pass


class PointHitTestParameters(HitTestParameters):
    """
    Specifies a System.Windows.Point as the parameter to be used for hit testing of a visual object.
    
    PointHitTestParameters(point: Point)
    """
    @staticmethod # known case of __new__
    def __new__(self, point):
        """ __new__(cls: type, point: Point) """
        pass

    HitPoint = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.Point against which to hit test.

Get: HitPoint(self: PointHitTestParameters) -> Point

"""



class PolyBezierSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Represents one or more cubic Bezier curves.
    
    PolyBezierSegment()
    PolyBezierSegment(points: IEnumerable[Point], isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: PolyBezierSegment) -> PolyBezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.PolyBezierSegment, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PolyBezierSegment) -> PolyBezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.PolyBezierSegment object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PolyBezierSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, points=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, points: IEnumerable[Point], isStroked: bool)
        """
        pass

    Points = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.PointCollection that define this System.Windows.Media.PolyBezierSegment object.

Get: Points(self: PolyBezierSegment) -> PointCollection

Set: Points(self: PolyBezierSegment) = value
"""


    PointsProperty = None


class PolyLineSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Represents a set of line segments defined by a System.Windows.Media.PointCollection with each System.Windows.Point specifying the end point of a line segment.
    
    PolyLineSegment()
    PolyLineSegment(points: IEnumerable[Point], isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: PolyLineSegment) -> PolyLineSegment
        
            Creates a modifiable clone of this System.Windows.Media.PolyLineSegment, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PolyLineSegment) -> PolyLineSegment
        
            Creates a modifiable clone of this System.Windows.Media.PolyLineSegment object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PolyLineSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, points=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, points: IEnumerable[Point], isStroked: bool)
        """
        pass

    Points = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the collection of System.Windows.Point structures that defines this System.Windows.Media.PolyLineSegment object.

Get: Points(self: PolyLineSegment) -> PointCollection

Set: Points(self: PolyLineSegment) = value
"""


    PointsProperty = None


class PolyQuadraticBezierSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Represents a set of quadratic Bezier segments.
    
    PolyQuadraticBezierSegment()
    PolyQuadraticBezierSegment(points: IEnumerable[Point], isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: PolyQuadraticBezierSegment) -> PolyQuadraticBezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.PolyQuadraticBezierSegment, making deep copies of this object's values. When copying dependency properties, this method copies resource references 
             and data bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: PolyQuadraticBezierSegment) -> PolyQuadraticBezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.PolyQuadraticBezierSegment object, making deep copies of this object's current values. Resource references, data bindings, and animations are not 
             copied, but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: PolyQuadraticBezierSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, points=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, points: IEnumerable[Point], isStroked: bool)
        """
        pass

    Points = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.PointCollection that defines this System.Windows.Media.PolyQuadraticBezierSegment object.

Get: Points(self: PolyQuadraticBezierSegment) -> PointCollection

Set: Points(self: PolyQuadraticBezierSegment) = value
"""


    PointsProperty = None


class QuadraticBezierSegment(PathSegment, ISealable, IAnimatable, IResource):
    """
    Creates a quadratic Bezier curve between two points in a System.Windows.Media.PathFigure.
    
    QuadraticBezierSegment()
    QuadraticBezierSegment(point1: Point, point2: Point, isStroked: bool)
    """
    def Clone(self):
        """
        Clone(self: QuadraticBezierSegment) -> QuadraticBezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.QuadraticBezierSegment, making deep copies of this object's values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: QuadraticBezierSegment) -> QuadraticBezierSegment
        
            Creates a modifiable clone of this System.Windows.Media.QuadraticBezierSegment object, making deep copies of this object's current values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: QuadraticBezierSegment) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, point1=None, point2=None, isStroked=None):
        """
        __new__(cls: type)
        __new__(cls: type, point1: Point, point2: Point, isStroked: bool)
        """
        pass

    Point1 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the control System.Windows.Point of the curve.

Get: Point1(self: QuadraticBezierSegment) -> Point

Set: Point1(self: QuadraticBezierSegment) = value
"""

    Point2 = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the end System.Windows.Point of this System.Windows.Media.QuadraticBezierSegment.

Get: Point2(self: QuadraticBezierSegment) -> Point

Set: Point2(self: QuadraticBezierSegment) = value
"""


    Point1Property = None
    Point2Property = None


class RadialGradientBrush(GradientBrush, ISealable, IAnimatable, IResource, IFormattable):
    """
    Paints an area with a radial gradient. A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient.
    
    RadialGradientBrush()
    RadialGradientBrush(startColor: Color, endColor: Color)
    RadialGradientBrush(gradientStopCollection: GradientStopCollection)
    """
    def Clone(self):
        """
        Clone(self: RadialGradientBrush) -> RadialGradientBrush
        
            Creates a modifiable clone of this System.Windows.Media.RadialGradientBrush, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: RadialGradientBrush) -> RadialGradientBrush
        
            Creates a modifiable clone of this System.Windows.Media.RadialGradientBrush object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: RadialGradientBrush) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, startColor: Color, endColor: Color)
        __new__(cls: type, gradientStopCollection: GradientStopCollection)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Center = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the center of the outermost circle of the radial gradient.

Get: Center(self: RadialGradientBrush) -> Point

Set: Center(self: RadialGradientBrush) = value
"""

    GradientOrigin = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the location of the two-dimensional focal point that defines the beginning of the gradient.

Get: GradientOrigin(self: RadialGradientBrush) -> Point

Set: GradientOrigin(self: RadialGradientBrush) = value
"""

    RadiusX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the horizontal radius of the outermost circle of the radial gradient.

Get: RadiusX(self: RadialGradientBrush) -> float

Set: RadiusX(self: RadialGradientBrush) = value
"""

    RadiusY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the vertical radius of the outermost circle of a radial gradient.

Get: RadiusY(self: RadialGradientBrush) -> float

Set: RadiusY(self: RadialGradientBrush) = value
"""


    CenterProperty = None
    GradientOriginProperty = None
    RadiusXProperty = None
    RadiusYProperty = None


class RectangleGeometry(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Describes a two-dimensional rectangle.
    
    RectangleGeometry()
    RectangleGeometry(rect: Rect)
    RectangleGeometry(rect: Rect, radiusX: float, radiusY: float)
    RectangleGeometry(rect: Rect, radiusX: float, radiusY: float, transform: Transform)
    """
    def Clone(self):
        """
        Clone(self: RectangleGeometry) -> RectangleGeometry
        
            Creates a modifiable clone of this System.Windows.Media.RectangleGeometry, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: RectangleGeometry) -> RectangleGeometry
        
            Creates a modifiable clone of this System.Windows.Media.RectangleGeometry object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: RectangleGeometry) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetArea(self, tolerance=None, type=None):
        """
        GetArea(self: RectangleGeometry, tolerance: float, type: ToleranceType) -> float
        
            Gets the area of the filled region of this System.Windows.Media.RectangleGeometry object.
        
            tolerance: The computational tolerance of error.
            type: Specifies how the error tolerance will be interpreted.
            Returns: The area of the filled region of this System.Windows.Media.RectangleGeometry object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: RectangleGeometry) -> bool
        
            Determines whether this System.Windows.Media.RectangleGeometry object is empty.
            Returns: true if this System.Windows.Media.RectangleGeometry is empty; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: RectangleGeometry) -> bool
        
            Determines whether this System.Windows.Media.RectangleGeometry object may have curved segments.
            Returns: true if this System.Windows.Media.RectangleGeometry object may have curved segments; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, rect=None, radiusX=None, radiusY=None, transform=None):
        """
        __new__(cls: type)
        __new__(cls: type, rect: Rect)
        __new__(cls: type, rect: Rect, radiusX: float, radiusY: float)
        __new__(cls: type, rect: Rect, radiusX: float, radiusY: float, transform: Transform)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Rect that specifies the bounding box of a System.Windows.Media.RectangleGeometry. This method does not take any pens into account.

Get: Bounds(self: RectangleGeometry) -> Rect

"""

    RadiusX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-radius of the ellipse use to round the corners of the rectangle.

Get: RadiusX(self: RectangleGeometry) -> float

Set: RadiusX(self: RectangleGeometry) = value
"""

    RadiusY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-radius of the ellipse use to round the corners of the rectangle.

Get: RadiusY(self: RectangleGeometry) -> float

Set: RadiusY(self: RectangleGeometry) = value
"""

    Rect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the dimensions of the rectangle.

Get: Rect(self: RectangleGeometry) -> Rect

Set: Rect(self: RectangleGeometry) = value
"""


    RadiusXProperty = None
    RadiusYProperty = None
    RectProperty = None


class RenderCapability(object):
    """ Enables WPF applications to query for the current rendering tier for their associated System.Windows.Threading.Dispatcher object and to register for notification of changes. """
    @staticmethod
    def IsPixelShaderVersionSupported(majorVersionRequested, minorVersionRequested):
        """
        IsPixelShaderVersionSupported(majorVersionRequested: Int16, minorVersionRequested: Int16) -> bool
        
            Gets a value that indicates whether the specified pixel shader version is supported.
        
            majorVersionRequested: The major version of the pixel shader.
            minorVersionRequested: The minor version of the pixel shader.
            Returns: true if the pixel shader version is supported by the current version of WPF; otherwise, false.
        """
        pass

    @staticmethod
    def IsPixelShaderVersionSupportedInSoftware(majorVersionRequested, minorVersionRequested):
        """
        IsPixelShaderVersionSupportedInSoftware(majorVersionRequested: Int16, minorVersionRequested: Int16) -> bool
        
            Gets a value that indicates whether the specified pixel shader version can be rendered in software on the current system.
        
            majorVersionRequested: The major version of the pixel shader.
            minorVersionRequested: The minor version of the pixel shader.
            Returns: true if the pixel shader can be rendered in software on the current system; otherwise, false.
        """
        pass

    @staticmethod
    def MaxPixelShaderInstructionSlots(majorVersionRequested, minorVersionRequested):
        """
        MaxPixelShaderInstructionSlots(majorVersionRequested: Int16, minorVersionRequested: Int16) -> int
        
            Gets the maximum number of instruction slots supported by the specified pixel shader version.
        
            majorVersionRequested: The major version of the pixel shader.
            minorVersionRequested: The minor version of the pixel shader.
            Returns: 96 for Pixel Shader 2.0, 512 or greater for Pixel Shader 3.0, or 0 for any other version of Pixel Shader.
        """
        pass

    IsShaderEffectSoftwareRenderingSupported = True
    MaxHardwareTextureSize = None
    Tier = 131072
    TierChanged = None
    __all__ = [
        'IsPixelShaderVersionSupported',
        'IsPixelShaderVersionSupportedInSoftware',
        'MaxPixelShaderInstructionSlots',
        'TierChanged',
    ]


class RenderingEventArgs(EventArgs):
    """ Required arguments for the System.Windows.Media.CompositionTarget.Rendering event. """
    RenderingTime = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the estimated target time at which the next frame of an animation will be rendered.

Get: RenderingTime(self: RenderingEventArgs) -> TimeSpan

"""



class RenderOptions(object):
    """ Provides options for controlling the rendering behavior of objects. """
    @staticmethod
    def GetBitmapScalingMode(target):
        """
        GetBitmapScalingMode(target: DependencyObject) -> BitmapScalingMode
        
            Returns the value of the System.Windows.Media.RenderOptions.BitmapScalingMode�attached property for a specified dependency object.
        
            target: The dependency object from which to retrieve the value of the System.Windows.Media.RenderOptions.BitmapScalingMode attached property.
            Returns: The current value of the System.Windows.Media.RenderOptions.BitmapScalingMode attached property on the specified dependency object.
        """
        pass

    @staticmethod
    def GetCacheInvalidationThresholdMaximum(target):
        """
        GetCacheInvalidationThresholdMaximum(target: DependencyObject) -> float
        
            Returns the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum�attached property for a specified dependency object.
        
            target: The dependency object from which to retrieve the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum attached property.
            Returns: The current value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum attached property on the specified dependency object.
        """
        pass

    @staticmethod
    def GetCacheInvalidationThresholdMinimum(target):
        """
        GetCacheInvalidationThresholdMinimum(target: DependencyObject) -> float
        
            Returns the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum�attached property for a specified dependency object.
        
            target: The dependency object from which to retrieve the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum attached property.
            Returns: The current value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum attached property on the specified dependency object.
        """
        pass

    @staticmethod
    def GetCachingHint(target):
        """
        GetCachingHint(target: DependencyObject) -> CachingHint
        
            Returns the value of the System.Windows.Media.RenderOptions.CachingHint�attached property for a specified dependency object.
        
            target: The dependency object from which to retrieve the value of the System.Windows.Media.RenderOptions.CachingHint attached property.
            Returns: The current value of the System.Windows.Media.RenderOptions.CachingHint attached property on the specified dependency object.
        """
        pass

    @staticmethod
    def GetClearTypeHint(target):
        """
        GetClearTypeHint(target: DependencyObject) -> ClearTypeHint
        
            Gets the value of the System.Windows.Media.RenderOptions.ClearTypeHint attached property of the specified element.
        
            target: The System.Windows.DependencyObject to retrieve the System.Windows.Media.RenderOptions.ClearTypeHint attached property for.
            Returns: The value of the System.Windows.Media.RenderOptions.ClearTypeHint attached property for target.
        """
        pass

    @staticmethod
    def GetEdgeMode(target):
        """
        GetEdgeMode(target: DependencyObject) -> EdgeMode
        
            Returns the value of the System.Windows.Media.RenderOptions.EdgeMode�attached property for a specified dependency object.
        
            target: The dependency object from which to retrieve the value of the System.Windows.Media.RenderOptions.EdgeMode attached property.
            Returns: The current value of the System.Windows.Media.RenderOptions.EdgeMode attached property on the specified dependency object.
        """
        pass

    @staticmethod
    def SetBitmapScalingMode(target, bitmapScalingMode):
        """
        SetBitmapScalingMode(target: DependencyObject, bitmapScalingMode: BitmapScalingMode)
            Sets the value of the System.Windows.Media.RenderOptions.BitmapScalingMode�attached property on a specified dependency object.
        
            target: The System.Windows.UIElement or System.Windows.Media.DrawingGroup descendant on which to set the value of the System.Windows.Media.RenderOptions.BitmapScalingMode property.
            bitmapScalingMode: The new value to set the property to.
        """
        pass

    @staticmethod
    def SetCacheInvalidationThresholdMaximum(target, cacheInvalidationThresholdMaximum):
        """
        SetCacheInvalidationThresholdMaximum(target: DependencyObject, cacheInvalidationThresholdMaximum: float)
            Sets the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum�attached property on a specified dependency object.
        
            target: The dependency object on which to set the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMaximum property
            cacheInvalidationThresholdMaximum: The new value to set the property to.
        """
        pass

    @staticmethod
    def SetCacheInvalidationThresholdMinimum(target, cacheInvalidationThresholdMinimum):
        """
        SetCacheInvalidationThresholdMinimum(target: DependencyObject, cacheInvalidationThresholdMinimum: float)
            Sets the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum�attached property on a specified dependency object.
        
            target: The dependency object on which to set the value of the System.Windows.Media.RenderOptions.CacheInvalidationThresholdMinimum property
            cacheInvalidationThresholdMinimum: The new value to set the property to.
        """
        pass

    @staticmethod
    def SetCachingHint(target, cachingHint):
        """
        SetCachingHint(target: DependencyObject, cachingHint: CachingHint)
            Sets the value of the System.Windows.Media.RenderOptions.CachingHint�attached property on a specified dependency object.
        
            target: The dependency object on which to set the value of the System.Windows.Media.RenderOptions.CachingHint property.
            cachingHint: The new value to set the property to.
        """
        pass

    @staticmethod
    def SetClearTypeHint(target, clearTypeHint):
        """
        SetClearTypeHint(target: DependencyObject, clearTypeHint: ClearTypeHint)
            Sets the value of the System.Windows.Media.RenderOptions.ClearTypeHint attached property of the specified element.
        
            target: The System.Windows.DependencyObject to set the System.Windows.Media.RenderOptions.ClearTypeHint attached property on.
            clearTypeHint: The new System.Windows.Media.RenderOptions.ClearTypeHint value.
        """
        pass

    @staticmethod
    def SetEdgeMode(target, edgeMode):
        """
        SetEdgeMode(target: DependencyObject, edgeMode: EdgeMode)
            Sets the value of the System.Windows.Media.RenderOptions.EdgeMode�attached property on a specified dependency object.
        
            target: The dependency object on which to set the value of the System.Windows.Media.RenderOptions.EdgeMode property
            edgeMode: The new value to set the property to.
        """
        pass

    BitmapScalingModeProperty = None
    CacheInvalidationThresholdMaximumProperty = None
    CacheInvalidationThresholdMinimumProperty = None
    CachingHintProperty = None
    ClearTypeHintProperty = None
    EdgeModeProperty = None
    ProcessRenderMode = None
    __all__ = [
        'BitmapScalingModeProperty',
        'CacheInvalidationThresholdMaximumProperty',
        'CacheInvalidationThresholdMinimumProperty',
        'CachingHintProperty',
        'ClearTypeHintProperty',
        'EdgeModeProperty',
        'GetBitmapScalingMode',
        'GetCacheInvalidationThresholdMaximum',
        'GetCacheInvalidationThresholdMinimum',
        'GetCachingHint',
        'GetClearTypeHint',
        'GetEdgeMode',
        'SetBitmapScalingMode',
        'SetCacheInvalidationThresholdMaximum',
        'SetCacheInvalidationThresholdMinimum',
        'SetCachingHint',
        'SetClearTypeHint',
        'SetEdgeMode',
    ]


class RequestCachePolicyConverter(TypeConverter):
    """
    Parses a System.Net.Cache.RequestCachePolicy.
    
    RequestCachePolicyConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: RequestCachePolicyConverter, td: ITypeDescriptorContext, t: Type) -> bool
        
            Returns a value that indicates whether this converter can convert an object of the specified type to the type of this converter, using the specified context.
        
            td: The format context.
            t: The type to convert from.
            Returns: true if this converter can perform the conversion; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: RequestCachePolicyConverter, typeDescriptorContext: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Returns a value that indicates whether this converter can convert the object to the specified type, using the specified context.
        
            typeDescriptorContext: The format context.
            destinationType: The type being queried for support.
            Returns: true if this converter can perform the conversion; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: RequestCachePolicyConverter, td: ITypeDescriptorContext, ci: CultureInfo, value: object) -> object
        
            Converts the specified object to a System.Net.Cache.RequestCachePolicy object.
        
            td: The format context.
            ci: The current culture.
            value: The object to convert.
            Returns: An object that represents the converted value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: RequestCachePolicyConverter, typeDescriptorContext: ITypeDescriptorContext, cultureInfo: CultureInfo, value: object, destinationType: Type) -> object
        
            Converts this object to the specified type.
        
            typeDescriptorContext: The format context.
            cultureInfo: The culture to use for the conversion.
            value: The policy to convert.
            destinationType: The type to convert to.
            Returns: The object that is constructed from the conversion.
        """
        pass


class RotateTransform(Transform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Rotates an object clockwise about a specified point in a 2-D x-y coordinate system.
    
    RotateTransform()
    RotateTransform(angle: float)
    RotateTransform(angle: float, centerX: float, centerY: float)
    """
    def Clone(self):
        """
        Clone(self: RotateTransform) -> RotateTransform
        
            Creates a modifiable copy of this System.Windows.Media.RotateTransform by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: RotateTransform) -> RotateTransform
        
            Creates a modifiable copy of this System.Windows.Media.RotateTransform object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it 
             does copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: RotateTransform) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, angle=None, centerX=None, centerY=None):
        """
        __new__(cls: type)
        __new__(cls: type, angle: float)
        __new__(cls: type, angle: float, centerX: float, centerY: float)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Angle = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the angle, in degrees, of clockwise rotation.

Get: Angle(self: RotateTransform) -> float

Set: Angle(self: RotateTransform) = value
"""

    CenterX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate of the rotation center point.

Get: CenterX(self: RotateTransform) -> float

Set: CenterX(self: RotateTransform) = value
"""

    CenterY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate of the rotation center point.

Get: CenterY(self: RotateTransform) -> float

Set: CenterY(self: RotateTransform) = value
"""

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the current rotation transformation as a System.Windows.Media.Matrix object.

Get: Value(self: RotateTransform) -> Matrix

"""


    AngleProperty = None
    CenterXProperty = None
    CenterYProperty = None


class ScaleTransform(Transform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Scales an object in the 2-D�x-y coordinate system.
    
    ScaleTransform()
    ScaleTransform(scaleX: float, scaleY: float)
    ScaleTransform(scaleX: float, scaleY: float, centerX: float, centerY: float)
    """
    def Clone(self):
        """
        Clone(self: ScaleTransform) -> ScaleTransform
        
            Creates a modifiable copy of this System.Windows.Media.ScaleTransform by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: ScaleTransform) -> ScaleTransform
        
            Creates a modifiable copy of this System.Windows.Media.ScaleTransform object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it 
             does copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: ScaleTransform) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, scaleX=None, scaleY=None, centerX=None, centerY=None):
        """
        __new__(cls: type)
        __new__(cls: type, scaleX: float, scaleY: float)
        __new__(cls: type, scaleX: float, scaleY: float, centerX: float, centerY: float)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    CenterX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate of the center point of this System.Windows.Media.ScaleTransform.

Get: CenterX(self: ScaleTransform) -> float

Set: CenterX(self: ScaleTransform) = value
"""

    CenterY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate of the center point of this System.Windows.Media.ScaleTransform.

Get: CenterY(self: ScaleTransform) -> float

Set: CenterY(self: ScaleTransform) = value
"""

    ScaleX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-axis scale factor.

Get: ScaleX(self: ScaleTransform) -> float

Set: ScaleX(self: ScaleTransform) = value
"""

    ScaleY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-axis scale factor.

Get: ScaleY(self: ScaleTransform) -> float

Set: ScaleY(self: ScaleTransform) = value
"""

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the current scaling transformation as a System.Windows.Media.Matrix object.

Get: Value(self: ScaleTransform) -> Matrix

"""


    CenterXProperty = None
    CenterYProperty = None
    ScaleXProperty = None
    ScaleYProperty = None


class SkewTransform(Transform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a 2-D�skew.
    
    SkewTransform()
    SkewTransform(angleX: float, angleY: float)
    SkewTransform(angleX: float, angleY: float, centerX: float, centerY: float)
    """
    def Clone(self):
        """
        Clone(self: SkewTransform) -> SkewTransform
        
            Creates a modifiable copy of this System.Windows.Media.SkewTransform by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: SkewTransform) -> SkewTransform
        
            Creates a modifiable copy of this System.Windows.Media.SkewTransform object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it 
             does copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: SkewTransform) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, angleX=None, angleY=None, centerX=None, centerY=None):
        """
        __new__(cls: type)
        __new__(cls: type, angleX: float, angleY: float)
        __new__(cls: type, angleX: float, angleY: float, centerX: float, centerY: float)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    AngleX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-axis skew angle, which is measured in degrees counterclockwise from the y-axis.

Get: AngleX(self: SkewTransform) -> float

Set: AngleX(self: SkewTransform) = value
"""

    AngleY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-axis skew angle, which is measured in degrees counterclockwise from the x-axis.

Get: AngleY(self: SkewTransform) -> float

Set: AngleY(self: SkewTransform) = value
"""

    CenterX = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the x-coordinate of the transform center.

Get: CenterX(self: SkewTransform) -> float

Set: CenterX(self: SkewTransform) = value
"""

    CenterY = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the y-coordinate of the transform center.

Get: CenterY(self: SkewTransform) -> float

Set: CenterY(self: SkewTransform) = value
"""

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the current transformation value as a System.Windows.Media.Matrix.

Get: Value(self: SkewTransform) -> Matrix

"""


    AngleXProperty = None
    AngleYProperty = None
    CenterXProperty = None
    CenterYProperty = None


class SolidColorBrush(Brush, ISealable, IAnimatable, IResource, IFormattable):
    """
    Paints an area with a solid color.
    
    SolidColorBrush()
    SolidColorBrush(color: Color)
    """
    def Clone(self):
        """
        Clone(self: SolidColorBrush) -> SolidColorBrush
        
            Creates a modifiable clone of this System.Windows.Media.SolidColorBrush, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: SolidColorBrush) -> SolidColorBrush
        
            Creates a modifiable clone of this System.Windows.Media.SolidColorBrush object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: SolidColorBrush) -> Freezable """
        pass

    @staticmethod
    def DeserializeFrom(reader):
        """
        DeserializeFrom(reader: BinaryReader) -> object
        
            This member supports the WPF infrastructure and is not intended to be used directly from your code.
        
            reader: The binary reader to read the System.Windows.Media.SolidColorBrush from.
            Returns: The deserialized System.Windows.Media.SolidColorBrush.
        """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, color=None):
        """
        __new__(cls: type)
        __new__(cls: type, color: Color)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Color = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the color of this System.Windows.Media.SolidColorBrush.

Get: Color(self: SolidColorBrush) -> Color

Set: Color(self: SolidColorBrush) = value
"""


    ColorProperty = None


class StreamGeometry(Geometry, ISealable, IAnimatable, IResource, IFormattable):
    """
    Defines a geometric shape, described using a System.Windows.Media.StreamGeometryContext. This geometry is light-weight alternative to System.Windows.Media.PathGeometry: it does not support data binding, animation, or modification.
    
    StreamGeometry()
    """
    def Clear(self):
        """
        Clear(self: StreamGeometry)
            Removes all geometric information from this System.Windows.Media.StreamGeometry.
        """
        pass

    def Clone(self):
        """
        Clone(self: StreamGeometry) -> StreamGeometry
        
            Creates a modifiable clone of this System.Windows.Media.StreamGeometry, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: StreamGeometry, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: StreamGeometry) -> StreamGeometry
        
            Creates a modifiable clone of this System.Windows.Media.StreamGeometry object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: StreamGeometry, source: Freezable) """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: StreamGeometry) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: StreamGeometry, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: StreamGeometry, source: Freezable) """
        pass

    def IsEmpty(self):
        """
        IsEmpty(self: StreamGeometry) -> bool
        
            Determines whether this System.Windows.Media.StreamGeometry describes a geometric shape.
            Returns: true if this System.Windows.Media.StreamGeometry describes a geometry shape; otherwise, false.
        """
        pass

    def MayHaveCurves(self):
        """
        MayHaveCurves(self: StreamGeometry) -> bool
        
            Determines whether this System.Windows.Media.StreamGeometry contains a curved segment.
            Returns: true if this System.Windows.Media.StreamGeometry object has a curved segment; otherwise, false.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """ OnChanged(self: StreamGeometry) """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def Open(self):
        """
        Open(self: StreamGeometry) -> StreamGeometryContext
        
            Opens a System.Windows.Media.StreamGeometryContext that can be used to describe this System.Windows.Media.StreamGeometry object's contents.
            Returns: A System.Windows.Media.StreamGeometryContext that can be used to describe this System.Windows.Media.StreamGeometry object's contents.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Bounds = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Rect that is exactly large enough to contain this System.Windows.Media.StreamGeometry.

Get: Bounds(self: StreamGeometry) -> Rect

"""

    FillRule = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that determines how the intersecting areas contained in this System.Windows.Media.StreamGeometry are combined.

Get: FillRule(self: StreamGeometry) -> FillRule

Set: FillRule(self: StreamGeometry) = value
"""


    FillRuleProperty = None


class StreamGeometryContext(DispatcherObject, IDisposable):
    """ Describes a geometry using drawing commands. This class is used with the System.Windows.Media.StreamGeometry class to create a lightweight geometry that does not support data binding, animation, or modification. """
    def ArcTo(self, point, size, rotationAngle, isLargeArc, sweepDirection, isStroked, isSmoothJoin):
        """
        ArcTo(self: StreamGeometryContext, point: Point, size: Size, rotationAngle: float, isLargeArc: bool, sweepDirection: SweepDirection, isStroked: bool, isSmoothJoin: bool)
            Draws an arc to the specified point.
        
            point: The destination point for the end of the arc.
            size: The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle. If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will 
             the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.
        
            rotationAngle: The rotation angle of the oval that specifies the curve. The curvature of the arc can be rotated with this parameter.
            isLargeArc: true to draw the arc greater than 180 degrees; otherwise, false.
            sweepDirection: A value that indicates whether the arc is drawn in the System.Windows.Media.SweepDirection.Clockwise or System.Windows.Media.SweepDirection.Counterclockwise direction.
            isStroked: true to make the segment stroked when a System.Windows.Media.Pen is used to render the segment; otherwise, false.
            isSmoothJoin: true to treat the join between this segment and the previous segment as a corner when stroked with a System.Windows.Media.Pen; otherwise, false.
        """
        pass

    def BeginFigure(self, startPoint, isFilled, isClosed):
        """
        BeginFigure(self: StreamGeometryContext, startPoint: Point, isFilled: bool, isClosed: bool)
            Specifies the starting point for a new figure.
        
            startPoint: The System.Windows.Point where the figure begins.
            isFilled: true to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, false.
            isClosed: true to close the figure; otherwise, false. For example, if two connecting lines are drawn, and isClosed is set to false, the drawing will just be of two lines but if isClosed is set to true, the two lines 
             will be closed to create a triangle.
        """
        pass

    def BezierTo(self, point1, point2, point3, isStroked, isSmoothJoin):
        """
        BezierTo(self: StreamGeometryContext, point1: Point, point2: Point, point3: Point, isStroked: bool, isSmoothJoin: bool)
            Draws a Bezier curve to the specified point.
        
            point1: The first control point used to specify the shape of the curve.
            point2: The second control point used to specify the shape of the curve.
            point3: The destination point for the end of the curve.
            isStroked: true to make the segment stroked when a System.Windows.Media.Pen is used to render the segment; otherwise, false.
            isSmoothJoin: true to treat the join between this segment and the previous segment as a corner when stroked with a System.Windows.Media.Pen; otherwise, false.
        """
        pass

    def Close(self):
        """
        Close(self: StreamGeometryContext)
            Closes this context and flushes its content so that it can be rendered.
        """
        pass

    def LineTo(self, point, isStroked, isSmoothJoin):
        """
        LineTo(self: StreamGeometryContext, point: Point, isStroked: bool, isSmoothJoin: bool)
            Draws a straight line to the specified System.Windows.Point.
        
            point: The destination point for the end of the line.
            isStroked: true to make the segment stroked when a System.Windows.Media.Pen is used to render the segment; otherwise, false.
            isSmoothJoin: true to treat the join between this segment and the previous segment as a corner when stroked with a System.Windows.Media.Pen; otherwise, false.
        """
        pass

    def PolyBezierTo(self, points, isStroked, isSmoothJoin):
        """ PolyBezierTo(self: StreamGeometryContext, points: IList[Point], isStroked: bool, isSmoothJoin: bool) """
        pass

    def PolyLineTo(self, points, isStroked, isSmoothJoin):
        """ PolyLineTo(self: StreamGeometryContext, points: IList[Point], isStroked: bool, isSmoothJoin: bool) """
        pass

    def PolyQuadraticBezierTo(self, points, isStroked, isSmoothJoin):
        """ PolyQuadraticBezierTo(self: StreamGeometryContext, points: IList[Point], isStroked: bool, isSmoothJoin: bool) """
        pass

    def QuadraticBezierTo(self, point1, point2, isStroked, isSmoothJoin):
        """
        QuadraticBezierTo(self: StreamGeometryContext, point1: Point, point2: Point, isStroked: bool, isSmoothJoin: bool)
            Draws a quadratic Bezier curve.
        
            point1: The control point used to specify the shape of the curve.
            point2: The destination point for the end of the curve.
            isStroked: true to make the segment stroked when a System.Windows.Media.Pen is used to render the segment; otherwise, false.
            isSmoothJoin: true to treat the join between this segment and the previous segment as a corner when stroked with a System.Windows.Media.Pen; otherwise, false.
        """
        pass

    def __enter__(self, *args): #cannot find CLR method
        """
        __enter__(self: IDisposable) -> object
        
            Provides the implementation of __enter__ for objects which implement IDisposable.
        """
        pass

    def __exit__(self, *args): #cannot find CLR method
        """
        __exit__(self: IDisposable, exc_type: object, exc_value: object, exc_back: object)
            Provides the implementation of __exit__ for objects which implement IDisposable.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass


class Stretch(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes how content is resized to fill its allocated space.
    
    enum Stretch, values: Fill (1), None (0), Uniform (2), UniformToFill (3)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Fill = None
    None = None
    Uniform = None
    UniformToFill = None
    value__ = None


class StyleSimulations(Enum, IComparable, IFormattable, IConvertible):
    """
    Defines an enumerator class that describes the simulation style of a font.
    
    enum (flags) StyleSimulations, values: BoldItalicSimulation (3), BoldSimulation (1), ItalicSimulation (2), None (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    BoldItalicSimulation = None
    BoldSimulation = None
    ItalicSimulation = None
    None = None
    value__ = None


class SweepDirection(Enum, IComparable, IFormattable, IConvertible):
    """
    Defines the direction an elliptical arc is drawn.
    
    enum SweepDirection, values: Clockwise (1), Counterclockwise (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Clockwise = None
    Counterclockwise = None
    value__ = None


class TextEffect(Animatable, ISealable, IAnimatable, IResource):
    """
    Represents a text effect that can be applied to text objects.
    
    TextEffect(transform: Transform, foreground: Brush, clip: Geometry, positionStart: int, positionCount: int)
    TextEffect()
    """
    def Clone(self):
        """
        Clone(self: TextEffect) -> TextEffect
        
            Creates a modifiable clone of this System.Windows.Media.TextEffect, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings 
             (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: TextEffect) -> TextEffect
        
            Creates a modifiable clone of this System.Windows.Media.TextEffect object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: TextEffect) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, transform=None, foreground=None, clip=None, positionStart=None, positionCount=None):
        """
        __new__(cls: type, transform: Transform, foreground: Brush, clip: Geometry, positionStart: int, positionCount: int)
        __new__(cls: type)
        """
        pass

    Clip = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the clipping region of the System.Windows.Media.TextEffect.

Get: Clip(self: TextEffect) -> Geometry

Set: Clip(self: TextEffect) = value
"""

    Foreground = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Brush to apply to the content of the System.Windows.Media.TextEffect.

Get: Foreground(self: TextEffect) -> Brush

Set: Foreground(self: TextEffect) = value
"""

    PositionCount = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the position in the text that the System.Windows.Media.TextEffect applies to.

Get: PositionCount(self: TextEffect) -> int

Set: PositionCount(self: TextEffect) = value
"""

    PositionStart = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the starting position in the text that the System.Windows.Media.TextEffect applies to.

Get: PositionStart(self: TextEffect) -> int

Set: PositionStart(self: TextEffect) = value
"""

    Transform = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.Transform that is applied to the System.Windows.Media.TextEffect.

Get: Transform(self: TextEffect) -> Transform

Set: Transform(self: TextEffect) = value
"""


    ClipProperty = None
    ForegroundProperty = None
    PositionCountProperty = None
    PositionStartProperty = None
    TransformProperty = None


class TextEffectCollection(Animatable, ISealable, IAnimatable, IResource, IList, ICollection, IEnumerable, IList[TextEffect], ICollection[TextEffect], IEnumerable[TextEffect]):
    """
    Provides collection support for a collection of System.Windows.Media.TextEffect objects.
    
    TextEffectCollection()
    TextEffectCollection(capacity: int)
    TextEffectCollection(collection: IEnumerable[TextEffect])
    """
    def Add(self, value):
        """
        Add(self: TextEffectCollection, value: TextEffect)
            Adds a System.Windows.Media.TextEffect to the end of the collection.
        
            value: The System.Windows.Media.TextEffect to add to the collection.
        """
        pass

    def Clear(self):
        """
        Clear(self: TextEffectCollection)
            Removes all elements from the list.
        """
        pass

    def Clone(self):
        """
        Clone(self: TextEffectCollection) -> TextEffectCollection
        
            Creates a modifiable clone of this System.Windows.Media.TextEffectCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: TextEffectCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: TextEffectCollection) -> TextEffectCollection
        
            Creates a modifiable clone of this System.Windows.Media.TextEffectCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: TextEffectCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: TextEffectCollection, value: TextEffect) -> bool
        
            Determines if the specified item is in the collection.
        
            value: The System.Windows.Media.TextEffect to locate in the collection
            Returns: true if the collection contains value; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: TextEffectCollection, array: Array[TextEffect], index: int)
            Copies the entire System.Windows.Media.TextEffectCollection to a one-dimensional array of type System.Windows.Media.TextEffect, starting at the specified index of the target array.
        
            array: The array into which the collection's items are to be copied.
            index: The index of array at which to start copying the contents of the System.Windows.Media.TextEffectCollection.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: TextEffectCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: TextEffectCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: TextEffectCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: TextEffectCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: TextEffectCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the collection.
            Returns: An System.Collections.IEnumerator that can iterate through the collection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: TextEffectCollection, value: TextEffect) -> int
        
            Searches for the specified System.Windows.Media.TextEffect and returns the zero-based index of the first occurrence within the entire collection.
        
            value: The System.Windows.Media.TextEffect to locate in the collection.
            Returns: The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: TextEffectCollection, index: int, value: TextEffect)
            Inserts a System.Windows.Media.TextEffect into a specific location in the collection.
        
            index: The zero-based index at which the value System.Windows.Media.TextEffect be inserted.
            value: The System.Windows.Media.TextEffect to insert into the collection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: TextEffectCollection, value: TextEffect) -> bool
        
            Removes the specified System.Windows.Media.TextEffect object from the collection.
        
            value: The System.Windows.Media.TextEffect to remove from the collection.
            Returns: true if value was removed fro the collection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: TextEffectCollection, index: int)
            Removes the System.Windows.Media.TextEffect at the specified index in the collection.
        
            index: The zero-based index of the System.Windows.Media.TextEffect to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[TextEffect], item: TextEffect) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[TextEffect])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of elements in the collection.

Get: Count(self: TextEffectCollection) -> int

"""


    Enumerator = None


class TextFormattingMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Defines the formatting methods supported by the System.Windows.Media.TextFormatting.TextFormatter class.
    
    enum TextFormattingMode, values: Display (1), Ideal (0)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Display = None
    Ideal = None
    value__ = None


class TextHintingMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Defines the rendering behavior of static or animated text.
    
    enum TextHintingMode, values: Animated (2), Auto (0), Fixed (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Animated = None
    Auto = None
    Fixed = None
    value__ = None


class TextOptions(object):
    """ Defines a set of attached properties that affect the way text is displayed in an element. """
    @staticmethod
    def GetTextFormattingMode(element):
        """
        GetTextFormattingMode(element: DependencyObject) -> TextFormattingMode
        
            Gets the System.Windows.Media.TextFormattingMode for the specified element.
        
            element: The element to get the System.Windows.Media.TextFormattingMode for.
            Returns: The System.Windows.Media.TextFormattingMode for element.
        """
        pass

    @staticmethod
    def GetTextHintingMode(element):
        """
        GetTextHintingMode(element: DependencyObject) -> TextHintingMode
        
            Gets the System.Windows.Media.TextHintingMode for the specified element.
        
            element: The element to get the System.Windows.Media.TextHintingMode  for.
            Returns: The System.Windows.Media.TextHintingMode for element.
        """
        pass

    @staticmethod
    def GetTextRenderingMode(element):
        """
        GetTextRenderingMode(element: DependencyObject) -> TextRenderingMode
        
            Gets the System.Windows.Media.TextRenderingMode for the specified element.
        
            element: The element to get the System.Windows.Media.TextRenderingMode for.
            Returns: The System.Windows.Media.TextRenderingMode for element.
        """
        pass

    @staticmethod
    def SetTextFormattingMode(element, value):
        """
        SetTextFormattingMode(element: DependencyObject, value: TextFormattingMode)
            Sets the System.Windows.Media.TextFormattingMode for the specified element.
        
            element: The element to set the System.Windows.Media.TextFormattingMode for.
            value: The System.Windows.Media.TextFormattingMode to set on element.
        """
        pass

    @staticmethod
    def SetTextHintingMode(element, value):
        """
        SetTextHintingMode(element: DependencyObject, value: TextHintingMode)
            Sets the System.Windows.Media.TextHintingMode for the specified element.
        
            element: The element to set the System.Windows.Media.TextHintingMode for.
            value: The System.Windows.Media.TextHintingMode to set on element.
        """
        pass

    @staticmethod
    def SetTextRenderingMode(element, value):
        """
        SetTextRenderingMode(element: DependencyObject, value: TextRenderingMode)
            Sets the System.Windows.Media.TextRenderingMode for the specified element.
        
            element: The element to set the System.Windows.Media.TextRenderingMode for.
            value: The System.Windows.Media.TextRenderingMode to set on element.
        """
        pass

    TextFormattingModeProperty = None
    TextHintingModeProperty = None
    TextRenderingModeProperty = None
    __all__ = [
        'GetTextFormattingMode',
        'GetTextHintingMode',
        'GetTextRenderingMode',
        'SetTextFormattingMode',
        'SetTextHintingMode',
        'SetTextRenderingMode',
        'TextFormattingModeProperty',
        'TextHintingModeProperty',
        'TextRenderingModeProperty',
    ]


class TextRenderingMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Defines the supported rendering modes for text.
    
    enum TextRenderingMode, values: Aliased (1), Auto (0), ClearType (3), Grayscale (2)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Aliased = None
    Auto = None
    ClearType = None
    Grayscale = None
    value__ = None


class TileMode(Enum, IComparable, IFormattable, IConvertible):
    """
    Describes how a System.Windows.Media.TileBrush paints tiles onto an output area.
    
    enum TileMode, values: FlipX (1), FlipXY (3), FlipY (2), None (0), Tile (4)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    FlipX = None
    FlipXY = None
    FlipY = None
    None = None
    Tile = None
    value__ = None


class ToleranceType(Enum, IComparable, IFormattable, IConvertible):
    """
    Determines the means by which an error tolerance value is interpreted.
    
    enum ToleranceType, values: Absolute (0), Relative (1)
    """
    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __ge__(self, *args): #cannot find CLR method
        pass

    def __gt__(self, *args): #cannot find CLR method
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __le__(self, *args): #cannot find CLR method
        pass

    def __lt__(self, *args): #cannot find CLR method
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    def __reduce_ex__(self, *args): #cannot find CLR method
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Absolute = None
    Relative = None
    value__ = None


class TransformCollection(Animatable, ISealable, IAnimatable, IResource, IList, ICollection, IEnumerable, IList[Transform], ICollection[Transform], IEnumerable[Transform]):
    """
    Represents a collection of System.Windows.Media.Transform objects that can be individually accessed by index.
    
    TransformCollection()
    TransformCollection(capacity: int)
    TransformCollection(collection: IEnumerable[Transform])
    """
    def Add(self, value):
        """
        Add(self: TransformCollection, value: Transform)
            Adds a System.Windows.Media.Transform to the end of the System.Windows.Media.TransformCollection.
        
            value: The System.Windows.Media.Transform to add to the end of the System.Windows.Media.TransformCollection.
        """
        pass

    def Clear(self):
        """
        Clear(self: TransformCollection)
            Removes all items from the System.Windows.Media.TransformCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: TransformCollection) -> TransformCollection
        
            Creates a modifiable clone of this System.Windows.Media.TransformCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: TransformCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: TransformCollection) -> TransformCollection
        
            Creates a modifiable clone of this System.Windows.Media.TransformCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, 
             but their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: TransformCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: TransformCollection, value: Transform) -> bool
        
            Determines whether the System.Windows.Media.TransformCollection contains the specified System.Windows.Media.Transform.
        
            value: The System.Windows.Media.Transform to locate in the System.Windows.Media.TransformCollection.
            Returns: true if the System.Windows.Media.Transform is found in the System.Windows.Media.TransformCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: TransformCollection, array: Array[Transform], index: int)
            Copies the items of the System.Windows.Media.TransformCollection to an array, starting at the specified array index.
        
            array: The one-dimensional array that is the destination of the items copied from the System.Windows.Media.TransformCollection. The array must have zero-based indexing.
            index: The zero-based index in array at which copying begins.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: TransformCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """ FreezeCore(self: TransformCollection, isChecking: bool) -> bool """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: TransformCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: TransformCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: TransformCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the System.Windows.Media.TransformCollection.
            Returns: A System.Windows.Media.TransformCollection.Enumerator that can be used to iterate through the System.Windows.Media.TransformCollection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: TransformCollection, value: Transform) -> int
        
            Determines the index of the specified item in the System.Windows.Media.TransformCollection.
        
            value: The System.Windows.Media.Transform to locate in the System.Windows.Media.TransformCollection.
            Returns: The index of value if found in the System.Windows.Media.TransformCollection; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: TransformCollection, index: int, value: Transform)
            Inserts a System.Windows.Media.Transform into the System.Windows.Media.TransformCollection at the specified index.
        
            index: The zero-based index at which value should be inserted.
            value: The System.Windows.Media.Transform to insert into the System.Windows.Media.TransformCollection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: TransformCollection, value: Transform) -> bool
        
            Removes the first occurrence of the specified System.Windows.Media.Transform from the System.Windows.Media.TransformCollection.
        
            value: The System.Windows.Media.Transform to remove from the System.Windows.Media.TransformCollection.
            Returns: true if value was removed from the System.Windows.Media.TransformCollection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: TransformCollection, index: int)
            Removes the System.Windows.Media.Transform at the specified index.
        
            index: The zero-based index of the System.Windows.Media.Transform to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[Transform], item: Transform) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[Transform])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of items contained in the System.Windows.Media.TransformCollection.

Get: Count(self: TransformCollection) -> int

"""


    Enumerator = None


class TransformConverter(TypeConverter):
    """
    Converts a System.Windows.Media.Transform object to or from another object type.
    
    TransformConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: TransformConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether this class can convert an object of a specified type to a System.Windows.Media.Transform type.
        
            context: The conversion context.
            sourceType: The type from which to convert.
            Returns: true if conversion is possible; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: TransformConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether this class can convert an object of a specified type to the specified destination type.
        
            context: The conversion context.
            destinationType: The destination type.
            Returns: true if conversion is possible; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: TransformConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Converts from an object of a specified type to a System.Windows.Media.Transform object.
        
            context: The conversion context.
            culture: The culture information that applies to the conversion.
            value: The object to convert.
            Returns: A new System.Windows.Media.Transform object.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: TransformConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Converts the specified System.Windows.Media.Transform to the specified type by using the specified context and culture information.
        
            context: The conversion context.
            culture: The culture information that applies to the conversion.
            value: The System.Windows.Media.Transform to convert.
            destinationType: The destination type that the value object is converted to.
            Returns: An object that represents the converted value.
        """
        pass


class TransformGroup(Transform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Represents a composite System.Windows.Media.Transform composed of other System.Windows.Media.Transform objects.
    
    TransformGroup()
    """
    def Clone(self):
        """
        Clone(self: TransformGroup) -> TransformGroup
        
            Creates a modifiable copy of this System.Windows.Media.TransformGroup by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: TransformGroup) -> TransformGroup
        
            Creates a modifiable copy of this System.Windows.Media.TransformGroup object by making deep copies of its values. This method does not copy resource references, data bindings, or animations, although it 
             does copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: TransformGroup) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Children = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the System.Windows.Media.TransformCollection that defines this System.Windows.Media.TransformGroup.

Get: Children(self: TransformGroup) -> TransformCollection

Set: Children(self: TransformGroup) = value
"""

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the System.Windows.Media.Matrix structure that describes the transformation represented by this System.Windows.Media.TransformGroup.

Get: Value(self: TransformGroup) -> Matrix

"""


    ChildrenProperty = None


class TranslateTransform(Transform, ISealable, IAnimatable, IResource, IFormattable):
    """
    Translates (moves) an object in the 2-D x-y coordinate system.
    
    TranslateTransform()
    TranslateTransform(offsetX: float, offsetY: float)
    """
    def Clone(self):
        """
        Clone(self: TranslateTransform) -> TranslateTransform
        
            Creates a modifiable copy of this System.Windows.Media.TranslateTransform by making deep copies of its values.
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object returns false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: TranslateTransform) -> TranslateTransform
        
            Creates a modifiable copy of this System.Windows.Media.TranslateTransform object by making deep copies of its values. This method does not copy resource references, data bindings, and animations, although 
             it does copy their current values.
        
            Returns: A modifiable deep copy of the current object. The System.Windows.Freezable.IsFrozen property of the cloned object is false even if the System.Windows.Freezable.IsFrozen property of the source is true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: TranslateTransform) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, offsetX=None, offsetY=None):
        """
        __new__(cls: type)
        __new__(cls: type, offsetX: float, offsetY: float)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Value = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a System.Windows.Media.Matrix representation of this System.Windows.Media.TranslateTransform.

Get: Value(self: TranslateTransform) -> Matrix

"""

    X = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the distance to translate along the x-axis.

Get: X(self: TranslateTransform) -> float

Set: X(self: TranslateTransform) = value
"""

    Y = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the distance to translate (move) an object along the y-axis.

Get: Y(self: TranslateTransform) -> float

Set: Y(self: TranslateTransform) = value
"""


    XProperty = None
    YProperty = None


class Typeface(object):
    """
    Represents a combination of System.Windows.Media.FontFamily, System.Windows.FontWeight, System.Windows.FontStyle, and System.Windows.FontStretch.
    
    Typeface(typefaceName: str)
    Typeface(fontFamily: FontFamily, style: FontStyle, weight: FontWeight, stretch: FontStretch)
    Typeface(fontFamily: FontFamily, style: FontStyle, weight: FontWeight, stretch: FontStretch, fallbackFontFamily: FontFamily)
    """
    def Equals(self, o):
        """
        Equals(self: Typeface, o: object) -> bool
        
            Gets a value that indicates whether the current typeface and the specified typeface have the same System.Windows.Media.Typeface.FontFamily, System.Windows.Media.Typeface.Style, 
             System.Windows.Media.Typeface.Weight, System.Windows.Media.Typeface.Stretch, and fallback font values.
        
        
            o: The System.Windows.Media.Typeface to compare.
            Returns: true if o is equal to the current System.Windows.Media.Typeface object; otherwise, false. If o is not a System.Windows.Media.Typeface object, false is returned.
        """
        pass

    def GetHashCode(self):
        """
        GetHashCode(self: Typeface) -> int
        
            Serves as a hash function for System.Windows.Media.Typeface. It is suitable for use in hashing algorithms and data structures such as a hash table.
            Returns: An System.Int32 value that represents the hash code for the current object.
        """
        pass

    def TryGetGlyphTypeface(self, glyphTypeface):
        """
        TryGetGlyphTypeface(self: Typeface) -> (bool, GlyphTypeface)
        
            Retrieves the System.Windows.Media.GlyphTypeface that corresponds to the System.Windows.Media.Typeface.
            Returns: true if the out parameter is set to a System.Windows.Media.GlyphTypeface value; otherwise, false.
        """
        pass

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==y """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type, typefaceName: str)
        __new__(cls: type, fontFamily: FontFamily, style: FontStyle, weight: FontWeight, stretch: FontStretch)
        __new__(cls: type, fontFamily: FontFamily, style: FontStyle, weight: FontWeight, stretch: FontStretch, fallbackFontFamily: FontFamily)
        """
        pass

    def __ne__(self, *args): #cannot find CLR method
        pass

    CapsHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the baseline to the top of an English capital letter for the typeface.

Get: CapsHeight(self: Typeface) -> float

"""

    FaceNames = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a collection of culture-specific names for the System.Windows.Media.Typeface.

Get: FaceNames(self: Typeface) -> LanguageSpecificStringDictionary

"""

    FontFamily = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the name of the font family from which the typeface was constructed.

Get: FontFamily(self: Typeface) -> FontFamily

"""

    IsBoldSimulated = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Determines whether to simulate a bold weight for the glyphs represented by the System.Windows.Media.Typeface.

Get: IsBoldSimulated(self: Typeface) -> bool

"""

    IsObliqueSimulated = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Determines whether to simulate an italic style for the glyphs represented by the System.Windows.Media.Typeface.

Get: IsObliqueSimulated(self: Typeface) -> bool

"""

    Stretch = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the stretch value for the System.Windows.Media.Typeface. The stretch value determines whether a typeface is expanded or condensed when it is displayed.

Get: Stretch(self: Typeface) -> FontStretch

"""

    StrikethroughPosition = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates the distance from the baseline to the strikethrough for the typeface.

Get: StrikethroughPosition(self: Typeface) -> float

"""

    StrikethroughThickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates the thickness of the strikethrough relative to the font em size.

Get: StrikethroughThickness(self: Typeface) -> float

"""

    Style = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the style of the System.Windows.Media.Typeface.

Get: Style(self: Typeface) -> FontStyle

"""

    UnderlinePosition = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates the distance of the underline from the baseline for the typeface.

Get: UnderlinePosition(self: Typeface) -> float

"""

    UnderlineThickness = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates the thickness of the underline relative to the font em size for the typeface.

Get: UnderlineThickness(self: Typeface) -> float

"""

    Weight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the relative weight of the typeface.

Get: Weight(self: Typeface) -> FontWeight

"""

    XHeight = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the distance from the baseline to the top of an English lowercase letter for a typeface. The distance excludes ascenders.

Get: XHeight(self: Typeface) -> float

"""



class VectorCollection(Freezable, ISealable, IFormattable, IList, ICollection, IEnumerable, IList[Vector], ICollection[Vector], IEnumerable[Vector]):
    """
    Represents an ordered collection of System.Windows.Vector values.
    
    VectorCollection()
    VectorCollection(capacity: int)
    VectorCollection(collection: IEnumerable[Vector])
    """
    def Add(self, value):
        """
        Add(self: VectorCollection, value: Vector)
            Adds a System.Windows.Vector to the end of the System.Windows.Media.VectorCollection.
        
            value: The System.Windows.Vector to add to the end of the System.Windows.Media.VectorCollection.
        """
        pass

    def Clear(self):
        """
        Clear(self: VectorCollection)
            Removes all items from the System.Windows.Media.VectorCollection.
        """
        pass

    def Clone(self):
        """
        Clone(self: VectorCollection) -> VectorCollection
        
            Creates a modifiable clone of this System.Windows.Media.VectorCollection, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """ CloneCore(self: VectorCollection, source: Freezable) """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: VectorCollection) -> VectorCollection
        
            Creates a modifiable clone of this System.Windows.Media.VectorCollection object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but 
             their current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """ CloneCurrentValueCore(self: VectorCollection, source: Freezable) """
        pass

    def Contains(self, value):
        """
        Contains(self: VectorCollection, value: Vector) -> bool
        
            Determines whether the System.Windows.Media.VectorCollection contains the specified System.Windows.Vector.
        
            value: The System.Windows.Vector to locate in the System.Windows.Media.VectorCollection.
            Returns: true if the System.Windows.Vector is found in the System.Windows.Media.VectorCollection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: VectorCollection, array: Array[Vector], index: int)
            Copies the items of the System.Windows.Media.VectorCollection to an array, starting at the specified array index.
        
            array: The one-dimensional array that is the destination of the items copied from the System.Windows.Media.VectorCollection. The array must have zero-based indexing.
            index: The zero-based index in array at which copying begins.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: VectorCollection) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Freezable, isChecking: bool) -> bool
        
            Makes the System.Windows.Freezable object unmodifiable or tests whether it can be made unmodifiable.
        
            isChecking: true to return an indication of whether the object can be frozen (without actually freezing it); false to actually freeze the object.
            Returns: If isChecking is true, this method returns true if the System.Windows.Freezable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method returns true if the 
             if the specified System.Windows.Freezable is now unmodifiable, or false if it cannot be made unmodifiable.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """ GetAsFrozenCore(self: VectorCollection, source: Freezable) """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """ GetCurrentValueAsFrozenCore(self: VectorCollection, source: Freezable) """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: VectorCollection) -> Enumerator
        
            Returns an enumerator that can iterate through the System.Windows.Media.VectorCollection.
            Returns: An System.Windows.Media.VectorCollection.Enumerator that can be used to iterate through the System.Windows.Media.VectorCollection.
        """
        pass

    def IndexOf(self, value):
        """
        IndexOf(self: VectorCollection, value: Vector) -> int
        
            Determines the index of the specified item in the System.Windows.Media.VectorCollection.
        
            value: The System.Windows.Vector to locate in the System.Windows.Media.VectorCollection.
            Returns: The index of value if found in the System.Windows.Media.VectorCollection; otherwise, -1.
        """
        pass

    def Insert(self, index, value):
        """
        Insert(self: VectorCollection, index: int, value: Vector)
            Inserts a System.Windows.Vector into the System.Windows.Media.VectorCollection at the specified index.
        
            index: The zero-based index at which value should be inserted.
            value: The System.Windows.Vector to insert into the System.Windows.Media.VectorCollection.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    @staticmethod
    def Parse(source):
        """
        Parse(source: str) -> VectorCollection
        
            Converts a System.String representation of a collection of vectors into an equivalent System.Windows.Media.VectorCollection.
        
            source: The System.String representation of the collection of vectors.
            Returns: Returns the equivalent System.Windows.Media.VectorCollection.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def Remove(self, value):
        """
        Remove(self: VectorCollection, value: Vector) -> bool
        
            Removes the first occurrence of the specified System.Windows.Vector from the System.Windows.Media.VectorCollection.
        
            value: The System.Windows.Vector to remove from the System.Windows.Media.VectorCollection.
            Returns: true if value was removed from the System.Windows.Media.VectorCollection; otherwise, false.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: VectorCollection, index: int)
            Removes the System.Windows.Vector at the specified index.
        
            index: The zero-based index of the System.Windows.Vector to remove.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def ToString(self, provider=None):
        """
        ToString(self: VectorCollection, provider: IFormatProvider) -> str
        
            Creates a System.String representation of this System.Windows.Media.VectorCollection.
        
            provider: Culture-specific formatting information.
            Returns: Returns a System.String containing the System.Windows.Vector.X and System.Windows.Vector.Y values of the System.Windows.Vector structures in this System.Windows.Media.VectorCollection.
        ToString(self: VectorCollection) -> str
        
            Creates a System.String representation of this System.Windows.Media.VectorCollection.
            Returns: Returns a System.String containing the System.Windows.Vector.X and System.Windows.Vector.Y values of the System.Windows.Vector structures in this System.Windows.Media.VectorCollection.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, *args): #cannot find CLR method
        """
        __contains__(self: ICollection[Vector], item: Vector) -> bool
        __contains__(self: IList, value: object) -> bool
        
            Determines whether the System.Collections.IList contains a specific value.
        
            value: The object to locate in the System.Collections.IList.
            Returns: true if the System.Object is found in the System.Collections.IList; otherwise, false.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, *__args):
        """
        __new__(cls: type)
        __new__(cls: type, capacity: int)
        __new__(cls: type, collection: IEnumerable[Vector])
        """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of items contained in the System.Windows.Media.VectorCollection.

Get: Count(self: VectorCollection) -> int

"""


    Enumerator = None


class VectorCollectionConverter(TypeConverter):
    """
    Converts instances of other types to and from a System.Windows.Media.VectorCollection.
    
    VectorCollectionConverter()
    """
    def CanConvertFrom(self, *__args):
        """
        CanConvertFrom(self: VectorCollectionConverter, context: ITypeDescriptorContext, sourceType: Type) -> bool
        
            Determines whether an object can be converted from a specified type to an instance of a System.Windows.Media.VectorCollection.
        
            context: The context information of a type.
            sourceType: The type of the source to evaluate for conversion.
            Returns: true if you can convert the type to a System.Windows.Media.VectorCollection; otherwise, false.
        """
        pass

    def CanConvertTo(self, *__args):
        """
        CanConvertTo(self: VectorCollectionConverter, context: ITypeDescriptorContext, destinationType: Type) -> bool
        
            Determines whether an instance of a System.Windows.Media.VectorCollection can be converted to a different type.
        
            context: The context information of a type.
            destinationType: The needed type for which you are evaluating this System.Windows.Media.VectorCollection for conversion.
            Returns: true if this System.Windows.Media.VectorCollection can be converted to destinationType; otherwise, false.
        """
        pass

    def ConvertFrom(self, *__args):
        """
        ConvertFrom(self: VectorCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object) -> object
        
            Attempts to convert the specified object to a System.Windows.Media.VectorCollection.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type you want to convert.
            value: The object being converted.
            Returns: The System.Windows.Media.VectorCollection that is created from converting value.
        """
        pass

    def ConvertTo(self, *__args):
        """
        ConvertTo(self: VectorCollectionConverter, context: ITypeDescriptorContext, culture: CultureInfo, value: object, destinationType: Type) -> object
        
            Attempts to convert a System.Windows.Media.VectorCollection to a specified type.
        
            context: The context information of a type.
            culture: The System.Globalization.CultureInfo of the type you want to convert.
            value: The System.Windows.Media.VectorCollection to convert.
            destinationType: The type to convert this System.Windows.Media.VectorCollection to.
            Returns: The object that is created from converting this System.Windows.Media.VectorCollection.
        """
        pass


class VideoDrawing(Drawing, ISealable, IAnimatable, IResource, IDrawingContent):
    """
    Plays a media file. If the media is a video file, the System.Windows.Media.VideoDrawing draws it to the specified rectangle.
    
    VideoDrawing()
    """
    def Clone(self):
        """
        Clone(self: VideoDrawing) -> VideoDrawing
        
            Creates a modifiable clone of this System.Windows.Media.VideoDrawing, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data 
             bindings (but they might no longer resolve) but not animations or their current values.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: VideoDrawing) -> VideoDrawing
        
            Creates a modifiable clone of this System.Windows.Media.VideoDrawing object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: VideoDrawing) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """
        OnPropertyChanged(self: Freezable, e: DependencyPropertyChangedEventArgs)
            Overrides the System.Windows.DependencyObject implementation of System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs) to also invoke any 
             System.Windows.Freezable.Changed handlers in response to a changing dependency property of type System.Windows.Freezable.
        
        
            e: Event data that contains information about which property changed, and its old and new values.
        """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    Player = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the media player associated with the drawing.

Get: Player(self: VideoDrawing) -> MediaPlayer

Set: Player(self: VideoDrawing) = value
"""

    Rect = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the rectangular area in which the video is drawn.

Get: Rect(self: VideoDrawing) -> Rect

Set: Rect(self: VideoDrawing) = value
"""


    PlayerProperty = None
    RectProperty = None


class VisualBrush(TileBrush, ISealable, IAnimatable, IResource, IFormattable, ICyclicBrush):
    """
    Paints an area with a System.Windows.Media.VisualBrush.Visual.
    
    VisualBrush()
    VisualBrush(visual: Visual)
    """
    def Clone(self):
        """
        Clone(self: VisualBrush) -> VisualBrush
        
            Creates a modifiable clone of this System.Windows.Media.VisualBrush, making deep copies of this object's values.
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property is false even if the source's System.Windows.Freezable.IsFrozen property is true.
        """
        pass

    def CloneCore(self, *args): #cannot find CLR method
        """
        CloneCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a clone (deep copy) of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The object to clone.
        """
        pass

    def CloneCurrentValue(self):
        """
        CloneCurrentValue(self: VisualBrush) -> VisualBrush
        
            Creates a modifiable clone of this System.Windows.Media.VisualBrush object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their 
             current values are.
        
            Returns: A modifiable clone of the current object. The cloned object's System.Windows.Freezable.IsFrozen property will be false even if the source's System.Windows.Freezable.IsFrozen property was true.
        """
        pass

    def CloneCurrentValueCore(self, *args): #cannot find CLR method
        """
        CloneCurrentValueCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a modifiable clone (deep copy) of the specified System.Windows.Freezable using current property values.
        
            sourceFreezable: The System.Windows.Freezable to be cloned.
        """
        pass

    def CreateInstance(self, *args): #cannot find CLR method
        """
        CreateInstance(self: Freezable) -> Freezable
        
            Initializes a new instance of the System.Windows.Freezable class.
            Returns: The new instance.
        """
        pass

    def CreateInstanceCore(self, *args): #cannot find CLR method
        """ CreateInstanceCore(self: VisualBrush) -> Freezable """
        pass

    def FreezeCore(self, *args): #cannot find CLR method
        """
        FreezeCore(self: Animatable, isChecking: bool) -> bool
        
            Makes this System.Windows.Media.Animation.Animatable object unmodifiable or determines whether it can be made unmodifiable.
        
            isChecking: true if this method should simply determine whether this instance can be frozen. false if this instance should actually freeze itself when this method is called.
            Returns: If isChecking is true, this method returns true if this System.Windows.Media.Animation.Animatable can be made unmodifiable, or false if it cannot be made unmodifiable. If isChecking is false, this method 
             returns true if the if this System.Windows.Media.Animation.Animatable is now unmodifiable, or false if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of 
             this object.
        """
        pass

    def GetAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the instance a frozen clone of the specified System.Windows.Freezable using base (non-animated) property values.
        
            sourceFreezable: The instance to copy.
        """
        pass

    def GetContentBounds(self, *args): #cannot find CLR method
        """ GetContentBounds(self: VisualBrush) -> Rect """
        pass

    def GetCurrentValueAsFrozenCore(self, *args): #cannot find CLR method
        """
        GetCurrentValueAsFrozenCore(self: Freezable, sourceFreezable: Freezable)
            Makes the current instance a frozen clone of the specified System.Windows.Freezable. If the object has animated dependency properties, their current animated values are copied.
        
            sourceFreezable: The System.Windows.Freezable to copy and freeze.
        """
        pass

    def OnChanged(self, *args): #cannot find CLR method
        """
        OnChanged(self: Freezable)
            Called when the current System.Windows.Freezable object is modified.
        """
        pass

    def OnFreezablePropertyChanged(self, *args): #cannot find CLR method
        """
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject, property: DependencyProperty)
            This member supports the Windows Presentation Foundation (WPF) infrastructure and is not intended to be used directly from your code.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
            property: The property that changed.
        OnFreezablePropertyChanged(self: Freezable, oldValue: DependencyObject, newValue: DependencyObject)
            Ensures that appropriate context pointers are established for a System.Windows.DependencyObjectType data member that has just been set.
        
            oldValue: The previous value of the data member.
            newValue: The current value of the data member.
        """
        pass

    def OnPropertyChanged(self, *args): #cannot find CLR method
        """ OnPropertyChanged(self: VisualBrush, e: DependencyPropertyChangedEventArgs) """
        pass

    def ReadPreamble(self, *args): #cannot find CLR method
        """
        ReadPreamble(self: Freezable)
            Ensures that the System.Windows.Freezable is being accessed from a valid thread. Inheritors of System.Windows.Freezable must call this method at the beginning of any API that reads data members that are 
             not dependency properties.
        """
        pass

    def ShouldSerializeProperty(self, *args): #cannot find CLR method
        """
        ShouldSerializeProperty(self: DependencyObject, dp: DependencyProperty) -> bool
        
            Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.
        
            dp: The identifier for the dependency property that should be serialized.
            Returns: true if the dependency property that is supplied should be value-serialized; otherwise, false.
        """
        pass

    def WritePostscript(self, *args): #cannot find CLR method
        """
        WritePostscript(self: Freezable)
            Raises the System.Windows.Freezable.Changed event for the System.Windows.Freezable and invokes its System.Windows.Freezable.OnChanged method. Classes that derive from System.Windows.Freezable should call 
             this method at the end of any API that modifies class members that are not stored as dependency properties.
        """
        pass

    def WritePreamble(self, *args): #cannot find CLR method
        """
        WritePreamble(self: Freezable)
            Verifies that the System.Windows.Freezable is not frozen and that it is being accessed from a valid threading context. System.Windows.Freezable inheritors should call this method at the beginning of any 
             API that writes to data members that are not dependency properties.
        """
        pass

    def __format__(self, *args): #cannot find CLR method
        """ __format__(formattable: IFormattable, format: str) -> str """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, visual=None):
        """
        __new__(cls: type)
        __new__(cls: type, visual: Visual)
        """
        pass

    def __str__(self, *args): #cannot find CLR method
        pass

    AutoLayoutContent = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets a value that specifies whether this System.Windows.Media.VisualBrush will run layout its System.Windows.Media.VisualBrush.Visual.

Get: AutoLayoutContent(self: VisualBrush) -> bool

Set: AutoLayoutContent(self: VisualBrush) = value
"""

    Visual = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the brush's content.

Get: Visual(self: VisualBrush) -> Visual

Set: Visual(self: VisualBrush) = value
"""


    AutoLayoutContentProperty = None
    VisualProperty = None


class VisualCollection(object, ICollection, IEnumerable):
    """
    Represents an ordered collection of System.Windows.Media.Visual objects.
    
    VisualCollection(parent: Visual)
    """
    def Add(self, visual):
        """
        Add(self: VisualCollection, visual: Visual) -> int
        
            Appends a System.Windows.Media.Visual to the end of the System.Windows.Media.VisualCollection.
        
            visual: The System.Windows.Media.Visual to append to the System.Windows.Media.VisualCollection.
            Returns: The index in the collection at which visual was added.
        """
        pass

    def Clear(self):
        """
        Clear(self: VisualCollection)
            Removes all elements from the System.Windows.Media.VisualCollection.
        """
        pass

    def Contains(self, visual):
        """
        Contains(self: VisualCollection, visual: Visual) -> bool
        
            Returns a System.Boolean value that indicates whether the specified System.Windows.Media.Visual is contained in the collection.
        
            visual: The System.Windows.Media.Visual to search for in the collection.
            Returns: true if visual is contained in the collection; otherwise, false.
        """
        pass

    def CopyTo(self, array, index):
        """
        CopyTo(self: VisualCollection, array: Array[Visual], index: int)
            Copies the current collection into the passed System.Windows.Media.Visual array.
        
            array: An array of System.Windows.Media.Visual objects (which must have zero-based indexing).
            index: The index to start copying from within array.
        CopyTo(self: VisualCollection, array: Array, index: int)
            Copies the items in the collection to an array, starting at a specific array index.
        
            array: The one-dimensional System.Array that is the destination of the elements that are copied from the System.Windows.Media.VisualCollection.
            index: The zero-based index in array at which copying begins.
        """
        pass

    def GetEnumerator(self):
        """
        GetEnumerator(self: VisualCollection) -> Enumerator
        
            Retrieves an enumerator that can iterate through the System.Windows.Media.VisualCollection.
            Returns: An enumerator that can be used to iterate through the collection.
        """
        pass

    def IndexOf(self, visual):
        """
        IndexOf(self: VisualCollection, visual: Visual) -> int
        
            Returns the zero-based index of the System.Windows.Media.Visual.
        
            visual: The System.Windows.Media.Visual to locate in the System.Windows.Media.VisualCollection.
            Returns: The index of the System.Windows.Media.Visual.
        """
        pass

    def Insert(self, index, visual):
        """
        Insert(self: VisualCollection, index: int, visual: Visual)
            Inserts an element into the System.Windows.Media.VisualCollection at the specified index.
        
            index: The zero-based index at which the value should be inserted.
            visual: The System.Windows.Media.Visual to insert into the System.Windows.Media.VisualCollection.
        """
        pass

    def Remove(self, visual):
        """
        Remove(self: VisualCollection, visual: Visual)
            Removes the specified System.Windows.Media.Visual object from the System.Windows.Media.VisualCollection.
        
            visual: The System.Windows.Media.Visual to remove from the System.Windows.Media.VisualCollection.
        """
        pass

    def RemoveAt(self, index):
        """
        RemoveAt(self: VisualCollection, index: int)
            Removes the visual object at the specified index in the System.Windows.Media.VisualCollection.
        
            index: The zero-based index of the visual to remove.
        """
        pass

    def RemoveRange(self, index, count):
        """
        RemoveRange(self: VisualCollection, index: int, count: int)
            Removes a range of visual objects from the System.Windows.Media.VisualCollection.
        
            index: The zero-based index of the range of elements to remove.
            count: The number of elements to remove.
        """
        pass

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        pass

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    def __iter__(self, *args): #cannot find CLR method
        """ __iter__(self: IEnumerable) -> object """
        pass

    def __len__(self, *args): #cannot find CLR method
        """ x.__len__() <==> len(x) """
        pass

    @staticmethod # known case of __new__
    def __new__(self, parent):
        """ __new__(cls: type, parent: Visual) """
        pass

    def __repr__(self, *args): #cannot find CLR method
        """ __repr__(self: object) -> str """
        pass

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        pass

    Capacity = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets or sets the number of elements that the System.Windows.Media.VisualCollection can contain.

Get: Capacity(self: VisualCollection) -> int

Set: Capacity(self: VisualCollection) = value
"""

    Count = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets the number of elements in the collection.

Get: Count(self: VisualCollection) -> int

"""

    IsReadOnly = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether the System.Windows.Media.VisualCollection is read-only.

Get: IsReadOnly(self: VisualCollection) -> bool

"""

    IsSynchronized = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets a value that indicates whether access to the System.Windows.Media.VisualCollection is synchronized (thread-safe).

Get: IsSynchronized(self: VisualCollection) -> bool

"""

    SyncRoot = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Gets an object that can be used to synchronize access to the System.Windows.Media.VisualCollection.

Get: SyncRoot(self: VisualCollection) -> object

"""


    Enumerator = None


class VisualTarget(CompositionTarget, IDisposable, ICompositionTarget):
    """
    Provides functionality for connecting one visual tree to another visual tree across thread boundaries.
    
    VisualTarget(hostVisual: HostVisual)
    """
    def Dispose(self):
        """
        Dispose(self: VisualTarget)
            Cleans up the state associated with the System.Windows.Interop.HwndTarget.
        """
        pass

    def __enter__(self, *args): #cannot find CLR method
        """
        __enter__(self: IDisposable) -> object
        
            Provides the implementation of __enter__ for objects which implement IDisposable.
        """
        pass

    def __exit__(self, *args): #cannot find CLR method
        """
        __exit__(self: IDisposable, exc_type: object, exc_value: object, exc_back: object)
            Provides the implementation of __exit__ for objects which implement IDisposable.
        """
        pass

    def __init__(self, *args): #cannot find CLR method
        """ x.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signaturex.__init__(...) initializes x; see x.__class__.__doc__ for signature """
        pass

    @staticmethod # known case of __new__
    def __new__(self, hostVisual):
        """ __new__(cls: type, hostVisual: HostVisual) """
        pass

    TransformFromDevice = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Returns a matrix that can be used to transform coordinates from the rendering destination device to the System.Windows.Media.VisualTarget.

Get: TransformFromDevice(self: VisualTarget) -> Matrix

"""

    TransformToDevice = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default
    """Returns a matrix that can be used to transform coordinates from the System.Windows.Media.VisualTarget to the rendering destination device.

Get: TransformToDevice(self: VisualTarget) -> Matrix

"""



class VisualTreeHelper(object):
    """ Provides utility methods that perform common tasks involving nodes in a visual tree. """
    @staticmethod
    def GetBitmapEffect(reference):
        """
        GetBitmapEffect(reference: Visual) -> BitmapEffect
        
            Returns the System.Windows.Media.Effects.BitmapEffect value for the specified System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual that contains the bitmap effect.
            Returns: The System.Windows.Media.Effects.BitmapEffect for this System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetBitmapEffectInput(reference):
        """
        GetBitmapEffectInput(reference: Visual) -> BitmapEffectInput
        
            Returns the System.Windows.Media.Effects.BitmapEffectInput value for the specified System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual that contains the bitmap effect input value.
            Returns: The System.Windows.Media.Effects.BitmapEffectInput for this System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetCacheMode(reference):
        """
        GetCacheMode(reference: Visual) -> CacheMode
        
            Retrieves the cached representation of the specified System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual to get the System.Windows.Media.CacheMode for.
            Returns: The System.Windows.Media.CacheMode for reference.
        """
        pass

    @staticmethod
    def GetChild(reference, childIndex):
        """
        GetChild(reference: DependencyObject, childIndex: int) -> DependencyObject
        
            Returns the child visual object from the specified collection index within a specified parent.
        
            reference: The parent visual, referenced as a System.Windows.DependencyObject.
            childIndex: The index that represents the child visual that is contained by reference.
            Returns: The index value of the child visual object.
        """
        pass

    @staticmethod
    def GetChildrenCount(reference):
        """
        GetChildrenCount(reference: DependencyObject) -> int
        
            Returns the number of children that the specified visual object contains.
        
            reference: The parent visual that is referenced as a System.Windows.DependencyObject.
            Returns: The number of child visuals that the parent visual contains.
        """
        pass

    @staticmethod
    def GetClip(reference):
        """
        GetClip(reference: Visual) -> Geometry
        
            Return the clip region of the specified System.Windows.Media.Visual as a System.Windows.Media.Geometry value.
        
            reference: The System.Windows.Media.Visual whose clip region value is returned.
            Returns: The clip region value of the System.Windows.Media.Visual returned as a System.Windows.Media.Geometry type.
        """
        pass

    @staticmethod
    def GetContentBounds(reference):
        """
        GetContentBounds(reference: Visual3D) -> Rect3D
        
            Returns the cached bounding box rectangle for the specified System.Windows.Media.Media3D.Visual3D.
        
            reference: The 3D visual whose bounding box value is computed.
            Returns: The bounding box 3D rectangle for the System.Windows.Media.Media3D.Visual3D.
        GetContentBounds(reference: Visual) -> Rect
        
            Returns the cached bounding box rectangle for the specified System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose bounding box value is computed.
            Returns: The bounding box rectangle for the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetDescendantBounds(reference):
        """
        GetDescendantBounds(reference: Visual3D) -> Rect3D
        
            Returns the union of all the content bounding boxes for all the descendants of the specified System.Windows.Media.Media3D.Visual3D, which includes the content bounding box of the 
             System.Windows.Media.Media3D.Visual3D.
        
        
            reference: The 3D visual whose bounding box value for all descendants is computed.
            Returns: Returns the bounding box 3D rectangle for the 3D visual.
        GetDescendantBounds(reference: Visual) -> Rect
        
            Returns the union of all the content bounding boxes for all the descendants of the System.Windows.Media.Visual, which includes the content bounding box of the System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose bounding box value for all descendants is computed.
            Returns: The bounding box rectangle for the specified System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetDpi(visual):
        """ GetDpi(visual: Visual) -> DpiScale """
        pass

    @staticmethod
    def GetDrawing(reference):
        """
        GetDrawing(reference: Visual) -> DrawingGroup
        
            Returns the drawing content of the specified System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose drawing content is returned.
            Returns: The drawing content of the System.Windows.Media.Visual returned as a System.Windows.Media.DrawingGroup type.
        """
        pass

    @staticmethod
    def GetEdgeMode(reference):
        """
        GetEdgeMode(reference: Visual) -> EdgeMode
        
            Returns the edge mode of the specified System.Windows.Media.Visual as an System.Windows.Media.EdgeMode value.
        
            reference: The System.Windows.Media.Visual whose edge mode value is returned.
            Returns: The System.Windows.Media.EdgeMode value of the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetEffect(reference):
        """
        GetEffect(reference: Visual) -> Effect
        
            Gets the bitmap effect for the specified System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual to get the bitmap effect for.
            Returns: The System.Windows.Media.Effects.Effect applied to reference.
        """
        pass

    @staticmethod
    def GetOffset(reference):
        """
        GetOffset(reference: Visual) -> Vector
        
            Returns the offset of the System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose offset is returned.
            Returns: A System.Windows.Vector that represents the offset value of the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetOpacity(reference):
        """
        GetOpacity(reference: Visual) -> float
        
            Returns the opacity of the System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose opacity value is returned.
            Returns: A value of type System.Double that represents the opacity value of the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetOpacityMask(reference):
        """
        GetOpacityMask(reference: Visual) -> Brush
        
            Returns a System.Windows.Media.Brush value that represents the opacity mask of the System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose opacity mask value is returned.
            Returns: A value of type System.Windows.Media.Brush that represents the opacity mask value of the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetParent(reference):
        """
        GetParent(reference: DependencyObject) -> DependencyObject
        
            Returns a System.Windows.DependencyObject value that represents the parent of the visual object.
        
            reference: The visual whose parent is returned.
            Returns: The parent of the visual.
        """
        pass

    @staticmethod
    def GetTransform(reference):
        """
        GetTransform(reference: Visual) -> Transform
        
            Returns a System.Windows.Media.Transform value for the System.Windows.Media.Visual.
        
            reference: The System.Windows.Media.Visual whose transform value is returned.
            Returns: The transform value of the System.Windows.Media.Visual, or null if reference does not have a transform defined.
        """
        pass

    @staticmethod
    def GetXSnappingGuidelines(reference):
        """
        GetXSnappingGuidelines(reference: Visual) -> DoubleCollection
        
            Returns an X-coordinate (vertical) guideline collection.
        
            reference: The System.Windows.Media.Visual whose X-coordinate guideline collection is returned.
            Returns: The X-coordinate guideline collection of the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def GetYSnappingGuidelines(reference):
        """
        GetYSnappingGuidelines(reference: Visual) -> DoubleCollection
        
            Returns a Y-coordinate (horizontal) guideline collection.
        
            reference: The System.Windows.Media.Visual whose Y-coordinate guideline collection is returned.
            Returns: The Y-coordinate guideline collection of the System.Windows.Media.Visual.
        """
        pass

    @staticmethod
    def HitTest(reference, *__args):
        """
        HitTest(reference: Visual3D, filterCallback: HitTestFilterCallback, resultCallback: HitTestResultCallback, hitTestParameters: HitTestParameters3D)
            Initiates a hit test on the specified System.Windows.Media.Media3D.Visual3D, with caller-defined System.Windows.Media.HitTestFilterCallback and System.Windows.Media.HitTestResultCallback methods.
        
            reference: The System.Windows.Media.Media3D.Visual3D to hit test.
            filterCallback: The method that represents the hit test filter callback value.
            resultCallback: The method that represents the hit test result callback value.
            hitTestParameters: The 3D parameter value to hit test against.
        HitTest(reference: Visual, filterCallback: HitTestFilterCallback, resultCallback: HitTestResultCallback, hitTestParameters: HitTestParameters)
            Initiates a hit test on the specified System.Windows.Media.Visual, with caller-defined System.Windows.Media.HitTestFilterCallback and System.Windows.Media.HitTestResultCallback methods.
        
            reference: The System.Windows.Media.Visual to hit test.
            filterCallback: The method that represents the hit test filter callback value.
            resultCallback: The method that represents the hit test result callback value.
            hitTestParameters: The parameter value to hit test against.
        HitTest(reference: Visual, point: Point) -> HitTestResult
        
            Returns the topmost System.Windows.Media.Visual object of a hit test by specifying a System.Windows.Point.
        
            reference: The System.Windows.Media.Visual to hit test.
            point: The point value to hit test against.
            Returns: The hit test result of the System.Windows.Media.Visual, returned as a System.Windows.Media.HitTestResult type.
        """
        pass

    @staticmethod
    def SetRootDpi(visual, dpiInfo):
        """ SetRootDpi(visual: Visual, dpiInfo: DpiScale) """
        pass

    __all__ = [
        'GetBitmapEffect',
        'GetBitmapEffectInput',
        'GetCacheMode',
        'GetChild',
        'GetChildrenCount',
        'GetClip',
        'GetContentBounds',
        'GetDescendantBounds',
        'GetDpi',
        'GetDrawing',
        'GetEdgeMode',
        'GetEffect',
        'GetOffset',
        'GetOpacity',
        'GetOpacityMask',
        'GetParent',
        'GetTransform',
        'GetXSnappingGuidelines',
        'GetYSnappingGuidelines',
        'HitTest',
        'SetRootDpi',
    ]


# variables with complex values

